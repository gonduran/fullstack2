var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AdminClientManagementComponent.html",[0,0.049,1,0.716]],["body/components/AdminClientManagementComponent.html",[0,0.06,1,1.11,2,0.762,3,0.129,4,0.113,5,0.528,6,2.366,7,0.528,8,0.528,9,0.113,10,2.591,11,1.436,12,3.559,13,1.274,14,0.599,15,0.774,16,0.774,17,0.528,18,2.737,19,1.373,20,1.162,21,1.021,22,1.153,23,1.598,24,0.599,25,0.224,26,0.599,27,0.774,28,0.774,29,2.754,30,3.746,31,3.616,32,2.754,33,0.599,34,2.269,35,0.198,36,0.277,37,4.39,38,4.39,39,4.39,40,3.323,41,0.638,42,0.579,43,3.616,44,3.616,45,4.915,46,0.867,47,0.867,48,4.915,49,4.915,50,0.304,51,0.559,52,0.872,53,0.867,54,0.814,55,4.915,56,1.917,57,1.221,58,2.145,59,1.084,60,3.616,61,1.956,62,3.721,63,0.774,64,0.022,65,0.533,66,0.237,67,0.774,68,2.018,69,2.532,70,0.863,71,3.721,72,2.737,73,1.314,74,2.737,75,3.322,76,2.47,77,2.737,78,2.269,79,2.366,80,1.717,81,0.938,82,1.299,83,2.172,84,0.868,85,1.068,86,1.005,87,2.737,88,1.194,89,1.337,90,1.623,91,0.993,92,0.434,93,3.616,94,0.852,95,2.366,96,4.535,97,3.616,98,1.956,99,1.361,100,1.598,101,2.188,102,2.806,103,0.658,104,3.721,105,2.172,106,1.926,107,3.616,108,2.366,109,4.915,110,1.947,111,3.616,112,1.417,113,4.009,114,4.227,115,2.366,116,2.172,117,1.504,118,1.791,119,3.721,120,2.172,121,1.947,122,2.737,123,2.477,124,2.737,125,1.504,126,2.477,127,2.737,128,2.737,129,2.095,130,2.737,131,1.926,132,2.737,133,2.366,134,2.737,135,2.366,136,3.616,137,1.843,138,3.616,139,1.747,140,3.616,141,4.195,142,2.317,143,2.366,144,3.616,145,2.095,146,3.128,147,1.48,148,1.373,149,2.019,150,2.72,151,2.806,152,3.503,153,0.993,154,0.846,155,3.503,156,3.503,157,2.366,158,2.366,159,1.95,160,0.348,161,0.417,162,0.417,163,0.113,164,0.599,165,0.526,166,0.417,167,0.417,168,0.699,169,0.559,170,1.045,171,1.62,172,1.484,173,0.984,174,1.155,175,0.826,176,0.129,177,0.129,178,1.87,179,0.386,180,0.417,181,1.416,182,0.638,183,0.37,184,0.417,185,0.417,186,0.417,187,0.417,188,0.638,189,0.417,190,0.417,191,0.417,192,0.417,193,0.599,194,0.417,195,0.417,196,4.915,197,0.417,198,2.366,199,2.366,200,2.019,201,2.366,202,2.366,203,2.366,204,2.366,205,1.036,206,2.366,207,2.366,208,2.366,209,4.39,210,2.366,211,2.737,212,2.366,213,2.366,214,2.737,215,2.366,216,2.737,217,4.39,218,2.366,219,3.323,220,1.791,221,3.616,222,0.591,223,2.366,224,2.366,225,2.366,226,2.366,227,2.366,228,2.366,229,2.366,230,2.366,231,1.045,232,1.337,233,0.426,234,1.598,235,1.337,236,1.045,237,0.875,238,1.161,239,1.161,240,4.103,241,2.095,242,2.477,243,2.269,244,0.854,245,2.737,246,0.956,247,2.737,248,2.477,249,2.737,250,1.743,251,5.584,252,2.477,253,3.616,254,3.616,255,3.616,256,3.616,257,3.616,258,1.649,259,3.366,260,1.299,261,1.299,262,2.737,263,0.559,264,0.854,265,0.854,266,0.599,267,0.854,268,3.616,269,2.019,270,2.366,271,2.366,272,3.616,273,2.366,274,3.616,275,3.746,276,3.616,277,2.366,278,2.366,279,3.616,280,2.366,281,2.366,282,2.019,283,2.366,284,2.366,285,2.366,286,2.366,287,3.616,288,2.366,289,1.791,290,4.39,291,3.616,292,2.366,293,2.366,294,2.366,295,2.366,296,2.366,297,2.366,298,2.366,299,4.915,300,4.39,301,4.39,302,2.366,303,2.366,304,2.366,305,2.366,306,3.616,307,2.366,308,2.366,309,3.616,310,2.366,311,3.616,312,2.366,313,2.366,314,2.366,315,2.366,316,3.616,317,2.366,318,2.366,319,2.366,320,2.366,321,2.366,322,2.366,323,2.366,324,0.528,325,0.807,326,0.807,327,0.528,328,0.528,329,0.98,330,0.443,331,0.344,332,0.47,333,0.807,334,0.47,335,0.807,336,0.417,337,0.322,338,0.528,339,0.443,340,0.238,341,0.47,342,0.528,343,0.443,344,0.528,345,0.47,346,0.528,347,0.47,348,0.528,349,0.47,350,0.47,351,0.47,352,0.528,353,0.47,354,0.903,355,0.528,356,0.47,357,0.984,358,0.528,359,0.47,360,0.528,361,0.47,362,0.528,363,0.47,364,0.528,365,0.47,366,0.528,367,0.47,368,0.528,369,0.47,370,0.528,371,0.47,372,0.528,373,0.528,374,0.528,375,0.011,376,0.011]],["title/components/AdminContactManagementComponent.html",[0,0.049,330,0.674]],["body/components/AdminContactManagementComponent.html",[0,0.075,1,0.7,2,1.018,3,0.193,4,0.168,5,0.787,7,0.787,8,0.787,9,0.168,10,2.658,11,0.7,12,3.652,13,1.897,14,0.8,15,0.971,16,0.971,17,0.787,20,1.211,21,1.064,22,1.232,23,2.434,24,0.8,25,0.298,26,0.8,27,0.971,28,0.971,29,3.456,32,3.029,33,0.8,34,3.029,35,0.188,36,0.37,41,0.851,42,0.698,46,1.045,47,1.045,50,0.298,51,0.832,52,0.933,53,0.971,54,0.913,56,2.05,57,1.305,59,1.108,63,0.971,64,0.022,65,0.645,66,0.242,67,0.971,70,0.569,75,2.426,76,2.426,82,1.641,84,0.751,90,1.594,91,1.062,92,0.432,94,0.893,103,0.569,106,1.892,118,2.667,131,1.892,137,1.594,139,1.456,147,0.984,148,0.984,150,2.007,153,0.913,154,0.513,160,0.371,161,0.621,162,0.621,163,0.168,164,0.8,165,0.703,166,0.621,167,0.621,169,0.832,170,1.557,173,1.465,174,1.234,175,1.231,176,0.193,177,0.193,179,0.429,180,0.621,182,0.851,183,0.366,184,0.621,185,0.621,186,0.621,187,0.621,188,0.851,189,0.621,190,0.621,191,0.621,192,0.621,193,0.8,194,0.621,195,0.621,197,0.621,231,1.557,232,1.785,233,0.569,234,2.133,235,1.785,236,2.133,237,1.303,238,1.4,239,1.4,240,4.579,241,3.715,242,3.307,243,3.029,244,1.141,245,3.655,246,1.276,247,3.655,248,3.307,249,3.655,250,1.507,252,3.307,263,0.832,264,1.141,265,1.141,266,0.8,267,1.141,324,0.787,325,1.078,326,1.078,327,0.787,328,0.787,329,1.23,330,1.11,331,1.074,332,0.7,333,1.078,334,0.7,335,1.078,336,0.621,337,0.479,338,0.787,339,0.66,340,0.486,341,0.7,342,0.787,343,0.66,344,0.787,345,0.7,346,0.787,347,0.7,348,0.787,349,0.7,350,0.7,351,0.7,352,0.787,353,0.7,354,1.021,355,0.787,356,0.7,357,1.131,358,0.787,359,0.7,360,0.787,361,0.7,362,0.787,363,0.7,364,0.787,365,0.7,366,0.787,367,0.7,368,0.787,369,0.7,370,0.787,371,0.7,372,0.787,373,0.787,374,0.787,375,0.014,376,0.014,377,0.851,378,3.773,379,4.121,380,5.058,381,4.828,382,4.702,383,3.19,384,3.523,385,3.523,386,3.307,387,3.523,388,3.523,389,3.523,390,3.523,391,4.121,392,3.523,393,2.667,394,0.355,395,1.201,396,2.21,397,2.21,398,2.21,399,2.159,400,1.381,401,3.007,402,4.702,403,2.413,404,3.007,405,3.007,406,5.058,407,2.413,408,3.007,409,3.007,410,3.307,411,3.307,412,1.785,413,2.798,414,4.828,415,4.828,416,4.828,417,4.828,418,4.828,419,4.828,420,4.121]],["title/components/AdminLoginComponent.html",[0,0.049,332,0.716]],["body/components/AdminLoginComponent.html",[0,0.078,1,0.75,2,1.066,3,0.206,4,0.18,5,0.842,7,0.842,8,0.842,9,0.18,10,2.619,11,0.75,14,0.838,15,1.006,16,1.006,17,0.842,20,1.218,21,1.07,22,1.245,23,2.235,24,0.838,25,0.313,26,0.838,27,1.006,28,1.006,33,0.838,35,0.129,36,0.388,41,0.892,42,0.718,46,1.075,47,1.075,50,0.313,51,0.892,52,0.952,53,1.006,54,0.945,56,2.087,57,1.329,58,2.335,59,1.084,61,1.178,63,0.665,64,0.022,65,0.574,66,0.206,67,0.665,70,0.749,81,0.829,83,1.667,84,0.988,85,1.114,90,1.246,91,1.01,92,0.413,103,0.596,142,2.254,153,0.945,154,0.887,160,0.38,161,0.665,162,0.665,163,0.241,164,0.838,165,0.736,166,0.665,167,0.665,169,0.892,170,1.667,172,2.367,174,1.212,176,0.206,177,0.206,179,0.47,180,0.665,182,0.892,183,0.405,184,0.665,185,0.665,186,0.665,187,0.665,188,0.892,189,0.665,190,0.665,191,0.665,192,0.665,193,0.838,194,0.665,195,0.665,197,0.665,231,1.667,232,1.87,233,0.596,234,2.809,236,2.235,237,2.42,238,1.44,239,1.44,260,1.729,261,1.729,263,0.892,264,1.195,265,1.195,266,0.838,267,1.195,324,0.842,325,1.129,326,1.129,327,0.842,328,0.842,329,1.274,330,0.707,331,0.549,332,1.212,333,1.129,334,0.75,335,1.129,336,0.665,337,0.513,338,0.842,339,0.707,340,0.574,341,0.75,342,0.842,343,0.707,344,0.842,345,0.75,346,0.842,347,0.75,348,0.842,349,0.75,350,0.75,351,0.75,352,0.842,353,0.75,354,1.039,355,0.842,356,0.75,357,1.154,358,0.842,359,0.75,360,0.842,361,0.75,362,0.842,363,0.75,364,0.842,365,0.75,366,0.842,367,0.75,368,0.842,369,0.75,370,0.842,371,0.75,372,0.842,373,0.842,374,0.842,375,0.015,376,0.015,377,0.892,421,5.705,422,3.221,423,1.884,424,4.317,425,4.317,426,5.706,427,3.532,428,1.884,429,2.013,430,3.306,431,3.532,432,3.532,433,5.059,434,3.774,435,3.774,436,3.774,437,3.774,438,1.884,439,1.246,440,3.774,441,1.246,442,1.67,443,2.186,444,3.774,445,3.774,446,3.774,447,3.774,448,3.774,449,5.059,450,3.774,451,2.186,452,1.767,453,3.221,454,1.054,455,0.842,456,2.186,457,2.585,458,0.842,459,3.774,460,2.013,461,2.931,462,2.103,463,2.931,464,2.235,465,1.129]],["title/components/AdminLogoutComponent.html",[0,0.049,334,0.716]],["body/components/AdminLogoutComponent.html",[0,0.081,1,0.824,2,1.135,3,0.227,4,0.198,5,0.926,7,0.926,8,0.926,9,0.198,10,2.569,11,0.824,14,0.892,15,1.054,16,1.054,17,0.926,20,1.227,21,1.078,22,1.263,23,1.832,24,0.892,25,0.333,26,0.892,27,1.054,28,1.054,33,0.892,35,0.142,41,0.949,42,0.745,46,1.115,47,1.115,50,0.333,51,0.98,52,0.978,53,1.054,54,0.99,56,2.135,57,1.36,59,1.048,63,0.731,64,0.022,65,0.602,66,0.169,67,0.731,70,0.634,84,1.044,90,1.777,91,0.99,92,0.415,103,0.634,154,0.604,160,0.374,161,0.731,162,0.731,163,0.198,164,0.892,165,0.783,166,0.731,167,0.731,170,1.832,174,1.258,176,0.227,177,0.227,179,0.438,180,0.731,182,0.949,183,0.369,184,0.731,185,0.731,186,0.731,187,0.731,188,0.949,189,0.731,190,0.731,191,0.731,192,0.731,193,0.892,194,0.731,195,0.731,197,0.949,231,1.832,232,1.99,233,0.634,234,3.064,235,1.99,236,2.378,237,2.21,238,1.495,239,1.495,244,1.272,263,0.98,264,1.272,265,1.272,266,0.892,267,1.272,324,0.926,325,1.202,326,1.202,327,0.926,328,0.926,329,1.334,330,0.777,331,0.604,332,0.824,333,1.202,334,1.258,335,1.202,336,0.731,337,0.564,338,0.926,339,0.777,340,0.542,341,0.824,342,0.926,343,0.777,344,0.926,345,0.824,346,0.926,347,0.824,348,0.926,349,0.824,350,0.824,351,0.824,352,0.926,353,0.824,354,1.063,355,0.926,356,0.824,357,1.185,358,0.926,359,0.824,360,0.926,361,0.824,362,0.926,363,0.824,364,0.926,365,0.824,366,0.926,367,0.824,368,0.926,369,0.824,370,0.926,371,0.824,372,0.926,373,0.926,374,0.926,375,0.016,376,0.016,377,0.949,465,1.202,466,5.595,467,3.539,468,2.705,469,4.594,470,4.594,471,4.147,472,4.147,473,4.147,474,4.147,475,4.147,476,4.594,477,2.533,478,4.594]],["title/components/AdminOrderMonitoringComponent.html",[0,0.049,336,0.635]],["body/components/AdminOrderMonitoringComponent.html",[0,0.072,1,0.642,2,0.958,3,0.177,4,0.154,5,0.721,7,0.721,8,0.721,9,0.154,10,2.718,11,0.642,14,0.753,15,0.928,16,0.928,17,0.721,20,1.202,21,1.056,22,1.213,23,1.428,24,0.753,25,0.281,26,0.753,27,0.928,28,0.928,33,0.753,35,0.11,36,0.349,41,0.802,42,0.672,46,1.007,47,1.007,50,0.281,51,0.763,52,0.908,53,0.928,54,0.872,56,2.002,57,1.275,59,1.14,63,1.007,64,0.022,65,0.628,66,0.267,67,1.007,75,2.285,76,2.285,82,1.59,84,0.707,90,1.501,91,1.062,92,0.417,94,0.973,99,1.07,103,0.535,104,3.442,114,4.322,139,1.509,147,1.47,148,1.47,150,1.89,151,2.285,153,0.872,154,0.47,159,2.101,160,0.364,161,0.57,162,0.57,163,0.154,164,0.753,165,0.662,166,0.57,167,0.57,169,0.763,170,1.428,174,1.135,176,0.177,177,0.177,179,0.432,180,0.57,181,1.074,182,0.802,183,0.396,184,0.57,185,0.57,186,0.57,187,0.57,188,0.802,189,0.57,190,0.57,191,0.57,192,0.57,193,0.753,194,0.57,195,0.57,197,0.57,231,1.428,232,1.681,233,0.535,234,2.009,235,1.681,236,2.009,237,1.195,238,1.349,239,1.349,240,4.274,241,2.634,242,3.91,243,3.581,244,1.074,250,1.782,252,3.114,258,1.343,262,3.442,263,0.763,264,1.074,265,1.074,266,0.753,267,1.074,324,0.721,325,1.015,326,1.015,327,0.721,328,0.721,329,1.174,330,0.605,331,0.47,332,0.642,333,1.015,334,0.642,335,1.015,336,1.007,337,1.007,338,0.721,339,0.605,340,0.458,341,0.642,342,0.721,343,0.605,344,0.721,345,0.642,346,0.721,347,0.642,348,0.721,349,0.642,350,0.642,351,0.642,352,0.721,353,0.642,354,1.017,355,0.721,356,0.642,357,1.154,358,0.721,359,0.642,360,0.721,361,0.642,362,0.721,363,0.642,364,0.721,365,0.642,366,0.721,367,0.642,368,0.721,369,0.642,370,0.721,371,0.642,372,0.721,373,0.721,374,0.721,375,0.013,376,0.013,377,0.802,394,0.458,395,1.169,399,1.266,400,1.266,423,1.737,428,1.737,429,1.885,438,1.737,439,1.067,441,1.067,442,1.885,479,4.751,480,2.213,481,3.442,482,3.442,483,3.442,484,3.982,485,3.048,486,3.982,487,3.982,488,4.547,489,4.547,490,4.547,491,4.322,492,3.982,493,1.885,494,4.547,495,3.231,496,3.442,497,3.231,498,3.486,499,3.442,500,3.231,501,3.231,502,3.231,503,3.442,504,3.231,505,3.231,506,3.231,507,2.476,508,3.231,509,3.231,510,1.343,511,1.588,512,1.129,513,1.129,514,2.101,515,2.446,516,3.442,517,2.634,518,2.634,519,3.442,520,3.442,521,2.446,522,2.446,523,1.872,524,1.872,525,2.446,526,3.982,527,2.446,528,2.446,529,2.446,530,3.442,531,3.442,532,3.048,533,2.446,534,2.446,535,2.446,536,2.446,537,2.446,538,3.442,539,2.446,540,2.446,541,5.709,542,3.581,543,2.374,544,3.114,545,4.547,546,4.547,547,3.114,548,2.634,549,3.114,550,3.442,551,4.547]],["title/components/AdminUserManagementComponent.html",[0,0.049,339,0.674]],["body/components/AdminUserManagementComponent.html",[0,0.07,1,0.625,2,0.94,3,0.172,4,0.15,5,0.702,7,0.702,8,0.702,9,0.15,10,2.725,11,0.625,12,3.744,13,1.692,14,0.739,15,0.914,16,0.914,17,0.702,20,1.199,21,1.053,22,1.207,23,2.29,24,0.739,25,0.276,26,0.739,27,0.914,28,0.914,29,3.251,32,2.797,33,0.739,34,2.797,35,0.193,36,0.342,40,3.923,41,0.786,42,0.664,46,0.994,47,0.994,50,0.276,51,0.743,52,0.9,53,0.914,54,0.859,56,2.093,57,1.265,59,1.144,63,0.914,64,0.022,65,0.689,66,0.26,67,0.914,70,0.664,75,2.24,76,3.108,84,0.693,85,2.097,90,1.472,91,1.077,92,0.435,94,0.884,103,0.525,104,3.375,106,1.747,113,3.923,114,4.269,118,2.379,131,1.747,137,1.862,142,2.287,147,1.576,148,1.576,149,2.683,150,1.854,153,1.095,154,0.946,159,2.16,160,0.355,161,0.554,162,0.554,163,0.15,164,0.739,165,0.649,166,0.554,167,0.554,169,0.743,170,1.389,173,1.307,174,1.184,175,1.098,176,0.172,177,0.172,179,0.412,180,0.554,182,0.786,183,0.402,184,0.554,185,0.554,186,0.554,187,0.554,188,0.786,189,0.554,190,0.554,191,0.554,192,0.554,193,0.739,194,0.554,195,0.554,197,0.554,211,3.375,214,3.375,216,3.375,219,3.923,220,2.379,222,0.786,231,1.389,232,1.649,233,0.525,234,1.97,235,1.649,236,1.97,237,1.162,238,1.332,239,1.332,240,4.452,241,2.584,242,3.054,243,2.797,244,1.054,245,3.375,246,1.178,247,3.375,248,3.054,249,3.375,250,1.931,252,3.054,258,1.827,259,3.862,260,1.49,261,1.49,262,3.375,263,0.743,264,1.054,265,1.054,266,0.739,267,1.054,324,0.702,325,0.995,326,0.995,327,0.702,328,0.702,329,1.157,330,0.589,331,0.457,332,0.625,333,0.995,334,0.625,335,0.995,336,0.554,337,0.427,338,0.702,339,1.056,340,0.747,341,0.625,342,0.702,343,0.589,344,0.702,345,0.625,346,0.702,347,0.625,348,0.702,349,0.625,350,0.625,351,0.625,352,0.702,353,0.625,354,0.989,355,0.702,356,0.625,357,1.091,358,0.702,359,0.625,360,0.702,361,0.625,362,0.702,363,0.625,364,0.702,365,0.625,366,0.702,367,0.625,368,0.702,369,0.625,370,0.702,371,0.625,372,0.702,373,0.702,374,0.702,375,0.013,376,0.013,377,0.786,394,0.316,395,1.056,458,1.381,552,3.003,553,4.423,554,2.604,555,3.806,556,4.459,557,4.813,558,4.813,559,4.813,560,4.423,561,3.143,562,2.584,563,3.143,564,3.806,565,3.143,566,3.143,567,3.143,568,3.143,569,3.143,570,2.993,571,3.143,572,3.143,573,3.143,574,3.143,575,2.683,576,4.813,577,1.821,578,2.683,579,2.683,580,2.683,581,2.683,582,2.683,583,2.683,584,4.423,585,2.683,586,3.806,587,2.683,588,2.683,589,2.683,590,2.683,591,2.683,592,2.683,593,4.459,594,4.459,595,2.797,596,4.459,597,4.459]],["title/components/AppComponent.html",[0,0.049,341,0.716]],["body/components/AppComponent.html",[0,0.088,1,0.974,2,1.26,3,0.268,4,0.233,5,1.093,7,1.093,8,1.093,9,0.233,11,0.974,17,1.093,20,1.242,21,1.091,22,1.236,24,0.991,25,0.37,26,0.991,33,0.991,35,0.167,36,0.459,59,0.812,64,0.022,65,0.602,66,0.2,147,1.368,148,1.368,154,0.713,160,0.327,163,0.233,165,0.713,174,1.336,176,0.268,177,0.268,324,1.093,325,1.335,326,1.335,327,1.093,328,1.093,329,1.441,330,0.918,331,0.713,332,0.974,333,1.335,334,0.974,335,1.335,336,0.864,337,0.666,338,1.093,339,0.918,340,0.493,341,1.336,342,1.093,343,0.918,344,1.093,345,0.974,346,1.093,347,0.974,348,1.093,349,0.974,350,0.974,351,0.974,352,1.093,353,0.974,354,1.103,355,1.093,356,0.974,357,1.236,358,1.093,359,0.974,360,1.093,361,0.974,362,1.093,363,0.974,364,1.093,365,0.974,366,1.093,367,0.974,368,1.093,369,0.974,370,1.093,371,0.974,372,1.093,373,1.093,374,1.093,375,0.018,376,0.018,377,1.054,395,0.918,598,4.18,599,2.088,600,6.453,601,5.978,602,5.978,603,6.453,604,5.102,605,4.898]],["title/interfaces/Cart.html",[394,0.362,606,1.938]],["body/interfaces/Cart.html",[3,0.145,4,0.127,9,0.127,25,0.399,35,0.135,36,0.303,50,0.244,61,2.015,64,0.022,66,0.227,68,2.155,69,1.041,70,0.853,73,1.328,80,0.928,81,0.972,82,1.73,85,0.785,86,0.614,88,1.926,89,1.459,92,0.41,94,0.991,98,1.232,99,1.276,100,1.174,101,1.547,102,1.335,103,0.656,105,1.174,106,1.041,112,1.041,116,1.744,117,1.641,137,1.303,139,1.885,145,1.54,153,1.069,160,0.145,163,0.127,176,0.145,177,0.145,178,2.197,179,0.446,181,1.708,183,0.442,205,0.993,222,0.987,233,0.313,250,0.83,260,1.043,261,1.043,337,0.877,354,0.939,375,0.012,376,0.012,394,0.474,395,1.357,399,2.597,400,2.182,412,1.459,413,1.54,454,0.742,455,1.495,462,2.426,485,2.287,493,0.877,498,3.02,507,2.746,511,2.448,512,2.168,513,2.168,514,2.168,517,2.728,518,3.02,523,1.54,524,1.54,532,1.54,542,4.048,543,1.105,544,2.703,547,2.703,548,4.132,549,1.82,599,0.928,606,3.141,607,0.928,608,1.82,609,1.043,610,2.011,611,0.983,612,2.011,613,2.988,614,2.011,615,2.011,616,2.011,617,1.734,618,4.573,619,3.996,620,2.182,621,2.426,622,2.988,623,2.011,624,3.564,625,2.011,626,3.945,627,2.011,628,2.988,629,3.945,630,2.011,631,3.564,632,2.988,633,2.011,634,2.081,635,1.688,636,1.82,637,1.25,638,1.174,639,2.13,640,2.158,641,2.216,642,2.059,643,2.58,644,2.059,645,2.059,646,2.386,647,2.011,648,2.216,649,1.459,650,2.988,651,2.011,652,2.988,653,2.988,654,2.011,655,1.645,656,2.011,657,2.011,658,1.667,659,2.011,660,1.667,661,2.011,662,2.093,663,2.011,664,2.011,665,2.011,666,2.988,667,2.011,668,2.988,669,3.564,670,4.215,671,2.011,672,2.011,673,2.011,674,1.667,675,2.011,676,1.667,677,2.011,678,2.011,679,2.011,680,2.011,681,2.011,682,2.011,683,2.011,684,1.741,685,1.105,686,2.011,687,1.744,688,2.988,689,2.988,690,2.988,691,2.011,692,1.667,693,2.988,694,2.081,695,3.564,696,1.741,697,2.315,698,0.983,699,2.167,700,1.105,701,1.105,702,1.105,703,1.105,704,1.105,705,1.641,706,1.105,707,1.641,708,1.105,709,1.958,710,1.105,711,1.105,712,1.105,713,1.041,714,1.105,715,1.105,716,1.105,717,1.641,718,1.105,719,1.105,720,1.547,721,1.105,722,1.105,723,1.105,724,1.105,725,1.105,726,1.25,727,1.041,728,0.983,729,2.011,730,2.011,731,1.25,732,2.042,733,2.125,734,3.341,735,3.341,736,3.341,737,2.125,738,1.431,739,2.806,740,2.806,741,2.806,742,2.125,743,1.431,744,2.806,745,2.011,746,2.011,747,2.011,748,1.641,749,2.011,750,2.011,751,1.82,752,2.011,753,2.011,754,2.011,755,2.011,756,2.011,757,2.011,758,2.011]],["title/components/CartComponent.html",[0,0.049,343,0.674]],["body/components/CartComponent.html",[0,0.073,1,0.663,2,0.98,3,0.182,4,0.159,5,0.745,7,0.745,8,0.745,9,0.159,11,0.663,14,0.771,15,0.944,16,0.944,17,0.745,19,1.529,20,1.206,21,1.059,22,1.112,24,0.771,25,0.331,26,0.771,27,0.944,28,0.944,33,0.771,35,0.159,36,0.357,41,0.82,42,0.682,46,1.021,47,1.021,50,0.287,51,0.788,52,0.918,53,0.944,54,0.887,57,1.286,59,1.147,63,0.82,64,0.022,65,0.583,66,0.236,67,0.82,70,0.63,73,0.625,81,0.787,84,1.026,86,0.98,87,3.52,89,1.72,90,1.912,91,1.111,92,0.439,94,0.897,99,1.236,103,0.548,121,3.395,139,1.229,147,1.299,148,1.299,150,2.787,153,0.553,154,0.486,160,0.361,161,0.588,162,0.588,163,0.159,164,0.771,165,0.677,166,0.588,167,0.588,168,0.986,174,1.151,176,0.182,177,0.182,179,0.421,180,0.588,181,1.099,182,0.944,183,0.39,184,0.588,185,0.588,186,0.588,187,0.588,188,0.82,189,0.588,190,0.588,191,0.588,192,0.588,193,0.771,194,0.588,195,0.588,197,0.588,205,0.703,233,0.548,237,1.72,238,1.368,239,1.368,244,1.368,246,1.229,263,0.788,264,1.099,265,1.099,266,0.771,267,1.099,324,0.745,325,1.038,326,1.038,327,0.745,328,0.745,329,1.195,330,0.625,331,0.486,332,0.663,333,1.038,334,0.663,335,1.038,336,0.588,337,0.454,338,0.745,339,0.625,340,0.336,341,0.663,342,0.745,343,1.085,344,0.745,345,0.663,346,0.745,347,0.663,348,0.745,349,0.663,350,0.663,351,0.663,352,0.745,353,0.663,354,1.026,355,0.745,356,0.663,357,1.112,358,0.745,359,0.663,360,0.745,361,0.663,362,0.745,363,0.663,364,0.745,365,0.663,366,0.745,367,0.663,368,0.745,369,0.663,370,0.745,371,0.663,372,0.745,373,0.745,374,0.745,375,0.014,376,0.014,377,0.82,394,0.336,395,0.871,458,1.293,465,1.293,477,2.188,493,2.136,510,1.387,511,2.26,512,1.166,513,1.166,514,1.166,542,2.918,543,1.934,548,2.695,606,3.278,617,1.618,635,1.618,638,2.055,639,1.535,642,1.234,646,1.234,649,1.72,658,3.632,660,2.918,674,2.093,676,2.093,759,2.526,760,3.969,761,3.969,762,4.569,763,4.942,764,4.942,765,5.632,766,4.942,767,4.651,768,3.337,769,3.337,770,3.337,771,3.337,772,3.337,773,3.337,774,3.337,775,3.337,776,3.337,777,3.337,778,3.666,779,3.337,780,3.337,781,2.848,782,1.452,783,1.452,784,1.808,785,1.808,786,1.452,787,1.808,788,1.452,789,1.452,790,1.808,791,1.452,792,2.848,793,3.969,794,4.569,795,3.969,796,2.848,797,2.848,798,4.569,799,4.569,800,2.848,801,2.848,802,2.848,803,2.848,804,2.526,805,2.848,806,2.848,807,2.848,808,2.093,809,5.197,810,2.848,811,2.848,812,4.569,813,4.942,814,2.848,815,2.848,816,2.848,817,2.526,818,1.535,819,1.535,820,1.535,821,1.373,822,4.651,823,4.651,824,4.651,825,4.651,826,4.651,827,4.651,828,4.651,829,5.79,830,4.651,831,4.651]],["title/interfaces/CartItem.html",[394,0.362,778,2.465]],["body/interfaces/CartItem.html",[0,0.074,3,0.231,4,0.201,9,0.201,14,0.701,15,0.961,16,0.961,19,1.426,20,0.701,21,0.615,24,0.701,25,0.337,26,0.701,27,0.961,28,0.961,33,0.701,35,0.144,36,0.418,42,0.498,46,0.746,47,0.746,50,0.261,52,0.878,53,0.746,54,0.701,57,1.199,64,0.022,66,0.269,70,0.498,73,0.792,81,0.867,84,0.991,86,1.05,87,4.127,90,2.104,92,0.43,94,0.971,99,1.194,121,3.636,139,1.441,150,2.266,153,0.701,160,0.38,161,0.746,162,0.746,163,0.201,164,0.903,165,0.793,166,0.746,167,0.746,168,1.249,176,0.231,177,0.231,179,0.456,180,0.746,181,1.288,182,1.064,183,0.418,184,0.746,185,0.746,186,0.746,187,0.746,188,0.961,189,0.746,190,0.746,191,0.746,192,0.746,193,0.903,194,0.746,195,0.746,197,0.746,205,0.891,233,0.642,237,2.016,244,1.288,246,1.441,343,0.792,354,0.991,375,0.016,376,0.016,377,0.746,394,0.426,395,1.265,458,1.217,465,1.217,493,1.992,510,1.758,511,2.359,512,2.226,513,2.226,514,2.226,548,3.159,606,2.935,607,1.477,639,1.396,642,1.564,646,1.564,649,2.016,658,2.653,660,2.653,674,2.653,676,2.653,759,3.201,760,3.609,761,3.609,762,3.609,763,3.609,764,3.609,765,5.63,766,3.609,778,4.132,781,3.609,782,1.702,783,1.702,784,1.99,785,1.702,786,1.702,787,1.99,788,1.702,789,1.702,790,1.99,791,1.702,792,3.609,793,4.653,794,5.149,795,4.653,796,3.609,797,3.609,798,3.609,799,3.609,800,3.609,801,3.609,802,3.609,803,3.609,804,3.201,805,3.609,806,3.609,807,3.609,808,2.653,809,3.609,810,3.609,811,3.609,812,5.149,813,5.439,814,3.609,815,3.609,816,3.609,817,3.201]],["title/interfaces/Contact.html",[331,0.524,394,0.362]],["body/interfaces/Contact.html",[3,0.166,4,0.145,9,0.145,25,0.398,35,0.174,36,0.334,50,0.188,61,2.159,64,0.022,65,0.678,66,0.263,68,2.103,70,0.801,73,1.262,80,1.061,81,0.978,82,1.759,85,0.897,86,0.913,88,1.94,89,1.609,92,0.343,94,0.916,98,1.966,99,1.312,100,1.342,101,2.303,103,0.358,105,1.922,106,1.19,112,1.19,137,1.678,139,1.876,153,1.153,160,0.166,163,0.145,176,0.166,177,0.166,178,2.225,179,0.406,181,1.671,183,0.441,205,1.072,222,1.087,233,0.512,241,2.521,250,1.358,258,0.897,260,1.15,261,1.15,266,0.503,331,1.007,375,0.013,376,0.013,378,4.025,383,1.635,386,2.08,394,0.306,395,1.394,396,4.306,397,4.306,398,4.306,399,2.728,400,2.468,403,2.98,407,2.08,410,2.98,411,2.98,412,2.053,413,2.946,454,0.848,455,1.544,462,2.542,599,1.061,607,1.061,609,1.15,611,1.123,620,2.524,621,1.809,634,1.342,639,2.127,640,2.173,641,2.392,642,1.88,643,2.542,644,2.053,645,2.053,646,2.382,648,2.047,649,1.123,655,1.939,662,1.678,684,1.88,685,1.809,687,2.597,692,1.905,694,2.702,696,2.053,697,2.443,698,1.123,699,2.308,700,1.262,701,1.262,702,1.262,703,1.262,704,1.262,705,1.809,706,1.262,707,1.809,708,1.262,709,2.114,710,1.262,711,1.262,712,1.262,713,1.19,714,1.262,715,1.262,716,1.262,717,1.809,718,1.262,719,1.262,720,1.705,721,1.262,722,1.262,723,1.262,724,1.262,725,1.262,726,1.429,727,1.19,731,1.429,732,2.303,733,2.342,734,3.468,735,3.468,736,3.468,737,2.342,738,1.635,739,2.989,740,2.989,741,2.989,742,2.342,743,1.635,748,1.262,821,2.159,832,2.299,833,1.526,834,3.713,835,2.592,836,2.592,837,2.98,838,2.592,839,2.592,840,3.713,841,2.592,842,3.713,843,3.713,844,5.015,845,5.015,846,2.592,847,3.713,848,3.713,849,3.713,850,2.592,851,3.713,852,1.759,853,2.592,854,2.592,855,2.592,856,2.592,857,2.592,858,1.759,859,1.526,860,2.592,861,4.339,862,2.592,863,2.946,864,4.339,865,4.339,866,2.592,867,2.592,868,2.592]],["title/interfaces/Contact-1.html",[205,0.635,331,0.438,394,0.303]],["body/interfaces/Contact-1.html",[0,0.077,3,0.247,4,0.216,9,0.216,10,1.774,12,2.438,13,2.438,14,0.75,15,1.004,16,1.004,20,0.75,21,0.659,22,1.098,23,2.516,24,0.75,25,0.28,26,0.75,27,1.004,28,1.004,29,3.572,32,2.841,33,0.75,34,2.841,35,0.155,36,0.437,42,0.533,46,0.798,47,0.798,50,0.28,52,0.907,53,0.798,54,0.75,56,1.945,57,1.239,64,0.022,65,0.658,66,0.288,82,1.727,90,1.88,92,0.425,94,0.916,137,1.88,139,1.727,153,1.083,160,0.389,161,0.798,162,0.798,163,0.216,164,0.944,165,0.829,166,0.798,167,0.798,169,1.07,170,2.001,173,1.883,174,0.9,175,1.582,176,0.247,177,0.247,179,0.466,180,0.798,182,1.004,183,0.404,184,0.798,185,0.798,186,0.798,187,0.798,188,1.004,189,0.798,190,0.798,191,0.798,192,0.798,193,0.944,194,0.798,195,0.798,197,0.798,231,2.001,232,2.106,233,0.671,234,2.516,235,2.106,236,2.516,237,1.674,330,0.848,331,1.044,340,0.456,375,0.017,376,0.017,377,0.798,378,3.101,380,3.865,382,3.865,383,3.066,386,3.101,391,3.865,393,3.428,394,0.456,395,1.384,396,4.1,397,4.1,398,4.1,399,2.561,400,2.441,401,3.865,402,5.317,403,3.101,404,3.865,405,3.865,406,4.86,407,3.101,408,3.865,409,3.865,607,1.582]],["title/components/ContactComponent.html",[0,0.049,345,0.716]],["body/components/ContactComponent.html",[0,0.075,1,0.71,2,1.028,3,0.195,4,0.17,5,0.798,7,0.798,8,0.798,9,0.17,11,0.71,14,0.808,15,0.978,16,0.978,17,0.798,19,1.557,20,1.213,21,1.065,22,1.135,24,0.808,25,0.301,26,0.808,27,0.978,28,0.978,33,0.808,35,0.122,36,0.374,41,0.86,42,0.702,46,1.051,47,1.051,50,0.301,51,0.844,52,0.937,53,0.978,54,0.919,59,1.092,63,0.63,64,0.022,65,0.648,66,0.199,67,0.63,70,0.574,81,0.912,84,1.043,86,0.927,91,1.034,92,0.415,99,1.257,103,0.574,125,1.486,126,2.448,153,0.988,154,0.52,160,0.372,161,0.63,162,0.63,163,0.232,164,0.808,165,0.52,166,0.63,167,0.63,168,1.055,169,0.844,174,1.185,176,0.195,177,0.195,179,0.456,180,0.63,182,0.86,183,0.421,184,0.63,185,0.63,186,0.63,187,0.63,188,0.86,189,0.63,190,0.63,191,0.63,192,0.63,193,0.808,194,0.63,195,0.63,197,0.63,238,1.409,239,1.409,244,1.409,246,1.289,250,1.861,260,1.702,261,1.702,263,0.844,264,1.152,265,1.152,266,0.808,267,1.152,324,0.798,325,1.088,326,1.088,327,0.798,328,0.798,329,1.239,330,0.669,331,0.808,332,0.71,333,1.088,334,0.71,335,1.088,336,0.63,337,0.486,338,0.798,339,0.669,340,0.36,341,0.71,342,0.798,343,0.669,344,0.798,345,1.185,346,0.798,347,0.71,348,0.798,349,0.71,350,0.71,351,0.71,352,0.798,353,0.71,354,1.024,355,0.798,356,0.71,357,1.135,358,0.798,359,0.71,360,0.798,361,0.71,362,0.798,363,0.71,364,0.798,365,0.71,366,0.798,367,0.71,368,0.798,369,0.71,370,0.798,371,0.71,372,0.798,373,0.798,374,0.798,375,0.014,376,0.014,377,0.86,383,3.548,393,2.705,396,3.74,397,3.74,398,3.74,410,3.339,411,4.083,412,2.307,423,1.832,427,3.454,428,1.832,429,1.968,430,3.215,431,3.454,432,3.454,438,1.832,439,1.18,441,1.18,442,1.968,443,2.071,452,1.248,454,0.998,455,0.798,456,2.825,457,2.448,458,1.331,460,2.215,461,3.887,462,2.027,463,2.825,465,1.331,550,3.691,617,1.362,635,1.362,782,1.116,783,1.522,784,1.861,785,1.948,786,1.522,787,1.861,788,1.522,789,1.522,790,1.861,791,1.522,808,3.059,818,1.61,819,1.61,820,1.61,821,1.44,869,3.05,870,4.876,871,4.876,872,5.55,873,4.513,874,4.876,875,3.574,876,3.574,877,3.574,878,3.574,879,3.574,880,3.574,881,3.574,882,3.574,883,3.574,884,3.574,885,3.574,886,3.574,887,3.574,888,2.625,889,3.574,890,1.924,891,3.574,892,4.876,893,4.876,894,4.876]],["title/injectables/ContactsService.html",[383,1.938,609,0.951]],["body/injectables/ContactsService.html",[3,0.135,4,0.118,9,0.118,25,0.403,35,0.184,36,0.287,41,0.659,50,0.279,59,1.105,61,2.227,63,1.096,64,0.022,65,0.695,66,0.263,67,1.096,68,2.167,70,0.83,73,1.311,80,1.305,81,0.995,82,1.558,85,1.104,86,0.985,88,2.092,89,1.858,91,1.067,92,0.375,94,0.928,98,2.082,99,1.27,100,1.651,101,2.483,103,0.44,105,2.22,106,1.464,112,1.464,137,1.782,139,1.85,147,1.044,148,1.044,153,1.123,160,0.135,163,0.118,176,0.135,177,0.135,178,2.167,179,0.465,181,1.623,183,0.429,205,0.95,222,0.934,233,0.44,241,2.912,250,1.569,258,1.104,260,1.328,261,1.328,266,0.619,331,1.01,375,0.011,376,0.011,378,4.159,379,3.189,383,2.012,386,2.559,394,0.249,395,1.394,396,4.183,397,4.183,398,4.183,399,2.691,400,2.311,403,2.559,407,1.692,410,3.442,411,3.442,412,2.245,413,2.612,454,0.69,455,1.593,462,2.713,599,0.863,609,0.988,611,0.913,620,2.656,621,1.554,634,1.651,639,2.154,640,2.343,641,2.672,642,1.858,643,2.525,644,2.245,645,2.245,646,2.413,648,1.758,649,0.913,655,1.885,662,1.875,684,1.996,685,2.089,687,2.605,692,1.55,694,2.683,696,1.996,697,2.525,698,1.382,699,2.452,700,1.554,701,1.554,702,1.027,703,1.027,704,1.027,705,1.554,706,1.027,707,1.554,708,1.027,709,1.874,710,1.027,711,1.027,712,1.027,713,0.968,714,1.027,715,1.027,716,1.027,717,2.089,718,2.089,719,1.027,720,1.464,721,1.027,722,1.027,723,1.027,724,1.027,725,1.027,726,1.758,727,1.464,731,1.162,732,2.225,733,2.705,734,3.649,735,3.649,736,3.649,737,2.705,738,2.012,739,2.705,740,2.705,741,2.705,742,2.012,743,2.012,748,1.554,821,2.183,832,1.87,833,2.265,834,3.189,835,2.108,836,2.108,837,3.442,838,3.189,839,2.108,840,3.189,841,2.108,842,3.189,843,3.189,844,4.607,845,4.607,846,3.189,847,3.189,848,3.189,849,3.189,850,2.108,851,3.189,852,1.431,853,3.189,854,3.189,855,3.189,856,3.189,857,4.289,858,1.431,859,1.878,860,3.189,861,3.847,862,2.108,863,2.612,864,3.847,865,4.607,866,3.189,867,2.108,868,2.108,895,1.431,896,3.737,897,3.737,898,2.829,899,2.829,900,2.829,901,3.737,902,3.737,903,3.737,904,3.737,905,2.47,906,2.47,907,2.47,908,2.47,909,2.47,910,2.47,911,2.47,912,2.47,913,2.47,914,2.47,915,2.47,916,2.47]],["title/injectables/CryptoService.html",[58,1.257,609,0.951]],["body/injectables/CryptoService.html",[3,0.267,4,0.232,9,0.232,35,0.167,36,0.458,41,1.051,50,0.398,58,2.083,59,1.112,63,1.051,64,0.022,65,0.6,66,0.263,67,1.051,68,2.095,70,0.862,73,1.341,91,0.988,141,5.09,147,1.363,148,1.363,160,0.326,163,0.232,176,0.267,177,0.267,178,1.862,179,0.446,181,1.585,183,0.302,200,5.727,375,0.018,376,0.018,395,1.387,599,1.704,609,1.576,611,1.804,662,2.215,895,2.826,917,4.163,918,6.441,919,5.964,920,5.964,921,5.964,922,5.964,923,4.878,924,5.964,925,7.321,926,7.321,927,7.002,928,6.71,929,6.71,930,3.741,931,5.964,932,5.964,933,4.878,934,3.741,935,5.964,936,4.878,937,4.163,938,4.163,939,4.878,940,4.878,941,4.878,942,4.878,943,4.878,944,4.878]],["title/interfaces/Customer.html",[146,1.938,394,0.362]],["body/interfaces/Customer.html",[3,0.169,4,0.148,9,0.148,19,0.732,25,0.366,35,0.176,36,0.338,42,0.365,50,0.191,58,2.068,61,2.132,64,0.022,66,0.264,68,2.166,69,2.32,70,0.849,73,1.279,75,3.182,78,2.767,80,1.541,81,0.968,82,1.166,83,2.271,84,0.957,85,0.914,86,0.481,88,2.091,89,2.071,90,1.456,92,0.346,94,0.699,98,2.086,99,1.338,101,2.482,103,0.52,110,1.667,112,1.213,117,1.287,120,2.475,125,1.834,129,3.43,131,1.213,137,1.456,139,1.48,142,1.145,145,2.556,146,3.78,150,1.287,151,2.814,152,3.514,153,1.107,154,0.922,155,3.514,156,3.514,159,1.541,160,0.324,163,0.148,171,2.12,176,0.241,177,0.169,178,2.132,179,0.387,181,1.715,183,0.413,205,1.083,222,1.103,233,0.605,258,0.914,260,1.711,261,1.711,289,2.344,375,0.013,376,0.013,394,0.312,395,1.374,412,1.631,455,0.985,460,1.022,468,1.556,599,1.081,607,1.081,609,1.166,611,1.145,620,1.729,621,2.329,639,1.849,640,2.276,642,1.631,644,2.189,645,2.189,646,2.276,655,1.081,662,1.022,684,1.145,685,1.287,696,1.145,697,2.462,698,1.145,699,2.329,700,1.287,701,1.287,702,1.287,703,1.287,704,1.287,705,1.834,706,1.287,707,1.834,708,1.287,709,2.137,710,1.287,711,1.287,712,1.287,713,1.213,714,1.287,715,1.287,716,1.287,717,1.834,718,1.287,719,1.287,720,1.729,721,1.287,722,1.287,723,1.287,724,1.287,725,1.287,727,1.213,728,1.145,732,1.213,744,2.375,748,2.137,833,1.556,859,1.556,945,2.344,946,1.794,947,4.386,948,3.765,949,6.074,950,2.642,951,2.344,952,2.642,953,2.642,954,2.642,955,2.642,956,2.642,957,2.642,958,2.642,959,2.642,960,2.642,961,3.765,962,3.765,963,3.765,964,3.765,965,2.642,966,2.642,967,4.781,968,2.642,969,4.781,970,2.642,971,2.642,972,1.667,973,2.642,974,4.24,975,4.482,976,2.642,977,4.386,978,3.765,979,2.642,980,2.642,981,2.642,982,2.642,983,3.765,984,2.642,985,2.642,986,2.642,987,3.514,988,3.52,989,2.642,990,2.642,991,3.765,992,2.344,993,3.765,994,3.021,995,2.978,996,2.344,997,2.642,998,5.053,999,4.781,1000,3.765,1001,3.89,1002,3.765,1003,2.642,1004,2.642,1005,2.642,1006,2.642,1007,2.642,1008,2.642,1009,2.642,1010,2.642,1011,1.457,1012,2.642,1013,2.642,1014,2.642,1015,3.765,1016,2.375,1017,1.794,1018,2.642,1019,2.642,1020,2.642,1021,2.642,1022,2.642,1023,3.765,1024,2.642,1025,2.642,1026,3.765,1027,2.642,1028,2.642,1029,2.642,1030,1.794,1031,2.642,1032,2.642,1033,2.642,1034,2.642,1035,2.642,1036,2.556,1037,2.642,1038,2.344,1039,2.642,1040,3.765,1041,3.765,1042,2.642,1043,2.556,1044,2.642,1045,1.794,1046,1.794,1047,2.642]],["title/injectables/CustomersService.html",[19,0.851,609,0.951]],["body/injectables/CustomersService.html",[3,0.136,4,0.119,9,0.119,19,0.89,25,0.385,35,0.155,36,0.289,41,0.664,42,0.595,50,0.28,54,0.414,58,2.177,59,1.125,61,2.204,63,1.099,64,0.022,65,0.627,66,0.27,67,1.099,68,2.197,69,2.489,70,0.864,73,1.323,75,3.324,78,3.169,80,1.764,81,0.988,82,1.335,83,2.519,84,1.017,85,1.112,86,0.585,88,2.206,89,2.252,90,1.668,91,1.096,92,0.377,94,0.339,98,2.17,99,1.361,101,2.618,103,0.595,110,2.028,112,1.476,117,1.566,120,2.692,125,2.1,129,3.612,131,1.476,137,1.668,139,0.66,142,1.393,145,2.927,146,3.801,147,1.052,148,1.052,150,1.038,151,1.254,152,1.566,153,1.053,154,0.83,155,1.566,156,1.566,159,1.315,160,0.296,163,0.119,171,1.709,176,0.206,177,0.136,178,2.042,179,0.394,181,1.678,183,0.393,205,0.956,222,1.134,233,0.534,258,0.737,260,1.795,261,1.795,289,2.851,375,0.011,376,0.011,394,0.251,395,1.354,412,1.868,455,1.128,460,1.243,468,2.538,599,0.872,609,0.995,611,0.923,620,1.979,621,2.1,639,1.882,640,2.418,642,1.868,644,2.349,645,2.349,646,2.349,655,1.315,662,1.243,684,1.393,685,1.566,696,1.393,697,2.533,698,1.393,699,2.46,700,1.566,701,1.566,702,1.038,703,1.038,704,1.038,705,1.566,706,1.038,707,1.566,708,1.038,709,1.886,710,1.038,711,1.038,712,1.038,713,0.978,714,1.038,715,1.038,716,1.038,717,2.1,718,2.1,719,1.038,720,1.476,721,1.038,722,1.038,723,1.038,724,1.038,725,1.038,727,1.476,728,1.393,732,1.476,744,2.72,748,2.37,833,1.254,859,1.892,895,1.446,900,2.851,945,1.889,946,1.446,947,4.628,948,3.871,949,6.136,950,2.13,951,1.889,952,2.13,953,2.13,954,2.13,955,3.871,956,3.214,957,3.214,958,3.214,959,3.214,960,3.214,961,4.312,962,4.312,963,4.312,964,4.312,965,3.871,966,3.214,967,4.312,968,3.214,969,5.05,970,3.214,971,3.214,972,1.344,973,3.214,974,4.479,975,4.611,976,3.214,977,4.312,978,3.871,979,3.214,980,2.13,981,2.13,982,2.13,983,3.214,984,2.13,985,2.13,986,2.13,987,3.169,988,3.106,989,4.312,990,2.13,991,3.214,992,1.889,993,3.214,994,3.46,995,3.142,996,2.851,997,3.214,998,4.628,999,4.312,1000,3.214,1001,3.433,1002,4.312,1003,3.214,1004,3.214,1005,3.214,1006,2.13,1007,2.13,1008,2.13,1009,2.13,1010,2.13,1011,1.772,1012,3.214,1013,2.13,1014,3.214,1015,3.871,1016,2.72,1017,2.182,1018,3.214,1019,2.13,1020,2.13,1021,2.13,1022,2.13,1023,3.214,1024,3.214,1025,3.214,1026,3.214,1027,2.13,1028,2.13,1029,2.13,1030,1.446,1031,2.13,1032,2.13,1033,2.13,1034,2.13,1035,2.13,1036,2.927,1037,3.214,1038,1.889,1039,2.13,1040,3.214,1041,3.214,1042,4.312,1043,2.182,1044,2.13,1045,2.182,1046,1.446,1047,2.13,1048,3.766,1049,3.766,1050,3.766,1051,3.214,1052,3.766,1053,3.766,1054,3.766,1055,2.496,1056,3.766,1057,2.496,1058,2.496,1059,2.496,1060,2.496,1061,2.496,1062,2.496,1063,2.496,1064,2.496,1065,2.496,1066,2.496,1067,2.496,1068,2.496,1069,2.496,1070,2.496]],["title/components/HomeComponent.html",[0,0.049,347,0.716]],["body/components/HomeComponent.html",[0,0.078,1,0.765,2,1.08,3,0.21,4,0.183,5,0.859,7,0.859,8,0.859,9,0.183,11,0.765,14,0.849,15,1.016,16,1.016,17,0.859,19,1.587,20,1.22,21,1.072,22,1.16,24,0.849,25,0.317,26,0.849,27,1.016,28,1.016,33,0.849,35,0.131,41,0.904,42,0.724,46,1.083,47,1.083,50,0.317,51,0.909,52,0.958,53,1.016,54,0.955,57,1.222,59,1.018,63,0.679,64,0.022,65,0.58,66,0.157,67,0.679,73,0.96,81,0.836,84,1.061,86,1.113,91,0.955,92,0.407,99,1.278,103,0.604,121,2.759,131,2.008,154,0.56,160,0.36,161,0.679,162,0.679,163,0.183,164,0.849,165,0.56,166,0.679,167,0.679,168,1.137,174,1.222,176,0.21,177,0.21,179,0.399,180,0.679,182,0.904,183,0.356,184,0.679,185,0.679,186,0.679,187,0.679,188,0.904,189,0.679,190,0.679,191,0.679,192,0.679,193,0.849,194,0.679,195,0.679,197,0.679,238,1.555,239,1.555,243,3.215,244,1.452,246,1.355,263,0.909,264,1.211,265,1.211,266,0.849,267,1.211,324,0.859,325,1.144,326,1.144,327,0.859,328,0.859,329,1.286,330,0.721,331,0.56,332,0.765,333,1.144,334,0.765,335,1.144,336,0.679,337,0.523,338,0.859,339,0.721,340,0.387,341,0.765,342,0.859,343,0.721,344,0.859,345,0.765,346,0.859,347,1.222,348,0.859,349,0.765,350,0.765,351,0.765,352,0.859,353,0.765,354,1.044,355,0.859,356,0.765,357,1.16,358,0.859,359,0.765,360,0.859,361,0.765,362,0.859,363,0.765,364,0.859,365,0.765,366,0.859,367,0.765,368,0.859,369,0.765,370,0.859,371,0.765,372,0.859,373,0.859,374,0.859,375,0.015,376,0.015,377,0.904,458,1.372,465,1.372,617,1.432,635,1.432,782,1.202,783,1.6,784,1.918,785,1.918,786,1.6,787,1.918,788,1.6,789,1.6,790,1.918,791,1.6,818,2.029,819,2.253,820,2.253,821,1.514,1071,3.285,1072,5.125,1073,5.125,1074,3.849,1075,3.849,1076,3.849,1077,3.849,1078,5.125,1079,5.125,1080,5.125,1081,4.651,1082,4.374,1083,5.125,1084,5.125,1085,6.145,1086,5.125,1087,5.125,1088,5.125,1089,5.125,1090,5.125,1091,5.125,1092,5.125,1093,3.88,1094,3.51,1095,3.88,1096,4.374,1097,5.125,1098,4.374,1099,3.88,1100,5.125,1101,5.125,1102,5.125,1103,3.88,1104,5.125,1105,5.125]],["title/components/LoginComponent.html",[0,0.049,349,0.716]],["body/components/LoginComponent.html",[0,0.076,1,0.724,2,1.041,3,0.199,4,0.174,5,0.813,7,0.813,8,0.813,9,0.174,11,0.724,14,0.818,15,0.988,16,0.988,17,0.813,19,1.565,20,1.215,21,1.067,22,1.142,24,0.818,25,0.305,26,0.818,27,0.988,28,0.988,33,0.818,35,0.124,36,0.379,41,0.871,42,0.708,46,1.06,47,1.06,50,0.305,51,0.861,52,0.943,53,0.988,54,0.929,57,1.317,58,2.314,59,1.073,63,0.642,64,0.022,65,0.564,66,0.202,67,0.642,70,0.74,81,0.901,84,1.099,86,0.934,91,0.996,92,0.409,99,1.262,103,0.582,142,2.492,153,0.929,154,0.816,160,0.377,161,0.642,162,0.642,163,0.235,164,0.818,165,0.719,166,0.642,167,0.642,168,1.076,169,0.861,172,2.285,174,1.195,176,0.199,177,0.199,179,0.466,180,0.642,182,0.871,183,0.388,184,0.642,185,0.642,186,0.642,187,0.642,188,0.871,189,0.642,190,0.642,191,0.642,192,0.642,193,0.818,194,0.642,195,0.642,197,0.642,237,2.222,238,1.42,239,1.42,244,1.42,246,1.306,260,1.712,261,1.712,263,0.861,264,1.167,265,1.167,266,0.818,267,1.167,324,0.813,325,1.103,326,1.103,327,0.813,328,0.813,329,1.251,330,0.682,331,0.53,332,0.724,333,1.103,334,0.724,335,1.103,336,0.642,337,0.495,338,0.813,339,0.682,340,0.367,341,0.724,342,0.813,343,0.682,344,0.813,345,0.724,346,0.813,347,0.724,348,0.813,349,1.195,350,0.724,351,0.724,352,0.813,353,0.724,354,1.03,355,0.813,356,0.724,357,1.142,358,0.813,359,0.724,360,0.813,361,0.724,362,0.813,363,0.724,364,0.813,365,0.724,366,0.813,367,0.724,368,0.813,369,0.724,370,0.813,371,0.724,372,0.813,373,0.813,374,0.813,375,0.015,376,0.015,377,0.871,423,1.85,424,4.216,425,4.216,427,3.482,428,1.85,429,1.984,430,3.247,431,3.482,432,3.482,438,1.85,439,1.203,441,1.203,442,1.631,443,2.111,451,2.111,452,1.958,453,3.109,456,2.111,457,2.495,458,1.342,460,1.984,461,2.862,462,2.054,463,2.862,464,2.183,465,1.446,617,1.38,635,1.38,655,1.272,696,1.347,728,1.827,782,1.137,783,1.542,784,1.876,785,1.876,786,1.542,787,1.876,788,1.542,789,1.542,790,1.876,791,1.542,818,1.631,819,1.631,820,1.631,821,1.459,1106,3.109,1107,5.605,1108,4.94,1109,3.643,1110,3.643,1111,3.643,1112,3.643,1113,3.643,1114,3.643,1115,3.643,1116,3.643,1117,3.643,1118,3.643,1119,3.643,1120,3.643,1121,3.643,1122,2.285,1123,2.862,1124,3.099,1125,3.643,1126,4.94]],["title/components/LogoutComponent.html",[0,0.049,350,0.716]],["body/components/LogoutComponent.html",[0,0.08,1,0.803,2,1.115,3,0.221,4,0.192,5,0.901,7,0.901,8,0.901,9,0.192,11,0.803,14,0.877,15,1.04,16,1.04,17,0.901,19,1.606,20,1.225,21,1.076,22,1.176,24,0.877,25,0.327,26,0.877,27,1.04,28,1.04,33,0.877,35,0.138,41,0.933,42,0.737,46,1.104,47,1.104,50,0.327,51,0.954,52,0.971,53,1.04,54,0.978,59,1.037,63,0.712,64,0.022,65,0.594,66,0.165,67,0.712,81,0.852,84,1.12,86,0.973,91,0.978,92,0.412,99,1.292,103,0.623,154,0.588,160,0.364,161,0.712,162,0.712,163,0.192,164,0.877,165,0.588,166,0.712,167,0.712,168,1.192,174,1.245,176,0.221,177,0.221,179,0.408,180,0.712,182,0.933,183,0.365,184,0.712,185,0.712,186,0.712,187,0.712,188,0.933,189,0.712,190,0.712,191,0.712,192,0.712,193,0.877,194,0.712,195,0.712,197,0.933,238,1.48,239,1.48,244,1.576,246,1.398,263,0.954,264,1.25,265,1.25,266,0.877,267,1.25,324,0.901,325,1.181,326,1.181,327,0.901,328,0.901,329,1.317,330,0.756,331,0.588,332,0.803,333,1.181,334,0.803,335,1.181,336,0.712,337,0.549,338,0.901,339,0.756,340,0.406,341,0.803,342,0.901,343,0.756,344,0.901,345,0.803,346,0.901,347,0.803,348,0.901,349,0.803,350,1.245,351,0.803,352,0.901,353,0.803,354,1.056,355,0.901,356,0.803,357,1.176,358,0.901,359,0.803,360,0.901,361,0.803,362,0.901,363,0.803,364,0.901,365,0.803,366,0.901,367,0.803,368,0.901,369,0.803,370,0.901,371,0.803,372,0.901,373,0.901,374,0.901,375,0.016,376,0.016,377,0.933,458,1.398,465,1.489,468,2.658,469,4.515,470,4.515,476,4.515,477,2.489,478,4.515,617,1.478,635,1.478,643,2.2,782,1.261,783,1.652,784,1.955,785,1.955,786,1.652,787,1.955,788,1.652,789,1.652,790,1.955,791,1.652,818,2.067,819,1.747,820,1.747,821,1.562,1127,3.446,1128,4.038,1129,4.038,1130,4.038,1131,4.038,1132,4.038,1133,5.29]],["title/injectables/NavigationService.html",[52,0.524,609,0.951]],["body/injectables/NavigationService.html",[3,0.265,4,0.231,9,0.231,35,0.166,41,1.048,50,0.3,52,0.865,57,1.408,59,0.985,63,1.048,64,0.022,65,0.598,66,0.243,67,1.048,68,1.856,70,0.824,73,1.255,81,0.951,88,1.603,91,0.804,92,0.397,94,0.911,98,1.856,116,2.627,120,2.84,121,3.201,123,4.072,147,1.356,148,1.356,160,0.325,163,0.231,165,0.707,176,0.265,177,0.265,178,1.856,181,1.147,183,0.3,193,1.11,269,4.143,282,5.717,375,0.017,376,0.017,395,1.255,455,1.327,460,2.122,599,1.696,609,1.571,611,1.795,636,4.707,662,2.269,713,1.902,727,1.902,751,4.072,895,2.813,972,2.613,1134,4.143,1135,5.946,1136,4.855,1137,4.855,1138,5.946,1139,6.699,1140,4.855,1141,5.946,1142,6.699,1143,5.946,1144,5.946,1145,5.946,1146,5.946,1147,5.946,1148,4.865,1149,6.699,1150,5.946,1151,5.946,1152,5.946,1153,5.946,1154,5.946,1155,4.855,1156,6.427,1157,4.855,1158,4.855,1159,4.855,1160,4.855,1161,4.855,1162,4.855,1163,4.855,1164,4.855,1165,4.855,1166,4.855]],["title/interfaces/Order.html",[337,0.489,394,0.362]],["body/interfaces/Order.html",[3,0.145,4,0.127,9,0.127,25,0.399,35,0.135,36,0.303,50,0.244,61,2.015,64,0.022,66,0.227,68,2.155,69,1.041,70,0.853,73,1.328,80,0.928,81,0.972,82,1.786,85,0.785,86,0.614,88,1.926,89,1.459,92,0.41,94,0.988,98,1.232,99,1.276,100,1.174,101,1.547,102,1.335,103,0.656,105,1.174,106,1.041,112,1.041,116,1.744,117,1.641,137,1.303,139,1.899,145,1.54,153,1.11,160,0.145,163,0.127,176,0.145,177,0.145,178,2.197,179,0.446,181,1.708,183,0.442,205,0.993,222,0.987,233,0.313,250,0.83,260,1.043,261,1.043,337,0.89,354,0.81,375,0.012,376,0.012,394,0.474,395,1.357,399,2.67,400,2.367,412,1.459,413,1.54,454,0.742,455,1.495,462,2.426,485,2.287,493,0.877,498,3.02,507,2.746,511,2.448,512,1.945,513,1.945,514,1.945,517,2.728,518,3.02,523,1.54,524,1.54,532,1.54,542,4.048,543,1.105,544,2.703,547,2.703,548,4.132,549,1.82,599,0.928,606,2.998,607,0.928,608,1.82,609,1.043,610,2.011,611,0.983,612,2.011,613,2.988,614,2.011,615,2.011,616,2.011,617,1.734,618,4.573,619,3.996,620,2.182,621,2.426,622,2.988,623,2.011,624,3.564,625,2.011,626,3.945,627,2.011,628,2.988,629,3.945,630,2.011,631,3.564,632,2.988,633,2.011,634,2.081,635,1.688,636,1.82,637,1.25,638,1.174,639,2.13,640,2.158,641,2.216,642,2.059,643,2.58,644,2.059,645,2.059,646,2.386,647,2.011,648,2.216,649,1.459,650,2.988,651,2.011,652,2.988,653,2.988,654,2.011,655,1.645,656,2.011,657,2.011,658,1.667,659,2.011,660,1.667,661,2.011,662,2.093,663,2.011,664,2.011,665,2.011,666,2.988,667,2.011,668,2.988,669,3.564,670,4.215,671,2.011,672,2.011,673,2.011,674,1.667,675,2.011,676,1.667,677,2.011,678,2.011,679,2.011,680,2.011,681,2.011,682,2.011,683,2.011,684,1.741,685,1.105,686,2.011,687,1.744,688,2.988,689,2.988,690,2.988,691,2.011,692,1.667,693,2.988,694,2.081,695,3.564,696,1.741,697,2.315,698,0.983,699,2.167,700,1.105,701,1.105,702,1.105,703,1.105,704,1.105,705,1.641,706,1.105,707,1.641,708,1.105,709,1.958,710,1.105,711,1.105,712,1.105,713,1.041,714,1.105,715,1.105,716,1.105,717,1.641,718,1.105,719,1.105,720,1.547,721,1.105,722,1.105,723,1.105,724,1.105,725,1.105,726,1.25,727,1.041,728,0.983,729,2.011,730,2.011,731,1.25,732,2.042,733,2.125,734,3.341,735,3.341,736,3.341,737,2.125,738,1.431,739,2.806,740,2.806,741,2.806,742,2.125,743,1.431,744,2.806,745,2.011,746,2.011,747,2.011,748,1.641,749,2.011,750,2.011,751,1.82,752,2.011,753,2.011,754,2.011,755,2.011,756,2.011,757,2.011,758,2.011]],["title/interfaces/Order-1.html",[205,0.635,337,0.41,394,0.303]],["body/interfaces/Order-1.html",[0,0.075,3,0.234,4,0.204,9,0.204,10,1.681,14,0.711,15,0.97,16,0.97,20,0.711,21,0.624,22,1.071,23,1.895,24,0.711,25,0.265,26,0.711,27,0.97,28,0.97,33,0.711,35,0.146,36,0.422,42,0.505,46,0.756,47,0.756,50,0.265,52,0.884,53,0.756,54,0.711,56,1.896,57,1.208,64,0.022,66,0.27,82,1.693,90,1.816,92,0.41,94,0.991,139,1.751,150,2.287,151,2.764,153,1.062,159,2.121,160,0.385,161,0.756,162,0.756,163,0.204,164,0.912,165,0.801,166,0.756,167,0.756,169,1.013,170,1.895,176,0.234,177,0.234,179,0.469,180,0.756,181,1.3,182,0.97,183,0.426,184,0.756,185,0.756,186,0.756,187,0.756,188,0.97,189,0.756,190,0.756,191,0.756,192,0.756,193,0.912,194,0.756,195,0.756,197,0.756,231,1.895,232,2.034,233,0.648,234,2.431,235,2.034,236,2.431,237,1.586,336,0.756,337,0.967,340,0.432,354,0.667,357,0.97,375,0.016,376,0.016,377,0.756,394,0.554,395,1.321,399,2.511,400,2.38,423,1.816,428,1.416,429,1.816,438,1.816,439,1.416,441,1.416,442,2.115,479,2.937,480,2.937,481,3.247,482,3.247,483,3.247,484,3.247,485,2.485,486,3.247,487,3.247,491,3.247,492,3.247,493,1.816,496,3.247,498,3.188,499,3.247,503,3.247,507,2.589,510,1.783,511,2.314,512,1.498,513,1.498,514,2.314,515,3.247,516,4.164,517,3.188,518,3.188,519,4.164,520,4.164,521,3.247,522,3.247,523,2.485,524,2.485,525,3.247,526,3.247,527,3.247,528,3.247,529,3.247,530,4.164,531,4.164,532,2.485,533,3.247,534,3.247,535,3.247,536,3.247,537,3.247,538,4.164,539,3.247,540,3.247,607,1.498]],["title/interfaces/OrderDetail.html",[394,0.362,507,1.694]],["body/interfaces/OrderDetail.html",[3,0.147,4,0.128,9,0.128,25,0.4,35,0.136,36,0.305,50,0.246,61,2.02,64,0.022,66,0.11,68,2.159,69,1.053,70,0.854,73,1.33,80,0.939,81,0.974,82,1.735,85,0.794,86,0.619,88,1.935,89,1.472,92,0.411,94,0.986,98,1.243,99,1.279,100,1.188,101,1.56,102,1.351,103,0.659,105,1.188,106,1.053,112,1.053,116,1.759,117,1.655,137,1.314,139,1.901,145,1.558,153,1.072,160,0.147,163,0.128,176,0.147,177,0.147,178,2.2,179,0.448,181,1.71,183,0.443,205,0.999,222,0.995,233,0.317,250,0.839,260,1.052,261,1.052,337,0.88,354,0.815,375,0.012,376,0.012,394,0.477,395,1.348,399,2.603,400,2.193,412,1.472,413,1.558,454,0.751,455,1.499,462,2.436,485,2.307,493,0.887,498,3.037,507,2.854,511,2.416,512,1.954,513,1.954,514,1.954,517,2.747,518,3.037,523,1.558,524,1.558,532,1.558,542,4.059,543,1.118,544,2.727,547,2.727,548,4.137,549,1.841,599,0.939,606,3.155,607,0.939,608,1.841,609,1.052,610,3.014,611,0.994,612,2.035,613,3.014,614,2.035,615,2.035,616,2.035,617,1.74,618,4.591,619,4.013,620,2.193,621,2.436,622,3.014,623,2.035,624,3.589,625,2.035,626,3.968,627,2.035,628,3.014,629,3.968,630,2.035,631,3.589,632,3.014,633,2.035,634,2.095,635,1.694,636,1.841,637,1.265,638,1.188,639,2.136,640,2.167,641,2.231,642,2.069,643,2.589,644,2.069,645,2.069,646,2.393,647,2.035,648,2.231,649,1.472,650,3.014,651,2.035,652,3.014,653,3.014,654,2.035,655,1.656,656,2.035,657,2.035,658,1.686,659,2.035,660,1.686,661,2.035,662,2.1,663,2.035,664,2.035,665,2.035,666,3.014,667,2.035,668,3.014,669,3.589,670,4.236,671,2.035,672,2.035,673,2.035,674,1.686,675,2.035,676,1.686,677,2.035,678,2.035,679,2.035,680,2.035,681,2.035,682,2.035,683,2.035,684,1.753,685,1.118,686,2.035,687,1.759,688,3.014,689,3.014,690,3.014,691,2.035,692,1.686,693,3.014,694,2.095,695,3.589,696,1.753,697,2.327,698,0.994,699,2.179,700,1.118,701,1.118,702,1.118,703,1.118,704,1.118,705,1.655,706,1.118,707,1.655,708,1.118,709,1.971,710,1.118,711,1.118,712,1.118,713,1.053,714,1.118,715,1.118,716,1.118,717,1.655,718,1.118,719,1.118,720,1.56,721,1.118,722,1.118,723,1.118,724,1.118,725,1.118,726,1.265,727,1.053,728,0.994,729,2.035,730,2.035,731,1.265,732,2.054,733,2.143,734,3.353,735,3.353,736,3.353,737,2.143,738,1.447,739,2.822,740,2.822,741,2.822,742,2.143,743,1.447,744,2.822,745,2.035,746,2.035,747,2.035,748,1.655,749,2.035,750,2.035,751,1.841,752,2.035,753,2.035,754,2.035,755,2.035,756,2.035,757,2.035,758,2.035]],["title/interfaces/Orderdetail.html",[394,0.362,507,1.694]],["body/interfaces/Orderdetail.html",[0,0.075,3,0.233,4,0.203,9,0.203,10,1.672,14,0.707,15,0.967,16,0.967,20,0.707,21,0.621,22,1.068,23,1.886,24,0.707,25,0.264,26,0.707,27,0.967,28,0.967,33,0.707,35,0.146,36,0.421,42,0.503,46,0.752,47,0.752,50,0.264,52,0.882,53,0.752,54,0.707,56,1.892,57,1.205,64,0.022,66,0.276,82,1.128,90,1.81,92,0.409,94,1.001,139,1.748,150,2.28,151,2.755,153,0.707,159,2.116,160,0.385,161,0.752,162,0.752,163,0.203,164,0.909,165,0.798,166,0.752,167,0.752,169,1.008,170,1.886,176,0.233,177,0.233,179,0.468,180,0.752,181,1.296,182,0.967,183,0.426,184,0.752,185,0.752,186,0.752,187,0.752,188,0.967,189,0.752,190,0.752,191,0.752,192,0.752,193,0.909,194,0.752,195,0.752,197,0.752,231,1.886,232,2.028,233,0.646,234,2.423,235,2.028,236,2.423,237,1.578,336,0.752,337,0.958,340,0.429,354,0.994,357,0.967,375,0.016,376,0.016,377,0.752,394,0.552,395,1.32,399,1.672,400,1.672,423,1.81,428,1.409,429,1.81,438,1.81,439,1.409,441,1.409,442,2.111,479,2.923,480,2.923,481,3.23,482,3.23,483,3.23,484,3.23,485,2.473,486,3.23,487,3.23,491,3.23,492,3.23,493,1.81,496,3.23,498,3.177,499,3.23,503,3.23,507,2.851,510,1.774,511,2.31,512,2.234,513,2.234,514,2.436,515,3.23,516,4.151,517,3.177,518,3.177,519,4.151,520,4.151,521,3.23,522,3.23,523,2.473,524,2.473,525,3.23,526,3.23,527,3.23,528,3.23,529,3.23,530,4.151,531,4.151,532,2.473,533,3.23,534,3.23,535,3.23,536,3.23,537,3.23,538,4.151,539,3.23,540,3.23,607,1.491]],["title/components/PasswordRecoveryComponent.html",[0,0.049,351,0.716]],["body/components/PasswordRecoveryComponent.html",[0,0.076,1,0.721,2,1.038,3,0.198,4,0.173,5,0.809,7,0.809,8,0.809,9,0.173,11,0.721,14,0.816,15,0.986,16,0.986,17,0.809,19,1.563,20,1.214,21,1.067,22,1.14,24,0.816,25,0.304,26,0.816,27,0.986,28,0.986,33,0.816,35,0.124,36,0.378,41,0.868,42,0.706,46,1.057,47,1.057,50,0.304,51,0.857,52,0.941,53,0.986,54,0.926,57,1.315,59,1.072,61,1.132,63,0.639,64,0.022,65,0.563,66,0.201,67,0.639,70,0.706,81,0.915,84,1.046,85,1.071,86,0.932,91,0.994,92,0.409,98,1.132,99,1.278,103,0.58,125,1.507,142,2.319,153,0.926,154,0.963,160,0.373,161,0.639,162,0.639,163,0.235,164,0.816,165,0.717,166,0.639,167,0.639,168,1.071,169,0.857,174,1.192,176,0.198,177,0.198,179,0.458,180,0.639,182,0.868,183,0.371,184,0.639,185,0.639,186,0.639,187,0.639,188,0.868,189,0.639,190,0.639,191,0.639,192,0.639,193,0.816,194,0.639,195,0.639,197,0.639,232,1.341,233,0.58,238,1.417,239,1.417,244,1.417,246,1.301,260,1.779,261,1.779,263,0.857,264,1.163,265,1.163,266,0.816,267,1.163,324,0.809,325,1.099,326,1.099,327,0.809,328,0.809,329,1.248,330,0.679,331,0.528,332,0.721,333,1.099,334,0.721,335,1.099,336,0.639,337,0.493,338,0.809,339,0.679,340,0.365,341,0.721,342,0.809,343,0.679,344,0.809,345,0.721,346,0.809,347,0.721,348,0.809,349,0.721,350,0.721,351,1.192,352,0.809,353,0.721,354,1.028,355,0.809,356,0.721,357,1.14,358,0.809,359,0.721,360,0.809,361,0.721,362,0.809,363,0.721,364,0.809,365,0.721,366,0.809,367,0.721,368,0.809,369,0.721,370,0.809,371,0.721,372,0.809,373,0.809,374,0.809,375,0.014,376,0.014,377,0.868,423,1.846,427,3.475,428,1.846,429,1.98,430,3.239,431,3.475,432,3.475,438,1.846,439,1.197,441,1.197,442,1.197,443,2.101,454,1.013,456,2.101,457,2.483,458,1.4,460,1.625,461,2.853,462,2.047,463,2.853,465,1.339,550,2.744,617,1.376,635,1.376,655,1.266,696,1.341,728,1.341,732,2.35,782,1.132,783,1.537,784,1.872,785,1.872,786,1.537,787,1.872,788,1.537,789,1.537,790,1.872,791,1.537,817,2.744,818,1.625,819,1.625,820,1.625,821,1.454,987,3.089,988,2.483,992,4.54,996,2.744,1167,5.646,1168,5.646,1169,3.094,1170,4.924,1171,4.924,1172,4.924,1173,5.591,1174,4.924,1175,3.625,1176,3.625,1177,3.625,1178,3.625,1179,3.625,1180,3.625,1181,3.625,1182,3.625,1183,4.924,1184,3.625,1185,4.202,1186,3.625,1187,3.625,1188,3.625]],["title/components/ProductCatalogComponent.html",[0,0.049,353,0.716]],["body/components/ProductCatalogComponent.html",[0,0.078,1,0.767,2,1.082,3,0.211,4,0.184,5,0.861,7,0.861,8,0.861,9,0.184,11,0.767,14,0.851,15,1.017,16,1.017,17,0.861,19,1.588,20,1.221,21,1.072,22,1.161,24,0.851,25,0.317,26,0.851,27,1.017,28,1.017,33,0.851,35,0.132,41,0.905,42,0.724,46,1.084,47,1.084,50,0.317,51,0.912,52,0.959,53,1.017,54,0.956,59,1.019,63,0.68,64,0.022,65,0.581,66,0.158,67,0.68,70,0.605,81,0.836,84,1.061,86,0.956,91,0.956,92,0.407,99,1.279,103,0.605,154,0.562,160,0.36,161,0.68,162,0.68,163,0.184,164,0.851,165,0.562,166,0.68,167,0.68,168,1.14,174,1.223,176,0.211,177,0.211,179,0.399,180,0.68,182,0.905,183,0.357,184,0.68,185,0.68,186,0.68,187,0.68,188,0.905,189,0.68,190,0.68,191,0.68,192,0.68,193,0.851,194,0.68,195,0.68,197,0.68,238,1.453,239,1.453,244,1.453,246,1.357,263,0.912,264,1.213,265,1.213,266,0.851,267,1.213,324,0.861,325,1.146,326,1.146,327,0.861,328,0.861,329,1.288,330,0.723,331,0.562,332,0.767,333,1.146,334,0.767,335,1.146,336,0.68,337,0.525,338,0.861,339,0.723,340,0.388,341,0.767,342,0.861,343,0.723,344,0.861,345,0.767,346,0.861,347,0.767,348,0.861,349,0.767,350,0.767,351,0.767,352,0.861,353,1.223,354,1.108,355,0.861,356,0.767,357,1.161,358,0.861,359,0.767,360,0.861,361,0.767,362,0.861,363,0.767,364,0.861,365,0.767,366,0.861,367,0.767,368,0.861,369,0.767,370,0.861,371,0.767,372,0.861,373,0.861,374,0.861,375,0.015,376,0.015,377,0.905,458,1.373,465,1.373,617,1.434,619,4.854,635,1.434,782,1.205,783,1.603,784,1.92,785,1.92,786,1.603,787,1.92,788,1.603,789,1.603,790,1.92,791,1.603,818,1.695,819,2.365,820,2.031,821,1.516,1095,3.886,1096,4.382,1103,3.886,1189,3.014,1190,5.466,1191,3.293,1192,2.764,1193,5.134,1194,5.134,1195,3.859,1196,3.859,1197,3.859,1198,3.859,1199,5.134,1200,4.382,1201,4.382,1202,6.586,1203,4.382,1204,5.134,1205,4.382,1206,5.134,1207,4.382,1208,4.382,1209,4.382,1210,4.382,1211,4.382,1212,4.382]],["title/components/ProductDetailAluminioComponent.html",[0,0.049,356,0.716]],["body/components/ProductDetailAluminioComponent.html",[0,0.072,1,0.649,2,0.966,3,0.178,4,0.156,5,0.729,7,0.729,8,0.729,9,0.156,11,0.649,14,0.759,15,0.933,16,0.933,17,0.729,19,1.52,20,1.203,21,1.057,22,1.104,24,0.759,25,0.283,26,0.759,27,0.933,28,0.933,33,0.759,35,0.112,36,0.351,41,0.808,42,0.676,46,1.011,47,1.011,50,0.283,51,0.772,52,0.912,53,0.933,54,0.877,57,1.279,59,1.12,63,0.576,64,0.022,65,0.533,66,0.247,67,0.576,70,0.773,73,0.858,81,0.821,84,1.02,86,1.02,91,1.001,92,0.418,94,0.893,99,1.23,103,0.54,147,1.478,148,1.478,154,0.475,160,0.365,161,0.576,162,0.576,163,0.156,164,0.759,165,0.667,166,0.576,167,0.576,168,0.965,169,0.772,173,1.358,174,1.201,175,1.141,176,0.178,177,0.178,179,0.433,180,0.576,182,0.808,183,0.418,184,0.576,185,0.576,186,0.576,187,0.576,188,0.808,189,0.576,190,0.576,191,0.576,192,0.808,193,0.759,194,0.576,195,0.576,197,0.576,205,1.273,222,0.816,233,0.54,238,1.355,239,1.355,244,1.355,246,1.211,258,1.353,263,0.772,264,1.083,265,1.083,266,0.759,267,1.083,324,0.729,325,1.023,326,1.023,327,0.729,328,0.729,329,1.181,330,0.612,331,0.475,332,0.649,333,1.023,334,0.649,335,1.023,336,0.576,337,0.444,338,0.729,339,0.612,340,0.329,341,0.649,342,0.729,343,0.612,344,0.729,345,0.649,346,0.729,347,0.649,348,0.729,349,0.649,350,0.649,351,0.649,352,0.729,353,0.649,354,1.094,355,0.729,356,1.14,357,1.301,358,0.729,359,0.649,360,0.729,361,0.649,362,0.729,363,0.649,364,0.729,365,0.649,366,0.729,367,0.649,368,0.729,369,0.649,370,0.729,371,0.649,372,0.729,373,0.729,374,0.729,375,0.013,376,0.013,377,0.808,423,1.747,428,1.747,429,1.894,438,1.747,439,1.078,441,1.078,442,1.078,452,1.141,454,0.913,455,0.729,458,1.281,460,1.513,464,2.024,465,1.281,477,2.156,493,2.123,510,1.358,511,1.848,512,1.848,513,2.004,514,2.33,543,2.385,617,1.28,635,1.603,637,1.537,638,2.767,782,1.02,783,1.43,784,1.791,785,1.886,786,1.43,787,1.791,788,1.43,789,1.43,790,1.791,791,1.43,818,1.513,819,1.513,820,1.513,821,1.353,888,2.466,890,1.758,1011,1.537,1081,3.468,1099,3.468,1103,4.741,1189,3.215,1192,1.758,1208,5.693,1209,4.896,1213,5.172,1214,2.472,1215,4.581,1216,4.581,1217,3.066,1218,3.066,1219,3.066,1220,3.324,1221,3.324,1222,4.581,1223,3.266,1224,3.266,1225,3.266,1226,3.266,1227,3.266,1228,3.266,1229,2.655,1230,3.266,1231,3.266,1232,1.892,1233,1.892,1234,3.066,1235,1.892,1236,1.892,1237,1.892,1238,2.655,1239,1.892,1240,1.892,1241,1.892,1242,1.892,1243,1.892,1244,1.892,1245,1.892,1246,1.892,1247,1.892,1248,1.892,1249,1.892,1250,1.892,1251,3.266,1252,3.266,1253,3.266,1254,1.892,1255,2.655,1256,2.655,1257,2.655,1258,2.655,1259,2.655,1260,2.655,1261,2.655,1262,2.655,1263,4.581,1264,4.581,1265,4.581,1266,4.581,1267,4.581,1268,4.581,1269,5.736,1270,4.581,1271,4.581,1272,4.581,1273,2.655]],["title/components/ProductDetailCroqueraComponent.html",[0,0.049,359,0.716]],["body/components/ProductDetailCroqueraComponent.html",[0,0.072,1,0.652,2,0.969,3,0.179,4,0.156,5,0.732,7,0.732,8,0.732,9,0.156,11,0.652,14,0.761,15,0.935,16,0.935,17,0.732,19,1.521,20,1.204,21,1.057,22,1.106,24,0.761,25,0.284,26,0.761,27,0.935,28,0.935,33,0.761,35,0.112,36,0.353,41,0.81,42,0.677,46,1.013,47,1.013,50,0.284,51,0.775,52,0.913,53,0.935,54,0.879,57,1.28,59,1.121,63,0.578,64,0.022,65,0.534,66,0.247,67,0.578,70,0.677,73,0.861,81,0.823,84,1.021,86,0.975,91,1.003,92,0.418,94,0.894,99,1.231,103,0.541,147,1.482,148,1.482,154,0.477,160,0.365,161,0.578,162,0.578,163,0.156,164,0.761,165,0.669,166,0.578,167,0.578,168,0.969,169,0.775,173,1.364,174,1.203,175,1.146,176,0.179,177,0.179,179,0.434,180,0.578,182,0.81,183,0.418,184,0.578,185,0.578,186,0.578,187,0.578,188,0.81,189,0.578,190,0.578,191,0.578,192,0.81,193,0.761,194,0.578,195,0.578,197,0.578,205,1.275,222,0.82,233,0.541,238,1.358,239,1.358,244,1.358,246,1.215,258,1.357,263,0.775,264,1.086,265,1.086,266,0.761,267,1.086,324,0.732,325,1.026,326,1.026,327,0.732,328,0.732,329,1.184,330,0.615,331,0.477,332,0.652,333,1.026,334,0.652,335,1.026,336,0.578,337,0.446,338,0.732,339,0.615,340,0.33,341,0.652,342,0.732,343,0.615,344,0.732,345,0.652,346,0.732,347,0.652,348,0.732,349,0.652,350,0.652,351,0.652,352,0.732,353,0.652,354,1.095,355,0.732,356,0.652,357,1.301,358,0.732,359,1.143,360,0.732,361,0.652,362,0.732,363,0.652,364,0.732,365,0.652,366,0.732,367,0.652,368,0.732,369,0.652,370,0.732,371,0.652,372,0.732,373,0.732,374,0.732,375,0.014,376,0.014,377,0.81,423,1.751,428,1.751,429,1.897,438,1.751,439,1.083,441,1.083,442,1.083,452,1.146,454,0.917,455,0.732,458,1.283,460,1.517,464,2.031,465,1.283,477,2.704,493,2.126,510,1.364,511,1.853,512,1.853,513,2.007,514,2.332,543,2.39,617,1.284,635,1.606,637,1.544,638,2.031,782,1.024,783,1.435,784,1.794,785,1.889,786,1.435,787,1.794,788,1.435,789,1.435,790,1.794,791,1.435,818,1.517,819,1.517,820,1.517,821,1.357,888,2.474,890,1.766,1011,1.544,1093,2.483,1094,3.147,1189,3.218,1192,1.766,1205,3.922,1217,3.073,1218,3.073,1219,3.073,1220,3.33,1221,3.33,1229,2.663,1232,1.901,1233,1.901,1234,3.073,1235,1.901,1236,1.901,1237,1.901,1238,2.663,1239,1.901,1240,1.901,1241,1.901,1242,1.901,1243,1.901,1244,1.901,1245,1.901,1246,1.901,1247,1.901,1248,1.901,1249,1.901,1250,1.901,1254,1.901,1255,2.663,1256,2.663,1257,2.663,1258,2.663,1259,2.663,1260,2.663,1261,2.663,1262,2.663,1273,2.663,1274,5.176,1275,2.483,1276,6.677,1277,4.596,1278,4.596,1279,4.596,1280,3.281,1281,3.281,1282,3.281,1283,3.281,1284,3.281,1285,3.281,1286,3.281,1287,3.281,1288,3.281,1289,3.281,1290,3.147,1291,3.147,1292,4.596,1293,3.922,1294,3.922,1295,3.922,1296,3.479,1297,4.596,1298,4.596,1299,3.922,1300,3.479,1301,3.922,1302,4.351,1303,4.596,1304,3.479]],["title/components/ProductDetailCuadernoComponent.html",[0,0.049,361,0.716]],["body/components/ProductDetailCuadernoComponent.html",[0,0.072,1,0.65,2,0.966,3,0.179,4,0.156,5,0.73,7,0.73,8,0.73,9,0.156,11,0.65,14,0.76,15,0.934,16,0.934,17,0.73,19,1.52,20,1.203,21,1.057,22,1.105,24,0.76,25,0.283,26,0.76,27,0.934,28,0.934,33,0.76,35,0.112,36,0.352,41,0.808,42,0.676,46,1.012,47,1.012,50,0.283,51,0.773,52,0.912,53,0.934,54,0.877,57,1.279,59,1.12,63,0.576,64,0.022,65,0.533,66,0.247,67,0.576,70,0.676,73,0.859,81,0.822,84,1.021,86,0.974,91,1.001,92,0.418,94,0.893,99,1.23,103,0.54,129,2.657,147,1.479,148,1.479,154,0.476,160,0.365,161,0.576,162,0.576,163,0.156,164,0.76,165,0.667,166,0.576,167,0.576,168,0.966,169,0.773,173,1.359,174,1.202,175,1.142,176,0.179,177,0.179,179,0.433,180,0.576,182,0.808,183,0.418,184,0.576,185,0.576,186,0.576,187,0.576,188,0.808,189,0.576,190,0.576,191,0.576,192,0.808,193,0.76,194,0.576,195,0.576,197,0.576,205,1.274,222,0.817,233,0.54,238,1.356,239,1.356,244,1.356,246,1.212,258,1.354,263,0.773,264,1.083,265,1.083,266,0.76,267,1.083,275,3.913,324,0.73,325,1.024,326,1.024,327,0.73,328,0.73,329,1.182,330,0.613,331,0.476,332,0.65,333,1.024,334,0.65,335,1.024,336,0.576,337,0.445,338,0.73,339,0.613,340,0.329,341,0.65,342,0.73,343,0.613,344,0.73,345,0.65,346,0.73,347,0.65,348,0.73,349,0.65,350,0.65,351,0.65,352,0.73,353,0.65,354,1.094,355,0.73,356,0.65,357,1.301,358,0.73,359,0.65,360,0.73,361,1.141,362,0.73,363,0.65,364,0.73,365,0.65,366,0.73,367,0.65,368,0.73,369,0.65,370,0.73,371,0.65,372,0.73,373,0.73,374,0.73,375,0.013,376,0.013,377,0.808,423,1.748,428,1.748,429,1.895,438,1.748,439,1.079,441,1.079,442,1.079,452,1.142,454,0.914,455,0.73,458,1.281,460,1.514,464,2.026,465,1.281,477,2.701,493,2.124,510,1.359,511,1.849,512,1.849,513,2.005,514,2.33,543,2.386,617,1.281,635,1.603,637,1.539,638,2.026,782,1.021,783,1.431,784,1.792,785,1.887,786,1.431,787,1.792,788,1.431,789,1.431,790,1.792,791,1.431,818,1.514,819,1.514,820,1.514,821,1.354,888,2.468,890,1.76,1011,1.539,1093,2.475,1094,3.14,1095,3.471,1098,3.913,1189,3.216,1192,1.76,1200,3.913,1201,3.913,1217,3.068,1218,3.068,1219,3.068,1220,3.325,1221,3.325,1229,2.657,1232,1.895,1233,1.895,1234,3.068,1235,1.895,1236,1.895,1237,1.895,1238,2.657,1239,1.895,1240,1.895,1241,1.895,1242,1.895,1243,1.895,1244,1.895,1245,1.895,1246,1.895,1247,1.895,1248,1.895,1249,1.895,1250,1.895,1254,1.895,1255,2.657,1256,2.657,1257,2.657,1258,2.657,1259,2.657,1260,2.657,1261,2.657,1262,2.657,1273,2.657,1291,3.14,1296,3.471,1300,3.471,1302,4.344,1304,3.471,1305,5.173,1306,2.475,1307,6.433,1308,4.585,1309,4.585,1310,4.585,1311,3.27,1312,3.27,1313,3.27,1314,3.27,1315,3.27,1316,3.27,1317,3.27,1318,3.27,1319,3.27,1320,3.27,1321,4.585,1322,4.585,1323,4.585,1324,4.585,1325,4.585,1326,4.585,1327,3.913,1328,3.913,1329,3.913]],["title/components/ProductDetailLibretaComponent.html",[0,0.049,363,0.716]],["body/components/ProductDetailLibretaComponent.html",[0,0.072,1,0.651,2,0.967,3,0.179,4,0.156,5,0.731,7,0.731,8,0.731,9,0.156,11,0.651,14,0.76,15,0.934,16,0.934,17,0.731,19,1.521,20,1.203,21,1.057,22,1.105,24,0.76,25,0.284,26,0.76,27,0.934,28,0.934,33,0.76,35,0.112,36,0.352,41,0.809,42,0.676,46,1.012,47,1.012,50,0.284,51,0.773,52,0.912,53,0.934,54,0.878,57,1.279,59,1.12,63,0.577,64,0.022,65,0.533,66,0.247,67,0.577,70,0.676,73,0.86,81,0.822,84,1.021,86,0.974,91,1.002,92,0.418,94,0.893,99,1.23,103,0.54,147,1.48,148,1.48,154,0.476,160,0.365,161,0.577,162,0.577,163,0.156,164,0.76,165,0.668,166,0.577,167,0.577,168,0.967,169,0.773,173,1.361,174,1.202,175,1.143,176,0.179,177,0.179,179,0.434,180,0.577,182,0.809,183,0.418,184,0.577,185,0.577,186,0.577,187,0.577,188,0.809,189,0.577,190,0.577,191,0.577,192,0.809,193,0.76,194,0.577,195,0.577,197,0.577,205,1.274,222,0.818,233,0.54,238,1.357,239,1.357,244,1.357,246,1.213,258,1.355,263,0.773,264,1.084,265,1.084,266,0.76,267,1.084,324,0.731,325,1.024,326,1.024,327,0.731,328,0.731,329,1.183,330,0.613,331,0.476,332,0.651,333,1.024,334,0.651,335,1.024,336,0.577,337,0.445,338,0.731,339,0.613,340,0.329,341,0.651,342,0.731,343,0.613,344,0.731,345,0.651,346,0.731,347,0.651,348,0.731,349,0.651,350,0.651,351,0.651,352,0.731,353,0.651,354,1.094,355,0.731,356,0.651,357,1.301,358,0.731,359,0.651,360,0.731,361,0.651,362,0.731,363,1.142,364,0.731,365,0.651,366,0.731,367,0.651,368,0.731,369,0.651,370,0.731,371,0.651,372,0.731,373,0.731,374,0.731,375,0.013,376,0.013,377,0.809,423,1.749,428,1.749,429,1.896,438,1.749,439,1.081,441,1.081,442,1.081,452,1.143,454,0.915,455,0.731,458,1.282,460,1.515,464,2.027,465,1.282,477,2.702,493,2.125,510,1.361,511,1.85,512,1.85,513,2.005,514,2.331,543,2.387,617,1.282,635,1.604,637,1.54,638,2.027,782,1.022,783,1.433,784,1.793,785,1.888,786,1.433,787,1.793,788,1.433,789,1.433,790,1.793,791,1.433,818,1.515,819,1.515,820,1.515,821,1.355,888,2.47,890,1.762,1011,1.54,1094,3.143,1189,3.216,1192,1.762,1203,3.916,1217,3.07,1218,3.07,1219,3.07,1220,3.327,1221,3.327,1229,2.659,1232,1.897,1233,1.897,1234,3.07,1235,1.897,1236,1.897,1237,1.897,1238,2.659,1239,1.897,1240,1.897,1241,1.897,1242,1.897,1243,1.897,1244,1.897,1245,1.897,1246,1.897,1247,1.897,1248,1.897,1249,1.897,1250,1.897,1254,1.897,1255,2.659,1256,2.659,1257,2.659,1258,2.659,1259,2.659,1260,2.659,1261,2.659,1262,2.659,1273,2.659,1290,3.628,1291,3.143,1293,3.916,1294,3.916,1295,3.916,1296,3.473,1299,3.916,1300,3.473,1301,3.916,1302,4.346,1304,3.473,1327,3.916,1328,3.916,1329,3.916,1330,5.174,1331,2.478,1332,6.674,1333,4.588,1334,4.588,1335,4.588,1336,3.273,1337,3.273,1338,3.273,1339,3.273,1340,3.273,1341,3.273,1342,3.273,1343,3.273,1344,3.273,1345,3.273,1346,4.588,1347,4.588,1348,4.588]],["title/components/ProductDetailPoleraComponent.html",[0,0.049,365,0.716]],["body/components/ProductDetailPoleraComponent.html",[0,0.073,1,0.662,2,0.978,3,0.182,4,0.159,5,0.743,7,0.743,8,0.743,9,0.159,11,0.662,14,0.769,15,0.942,16,0.942,17,0.743,19,1.528,20,1.205,21,1.059,22,1.111,24,0.769,25,0.287,26,0.769,27,0.942,28,0.942,33,0.769,35,0.114,36,0.356,41,0.818,42,0.681,46,1.02,47,1.02,50,0.287,51,0.786,52,0.917,53,0.942,54,0.886,57,1.285,59,1.124,63,0.587,64,0.022,65,0.538,66,0.248,67,0.587,70,0.681,73,0.87,81,0.827,84,1.025,86,1.025,91,1.008,92,0.419,94,0.897,99,1.235,103,0.547,147,1.493,148,1.493,154,0.484,160,0.366,161,0.587,162,0.587,163,0.159,164,0.769,165,0.676,166,0.587,167,0.587,168,0.983,169,0.786,173,1.384,174,1.209,175,1.162,176,0.182,177,0.182,179,0.436,180,0.587,182,0.818,183,0.419,184,0.587,185,0.587,186,0.587,187,0.587,188,0.818,189,0.587,190,0.587,191,0.587,192,0.818,193,0.769,194,0.587,195,0.587,197,0.587,205,1.282,222,0.832,233,0.547,238,1.367,239,1.367,244,1.367,246,1.227,258,1.371,263,0.786,264,1.097,265,1.097,266,0.769,267,1.097,324,0.743,325,1.036,326,1.036,327,0.743,328,0.743,329,1.193,330,0.623,331,0.484,332,0.662,333,1.036,334,0.662,335,1.036,336,0.587,337,0.453,338,0.743,339,0.623,340,0.335,341,0.662,342,0.743,343,0.623,344,0.743,345,0.662,346,0.743,347,0.662,348,0.743,349,0.662,350,0.662,351,0.662,352,0.743,353,0.662,354,1.097,355,0.743,356,0.662,357,1.302,358,0.743,359,0.662,360,0.743,361,0.662,362,0.743,363,0.662,364,0.743,365,1.15,366,0.743,367,0.662,368,0.743,369,0.662,370,0.743,371,0.662,372,0.743,373,0.743,374,0.743,375,0.014,376,0.014,377,0.818,423,1.765,428,1.765,429,1.909,438,1.765,439,1.099,441,1.099,442,1.099,452,1.162,454,0.93,455,0.743,458,1.291,460,1.532,464,2.051,465,1.291,477,2.721,493,2.134,510,1.384,511,1.867,512,1.867,513,2.02,514,2.34,543,2.404,617,1.297,635,1.616,637,1.566,638,2.051,782,1.039,783,1.449,784,1.806,785,1.899,786,1.449,787,1.806,788,1.449,789,1.449,790,1.806,791,1.449,818,1.532,819,1.532,820,1.532,821,1.371,888,2.499,890,1.792,1011,1.566,1081,3.514,1099,3.514,1189,3.226,1192,1.792,1207,3.962,1217,3.097,1218,3.097,1219,3.097,1220,3.351,1221,3.351,1229,2.689,1232,1.928,1233,1.928,1234,3.097,1235,1.928,1236,1.928,1237,1.928,1238,2.689,1239,1.928,1240,1.928,1241,1.928,1242,1.928,1243,1.928,1244,1.928,1245,1.928,1246,1.928,1247,1.928,1248,1.928,1249,1.928,1250,1.928,1254,1.928,1255,2.689,1256,2.689,1257,2.689,1258,2.689,1259,2.689,1260,2.689,1261,2.689,1262,2.689,1273,2.689,1290,3.661,1291,3.179,1349,5.19,1350,2.519,1351,6.465,1352,4.642,1353,4.642,1354,4.642,1355,3.328,1356,3.328,1357,3.328,1358,3.328,1359,3.328,1360,3.328,1361,3.328,1362,3.328,1363,3.328,1364,3.328]],["title/components/ProductDetailTablaComponent.html",[0,0.049,367,0.716]],["body/components/ProductDetailTablaComponent.html",[0,0.072,1,0.657,2,0.974,3,0.181,4,0.158,5,0.738,7,0.738,8,0.738,9,0.158,11,0.657,14,0.766,15,0.939,16,0.939,17,0.738,19,1.525,20,1.205,21,1.058,22,1.108,24,0.766,25,0.286,26,0.766,27,0.939,28,0.939,33,0.766,35,0.113,36,0.354,41,0.815,42,0.679,46,1.017,47,1.017,50,0.286,51,0.781,52,0.915,53,0.939,54,0.882,57,1.283,59,1.123,63,0.583,64,0.022,65,0.536,66,0.248,67,0.583,70,0.74,73,0.866,81,0.825,84,1.023,86,0.977,91,1.005,92,0.419,94,0.895,99,1.233,103,0.544,147,1.488,148,1.488,154,0.481,160,0.366,161,0.583,162,0.583,163,0.158,164,0.766,165,0.672,166,0.583,167,0.583,168,0.976,169,0.781,173,1.374,174,1.206,175,1.155,176,0.181,177,0.181,179,0.435,180,0.583,182,0.815,183,0.419,184,0.583,185,0.583,186,0.583,187,0.583,188,0.815,189,0.583,190,0.583,191,0.583,192,0.815,193,0.766,194,0.583,195,0.583,197,0.583,205,1.279,222,0.826,233,0.544,238,1.363,239,1.363,244,1.363,246,1.221,258,1.364,263,0.781,264,1.092,265,1.092,266,0.766,267,1.092,324,0.738,325,1.031,326,1.031,327,0.738,328,0.738,329,1.189,330,0.619,331,0.481,332,0.657,333,1.031,334,0.657,335,1.031,336,0.583,337,0.45,338,0.738,339,0.619,340,0.333,341,0.657,342,0.738,343,0.619,344,0.738,345,0.657,346,0.738,347,0.657,348,0.738,349,0.657,350,0.657,351,0.657,352,0.738,353,0.657,354,1.096,355,0.738,356,0.657,357,1.302,358,0.738,359,0.657,360,0.738,361,0.657,362,0.738,363,0.657,364,0.738,365,0.657,366,0.738,367,1.147,368,0.738,369,0.657,370,0.738,371,0.657,372,0.738,373,0.738,374,0.738,375,0.014,376,0.014,377,0.815,423,1.758,428,1.758,429,1.904,438,1.758,439,1.091,441,1.091,442,1.091,452,1.155,454,0.924,455,0.738,458,1.287,460,1.525,464,2.041,465,1.287,477,2.174,493,2.13,510,1.374,511,1.86,512,1.86,513,2.014,514,2.336,543,2.398,617,1.291,635,1.611,637,1.556,638,2.041,782,1.032,783,1.442,784,1.8,785,1.894,786,1.442,787,1.8,788,1.442,789,1.442,790,1.8,791,1.442,818,1.525,819,1.525,820,1.525,821,1.364,888,2.487,890,1.78,1011,1.556,1082,3.943,1189,3.222,1192,1.78,1210,5.507,1211,4.922,1212,3.943,1217,3.086,1218,3.086,1219,3.086,1220,3.341,1221,3.341,1229,2.677,1232,1.915,1233,1.915,1234,3.086,1235,1.915,1236,1.915,1237,1.915,1238,2.677,1239,1.915,1240,1.915,1241,1.915,1242,1.915,1243,1.915,1244,1.915,1245,1.915,1246,1.915,1247,1.915,1248,1.915,1249,1.915,1250,1.915,1254,1.915,1255,2.677,1256,2.677,1257,2.677,1258,2.677,1259,2.677,1260,2.677,1261,2.677,1262,2.677,1273,2.677,1290,2.264,1365,5.184,1366,2.502,1367,4.62,1368,4.62,1369,4.62,1370,3.306,1371,3.306,1372,3.306,1373,3.306,1374,3.306,1375,3.306,1376,3.306,1377,3.306,1378,3.306,1379,3.306,1380,4.62,1381,4.62,1382,4.62,1383,4.62,1384,4.62,1385,4.62,1386,4.62,1387,4.62]],["title/interfaces/Profile.html",[394,0.362,570,1.694]],["body/interfaces/Profile.html",[3,0.153,4,0.134,9,0.134,25,0.418,35,0.166,36,0.315,42,0.33,50,0.173,56,0.875,58,1.989,61,2.203,64,0.022,65,0.7,66,0.168,68,2.146,69,1.609,70,0.851,73,1.205,76,2.063,80,1.434,81,0.978,82,1.085,83,2.147,84,1.03,85,2.181,86,0.831,88,2.081,89,1.518,92,0.397,94,0.874,98,2.007,100,1.239,101,1.904,102,1.409,103,0.572,105,1.814,106,1.099,110,1.509,112,1.099,116,1.239,117,1.166,120,1.239,125,1.707,131,1.099,137,1.604,139,1.699,142,2.105,153,1.178,154,1.001,159,1.434,160,0.224,163,0.134,176,0.153,177,0.153,178,2.212,179,0.37,181,1.703,183,0.436,205,0.866,233,0.484,235,2.105,250,1.517,258,0.828,260,1.505,261,1.505,266,0.465,340,0.704,375,0.012,376,0.012,394,0.489,395,1.376,412,1.518,451,1.625,452,1.697,454,0.783,455,0.917,458,1.435,465,0.626,468,1.409,552,2.379,554,3.167,562,1.625,570,3.235,577,2.379,595,3.572,599,0.979,607,0.979,609,1.085,611,1.037,620,2.231,621,2.473,634,1.814,639,2.253,640,2.273,641,2.679,642,2.2,643,2.673,644,2.273,645,2.273,646,2.542,648,2.517,649,1.518,655,2.078,662,0.926,684,1.518,685,1.707,687,2.363,694,2.516,696,2.273,697,2.367,698,1.037,699,2.224,700,1.166,701,1.166,702,1.166,703,1.166,704,1.166,705,1.707,706,1.166,707,1.707,708,1.166,709,2.02,710,1.166,711,1.166,712,1.166,713,1.099,714,1.166,715,1.166,716,1.166,717,1.707,718,1.166,719,1.166,720,1.609,721,1.166,722,1.166,723,1.166,724,1.166,725,1.166,726,1.319,727,1.099,728,1.037,731,1.319,732,2.231,748,1.166,833,1.409,852,1.625,858,1.625,859,1.409,863,2.815,930,1.759,934,1.759,946,1.625,972,1.509,995,3.099,1016,2.211,1017,1.625,1030,3.099,1036,2.379,1043,2.379,1045,1.625,1046,1.625,1122,1.759,1123,2.379,1124,2.576,1388,1.759,1389,1.92,1390,1.92,1391,2.812,1392,1.92,1393,2.812,1394,1.92,1395,2.812,1396,1.92,1397,1.92,1398,1.92,1399,2.812,1400,1.92,1401,1.92,1402,2.812,1403,2.812,1404,2.812,1405,1.92,1406,1.92,1407,1.92,1408,1.92,1409,1.92,1410,1.92,1411,3.663,1412,3.899,1413,1.92,1414,2.812,1415,2.812,1416,3.899,1417,1.92,1418,2.812,1419,1.92,1420,1.92,1421,2.812,1422,1.92,1423,1.92,1424,1.92,1425,1.92,1426,1.92,1427,1.92,1428,1.92,1429,1.92,1430,1.92,1431,1.92,1432,1.92,1433,1.92,1434,1.92,1435,1.92,1436,1.92,1437,1.92,1438,1.92,1439,1.92,1440,1.92,1441,1.92,1442,1.92,1443,3.328,1444,1.92,1445,3.328,1446,3.328,1447,1.92,1448,1.92,1449,1.92]],["title/components/ProfileComponent.html",[0,0.049,369,0.716]],["body/components/ProfileComponent.html",[0,0.059,1,0.465,2,0.756,3,0.128,4,0.112,5,0.523,7,0.523,8,0.523,9,0.112,11,0.465,14,0.594,15,0.769,16,0.769,17,0.523,19,1.446,20,1.161,21,1.02,22,0.98,24,0.594,25,0.27,26,0.594,27,0.769,28,0.769,33,0.594,35,0.08,36,0.275,41,0.632,42,0.576,46,0.862,47,0.862,50,0.344,51,0.553,52,0.869,53,0.862,54,0.873,57,1.217,58,2.138,59,1.081,61,2.15,62,3.7,63,0.929,64,0.022,65,0.582,66,0.236,67,0.929,68,2.079,69,2.448,70,0.865,71,3.7,72,2.715,73,1.321,74,2.715,75,1.802,77,2.715,78,2.25,80,1.707,81,0.974,82,1.292,83,2.16,84,1.002,85,1.059,86,1.035,88,1.836,90,1.44,91,1.035,92,0.415,94,0.593,96,1.772,98,1.526,99,1.325,103,0.736,116,2.16,117,1.491,119,3.7,120,2.457,121,2.994,122,2.715,123,2.457,124,2.715,125,1.491,126,2.457,127,2.715,128,2.715,129,2.832,130,2.715,131,1.406,132,2.715,134,2.715,142,2.208,146,3.296,151,2.191,152,2.736,153,0.723,154,0.635,155,3.306,156,2.736,159,1.841,160,0.341,161,0.413,162,0.413,163,0.171,164,0.594,165,0.522,166,0.413,167,0.413,168,0.691,169,0.553,172,1.469,174,0.972,176,0.128,177,0.128,178,2.013,179,0.413,180,0.413,181,1.542,182,0.632,183,0.378,184,0.413,185,0.413,186,0.413,187,0.413,188,0.632,189,0.413,190,0.413,191,0.413,192,0.413,193,0.594,194,0.413,195,0.413,197,0.413,222,0.897,232,0.866,233,0.703,238,1.155,239,1.155,244,1.155,246,0.948,250,1.526,259,2.457,260,1.47,261,1.47,263,0.553,264,0.848,265,0.848,266,0.594,267,0.848,324,0.523,325,1.091,326,0.801,327,0.523,328,0.523,329,0.974,330,0.439,331,0.341,332,0.465,333,0.801,334,0.465,335,0.801,336,0.413,337,0.318,338,0.523,339,0.439,340,0.236,341,0.465,342,0.523,343,0.439,344,0.523,345,0.465,346,0.523,347,0.465,348,0.523,349,0.465,350,0.465,351,0.465,352,0.523,353,0.465,354,0.9,355,0.523,356,0.465,357,0.98,358,0.523,359,0.465,360,0.523,361,0.465,362,0.523,363,0.465,364,0.523,365,0.465,366,0.523,367,0.465,368,0.523,369,1.106,370,0.523,371,0.465,372,0.523,373,0.523,374,0.523,375,0.011,376,0.011,377,0.632,395,1.276,399,2.698,400,2.065,420,3.062,423,1.44,427,2.527,428,1.614,429,1.74,430,2.832,431,3.054,432,3.054,438,1.911,439,0.773,441,0.773,442,1.614,443,1.356,455,1.529,456,1.356,458,1.473,460,1.971,461,3.222,462,2.68,463,2.078,464,1.585,465,1.091,570,1.688,617,1.002,620,0.917,635,1.002,639,0.773,640,1.326,643,0.973,644,1.326,645,1.326,649,0.866,655,0.818,662,1.836,684,1.949,687,2.16,694,1.034,698,1.326,728,1.326,733,2.632,734,3.471,735,3.471,736,3.364,737,2.632,738,1.931,739,2.632,740,2.632,741,2.632,742,1.931,743,1.931,744,3.116,782,0.731,783,1.12,784,1.526,785,1.526,786,1.12,787,1.526,788,1.12,789,1.12,790,1.526,791,1.12,804,1.772,808,2.25,818,1.184,819,1.184,820,1.184,821,1.059,837,2.457,873,3.7,898,2.715,899,2.715,974,2.715,975,2.715,987,3.488,988,2.457,994,2.457,1001,1.772,1011,1.688,1016,2.994,1038,1.772,1123,2.078,1148,2.715,1185,1.998,1450,1.998,1451,3.587,1452,3.587,1453,4.361,1454,3.062,1455,4.888,1456,3.062,1457,3.587,1458,3.062,1459,3.062,1460,3.062,1461,3.062,1462,3.062,1463,3.062,1464,2.341,1465,3.062,1466,4.172,1467,3.062,1468,5.096,1469,2.341,1470,3.062,1471,2.341,1472,3.062,1473,2.341,1474,5.225,1475,3.587,1476,2.341,1477,2.341,1478,2.341,1479,2.341,1480,3.062,1481,2.341,1482,1.998,1483,1.998,1484,1.998,1485,3.062,1486,2.341,1487,4.746,1488,3.062,1489,4.888,1490,3.062,1491,3.062,1492,4.172,1493,3.062,1494,2.341,1495,2.341,1496,1.998,1497,1.998,1498,1.998,1499,1.998,1500,3.062,1501,1.998,1502,1.998,1503,2.341,1504,3.062,1505,1.998,1506,1.998,1507,1.998,1508,1.998,1509,1.998,1510,1.998,1511,1.998,1512,3.062,1513,1.998,1514,1.998,1515,2.341,1516,2.341,1517,2.341,1518,1.998,1519,2.341,1520,2.341,1521,3.587,1522,2.341,1523,2.341,1524,2.341,1525,2.341,1526,2.341,1527,2.341,1528,2.341,1529,2.341,1530,4.172,1531,3.587,1532,3.587,1533,3.587,1534,3.062,1535,3.062,1536,2.715,1537,3.062,1538,3.062,1539,3.062,1540,3.062,1541,3.062,1542,3.062,1543,3.062]],["title/components/RegisterComponent.html",[0,0.049,371,0.716]],["body/components/RegisterComponent.html",[0,0.062,1,0.495,2,0.792,3,0.136,4,0.119,5,0.555,7,0.555,8,0.555,9,0.119,11,0.495,14,0.622,15,0.798,16,0.798,17,0.555,18,2.844,19,1.524,20,1.169,21,1.027,22,1.004,24,0.622,25,0.28,26,0.622,27,0.798,28,0.798,30,3.863,33,0.622,35,0.085,36,0.288,41,0.662,42,0.594,46,0.889,47,0.889,50,0.352,51,0.588,52,0.886,53,0.889,54,0.897,57,1.238,58,2.175,59,1.068,61,2.084,62,3.818,63,0.955,64,0.022,65,0.595,66,0.232,67,0.955,68,2.084,69,2.487,70,0.868,71,3.818,72,2.844,73,1.322,74,2.844,75,1.888,77,2.844,78,2.357,80,1.761,81,0.968,82,1.333,83,2.228,84,1.016,85,1.109,86,1.002,88,1.24,91,1.032,92,0.409,94,0.616,96,1.883,98,1.575,99,1.301,103,0.594,119,3.818,120,2.516,121,2.022,122,2.844,123,2.573,124,2.844,125,1.562,126,2.573,127,2.844,128,2.844,129,2.922,130,2.844,131,1.472,132,2.844,134,2.844,142,2.25,146,1.339,151,1.888,152,2.357,153,0.622,154,0.659,155,3.164,156,2.357,159,1.761,160,0.352,161,0.439,162,0.439,163,0.179,164,0.622,165,0.547,166,0.439,167,0.439,168,0.735,169,0.588,171,1.704,172,1.561,174,1.003,176,0.136,177,0.136,178,2.04,179,0.421,180,0.439,181,1.524,182,0.662,183,0.376,184,0.439,185,0.439,186,0.439,187,0.439,188,0.662,189,0.439,190,0.439,191,0.439,192,0.439,193,0.622,194,0.439,195,0.439,197,0.439,222,0.939,232,0.92,233,0.67,238,1.192,239,1.192,244,1.192,246,0.993,250,1.575,259,2.573,260,1.505,261,1.505,263,0.588,264,0.888,265,0.888,266,0.622,267,0.888,324,0.555,325,1.126,326,0.839,327,0.555,328,0.555,329,1.011,330,0.466,331,0.362,332,0.495,333,0.839,334,0.495,335,0.839,336,0.439,337,0.338,338,0.555,339,0.466,340,0.25,341,0.495,342,0.555,343,0.466,344,0.555,345,0.495,346,0.555,347,0.495,348,0.555,349,0.495,350,0.495,351,0.495,352,0.555,353,0.495,354,0.919,355,0.555,356,0.495,357,1.004,358,0.555,359,0.495,360,0.555,361,0.495,362,0.555,363,0.495,364,0.555,365,0.495,366,0.555,367,0.495,368,0.555,369,0.495,370,0.555,371,1.132,372,1.011,373,0.555,374,0.555,375,0.011,376,0.011,377,0.662,395,1.288,399,2.722,400,2.121,423,1.494,427,2.623,428,1.665,429,1.787,430,2.922,431,3.137,432,3.137,438,1.951,439,0.821,441,0.821,442,1.88,443,1.441,452,0.869,455,1.515,456,1.441,458,1.209,460,2.096,461,3.299,462,2.776,463,2.177,464,2.228,465,1.126,617,1.05,634,1.099,635,1.05,639,0.821,640,1.389,644,1.389,645,1.389,649,1.389,662,1.88,684,1.389,698,1.389,728,1.389,733,2.715,734,3.518,735,3.518,736,3.518,737,2.715,738,2.022,739,2.715,740,2.715,741,2.715,742,2.022,743,2.022,744,3.182,782,0.777,783,1.173,784,1.575,785,2.013,786,1.173,787,1.575,788,1.173,789,1.173,790,1.575,791,1.173,808,2.357,818,1.24,819,1.24,820,1.24,821,1.109,837,2.573,873,3.818,898,2.844,899,2.844,987,2.84,994,2.573,1148,2.844,1454,3.206,1456,3.206,1458,3.206,1459,3.206,1460,3.206,1461,3.206,1462,3.206,1463,3.206,1465,3.206,1466,4.304,1467,3.206,1468,5.194,1470,3.206,1472,3.206,1474,5.045,1480,3.206,1482,2.123,1483,2.123,1484,2.123,1485,3.206,1487,4.859,1488,3.206,1490,3.206,1491,3.206,1492,4.304,1493,3.206,1496,2.123,1497,2.123,1498,2.123,1499,2.123,1500,3.206,1501,2.123,1502,2.123,1504,2.123,1505,2.123,1506,2.123,1507,2.123,1508,2.123,1509,2.123,1510,2.123,1511,2.123,1512,3.206,1513,2.123,1514,2.123,1518,2.123,1530,4.304,1534,3.206,1535,3.206,1536,2.844,1537,3.206,1538,3.206,1539,3.206,1540,3.206,1541,3.206,1542,3.206,1543,3.206,1544,2.123,1545,3.757,1546,3.757,1547,4.527,1548,3.757,1549,2.488,1550,2.488,1551,2.488,1552,2.488,1553,2.488,1554,2.488,1555,2.488,1556,2.488,1557,2.488,1558,2.488,1559,2.488,1560,3.757,1561,2.488,1562,2.488,1563,2.488]],["title/interfaces/User.html",[340,0.362,394,0.362]],["body/interfaces/User.html",[3,0.152,4,0.133,9,0.133,25,0.418,35,0.165,36,0.314,42,0.328,50,0.172,56,0.87,58,1.983,61,2.202,64,0.022,65,0.7,66,0.218,68,2.144,69,1.601,70,0.85,73,1.203,76,2.053,80,1.427,81,0.977,82,1.08,83,2.139,84,1.028,85,2.18,86,0.829,88,2.077,89,1.511,92,0.397,94,0.834,98,2.004,100,1.231,101,1.897,102,1.4,103,0.57,105,1.806,106,1.091,110,1.5,112,1.091,116,1.231,117,1.158,120,1.231,125,1.699,131,1.091,137,1.598,139,1.569,142,2.1,153,1.188,154,1.017,159,1.427,160,0.223,163,0.133,176,0.152,177,0.152,178,2.21,179,0.369,181,1.702,183,0.436,205,0.861,233,0.481,235,2.1,250,1.511,258,0.823,260,1.501,261,1.501,266,0.462,340,0.707,375,0.012,376,0.012,394,0.487,395,1.383,412,1.511,451,1.614,452,1.691,454,0.778,455,0.912,458,1.433,465,0.622,468,1.4,552,2.368,554,3.161,562,1.614,570,3.272,577,2.368,595,3.562,599,0.973,607,0.973,609,1.08,611,1.03,620,2.225,621,2.468,634,1.806,639,2.25,640,2.268,641,2.672,642,2.195,643,2.669,644,2.268,645,2.268,646,2.539,648,2.509,649,1.511,655,2.073,662,0.92,684,1.511,685,1.699,687,2.356,694,2.509,696,2.268,697,2.361,698,1.03,699,2.217,700,1.158,701,1.158,702,1.158,703,1.158,704,1.158,705,1.699,706,1.158,707,1.699,708,1.158,709,2.013,710,1.158,711,1.158,712,1.158,713,1.091,714,1.158,715,1.158,716,1.158,717,1.699,718,1.158,719,1.158,720,1.601,721,1.158,722,1.158,723,1.158,724,1.158,725,1.158,726,1.311,727,1.091,728,1.03,731,1.311,732,2.225,748,1.158,833,1.4,852,1.614,858,1.614,859,1.4,863,2.805,930,1.747,934,1.747,946,1.614,972,1.5,995,3.09,1016,2.2,1017,1.614,1030,3.09,1036,2.368,1043,2.368,1045,1.614,1046,1.614,1122,1.747,1123,2.368,1124,2.564,1388,1.747,1389,1.908,1390,1.908,1391,2.799,1392,1.908,1393,2.799,1394,1.908,1395,2.799,1396,1.908,1397,1.908,1398,1.908,1399,2.799,1400,1.908,1401,1.908,1402,2.799,1403,2.799,1404,2.799,1405,1.908,1406,1.908,1407,1.908,1408,1.908,1409,1.908,1410,1.908,1411,3.652,1412,3.889,1413,1.908,1414,2.799,1415,2.799,1416,3.889,1417,1.908,1418,2.799,1419,1.908,1420,1.908,1421,2.799,1422,1.908,1423,1.908,1424,1.908,1425,1.908,1426,1.908,1427,1.908,1428,1.908,1429,1.908,1430,1.908,1431,1.908,1432,1.908,1433,1.908,1434,1.908,1435,1.908,1436,1.908,1437,1.908,1438,1.908,1439,1.908,1440,1.908,1441,1.908,1442,1.908,1443,3.315,1444,1.908,1445,3.315,1446,3.315,1447,1.908,1448,1.908,1449,1.908]],["title/interfaces/User-1.html",[205,0.635,340,0.303,394,0.303]],["body/interfaces/User-1.html",[0,0.075,3,0.237,4,0.206,9,0.206,10,1.696,12,2.331,13,2.331,14,0.717,15,0.976,16,0.976,20,0.717,21,0.63,22,1.076,23,2.445,24,0.717,25,0.268,26,0.717,27,0.976,28,0.976,29,3.472,32,2.716,33,0.717,34,2.716,35,0.189,36,0.425,40,3.277,42,0.51,46,0.763,47,0.763,50,0.268,52,0.888,53,0.763,54,0.717,56,2.007,57,1.213,64,0.022,65,0.704,66,0.262,90,1.827,92,0.432,94,0.83,113,4.618,153,1.159,154,1.018,159,2.246,160,0.382,161,0.763,162,0.763,163,0.206,164,0.917,165,0.806,166,0.763,167,0.763,169,1.023,170,1.913,173,1.8,174,0.861,175,1.512,176,0.237,177,0.237,179,0.46,180,0.763,182,0.976,183,0.432,184,0.763,185,0.763,186,0.763,187,0.763,188,0.976,189,0.763,190,0.763,191,0.763,192,0.763,193,0.917,194,0.763,195,0.763,197,0.763,211,4.189,214,4.189,216,4.189,219,4.618,220,3.277,222,1.082,231,1.913,232,2.046,233,0.652,234,2.445,235,2.046,236,2.445,237,1.601,339,0.811,340,0.721,375,0.016,376,0.016,377,0.763,394,0.436,395,1.35,552,2.508,553,3.695,554,2.175,557,3.695,558,3.695,559,3.695,560,3.695,562,2.508,564,3.695,570,3.292,575,3.695,576,5.487,577,2.508,578,3.695,579,3.695,580,3.695,581,3.695,582,3.695,583,3.695,584,5.207,585,3.695,586,4.724,587,3.695,588,3.695,589,3.695,590,3.695,591,3.695,592,3.695,607,1.512]],["title/interfaces/Users.html",[394,0.362,554,1.809]],["body/interfaces/Users.html",[3,0.152,4,0.133,9,0.133,25,0.418,35,0.165,36,0.314,42,0.328,50,0.172,56,0.87,58,1.983,61,2.202,64,0.022,65,0.7,66,0.218,68,2.144,69,1.601,70,0.85,73,1.203,76,2.053,80,1.427,81,0.977,82,1.08,83,2.139,84,1.028,85,2.18,86,0.829,88,2.077,89,1.511,92,0.397,94,0.834,98,2.004,100,1.231,101,1.897,102,1.4,103,0.57,105,1.806,106,1.091,110,1.5,112,1.091,116,1.231,117,1.158,120,1.231,125,1.699,131,1.091,137,1.598,139,1.569,142,2.1,153,1.188,154,1.017,159,1.427,160,0.223,163,0.133,176,0.152,177,0.152,178,2.21,179,0.369,181,1.702,183,0.436,205,0.861,233,0.481,235,2.1,250,1.511,258,0.823,260,1.501,261,1.501,266,0.462,340,0.703,375,0.012,376,0.012,394,0.487,395,1.383,412,1.511,451,1.614,452,1.691,454,0.778,455,0.912,458,1.433,465,0.622,468,1.4,552,2.368,554,3.225,562,1.614,570,3.272,577,2.368,595,3.562,599,0.973,607,0.973,609,1.08,611,1.03,620,2.225,621,2.468,634,1.806,639,2.25,640,2.268,641,2.672,642,2.195,643,2.669,644,2.268,645,2.268,646,2.539,648,2.509,649,1.511,655,2.073,662,0.92,684,1.511,685,1.699,687,2.356,694,2.509,696,2.268,697,2.361,698,1.03,699,2.217,700,1.158,701,1.158,702,1.158,703,1.158,704,1.158,705,1.699,706,1.158,707,1.699,708,1.158,709,2.013,710,1.158,711,1.158,712,1.158,713,1.091,714,1.158,715,1.158,716,1.158,717,1.699,718,1.158,719,1.158,720,1.601,721,1.158,722,1.158,723,1.158,724,1.158,725,1.158,726,1.311,727,1.091,728,1.03,731,1.311,732,2.225,748,1.158,833,1.4,852,1.614,858,1.614,859,1.4,863,2.805,930,1.747,934,1.747,946,1.614,972,1.5,995,3.09,1016,2.2,1017,1.614,1030,3.09,1036,2.368,1043,2.368,1045,1.614,1046,1.614,1122,1.747,1123,2.368,1124,2.564,1388,1.747,1389,1.908,1390,1.908,1391,2.799,1392,1.908,1393,2.799,1394,1.908,1395,2.799,1396,1.908,1397,1.908,1398,1.908,1399,2.799,1400,1.908,1401,1.908,1402,2.799,1403,2.799,1404,2.799,1405,1.908,1406,1.908,1407,1.908,1408,1.908,1409,1.908,1410,1.908,1411,3.652,1412,3.889,1413,1.908,1414,2.799,1415,2.799,1416,3.889,1417,1.908,1418,2.799,1419,1.908,1420,1.908,1421,2.799,1422,1.908,1423,1.908,1424,1.908,1425,1.908,1426,1.908,1427,1.908,1428,1.908,1429,1.908,1430,1.908,1431,1.908,1432,1.908,1433,1.908,1434,1.908,1435,1.908,1436,1.908,1437,1.908,1438,1.908,1439,1.908,1440,1.908,1441,1.908,1442,1.908,1443,3.315,1444,1.908,1445,3.315,1446,3.315,1447,1.908,1448,1.908,1449,1.908]],["title/injectables/UsersService.html",[56,1.124,609,0.951]],["body/injectables/UsersService.html",[3,0.121,4,0.106,9,0.106,25,0.422,35,0.176,36,0.264,41,0.607,42,0.56,50,0.261,56,1.075,58,2.05,59,1.118,61,2.253,63,1.105,64,0.022,65,0.712,66,0.266,67,1.105,68,2.188,69,1.862,70,0.86,73,1.255,76,2.388,80,1.66,81,0.994,82,1.256,83,2.404,84,1.042,85,2.194,86,0.912,88,2.195,89,1.757,91,1.081,92,0.407,94,0.877,98,2.107,100,1.521,101,2.132,102,1.73,103,0.641,105,2.1,106,1.349,110,1.853,112,1.349,116,1.521,117,1.431,120,1.521,125,1.976,131,1.349,137,1.797,139,1.551,142,2.17,147,1.178,148,1.178,153,1.168,154,0.999,159,1.202,160,0.188,163,0.106,176,0.121,177,0.121,178,2.144,179,0.44,181,1.661,183,0.422,205,0.725,233,0.405,235,1.902,250,1.699,258,1.017,260,1.627,261,1.627,266,0.57,340,0.705,375,0.01,376,0.01,394,0.424,395,1.385,412,1.757,451,1.286,452,1.66,454,0.62,455,1.061,458,1.471,465,0.495,468,2.388,552,1.994,554,3.199,555,2.938,562,1.994,570,3.196,577,1.994,595,3.226,599,0.775,609,0.91,611,0.82,620,2.413,621,2.262,634,2.1,639,2.267,640,2.413,641,2.897,642,2.17,643,2.647,644,2.413,645,2.413,646,2.551,648,2.236,649,1.273,655,1.983,662,1.136,684,1.757,685,1.976,687,2.272,694,2.404,696,2.17,697,2.44,698,1.273,699,2.36,700,1.431,701,1.431,702,0.923,703,0.923,704,0.923,705,1.431,706,0.923,707,1.431,708,0.923,709,1.753,710,0.923,711,0.923,712,0.923,713,0.869,714,0.923,715,0.923,716,0.923,717,1.976,718,1.976,719,0.923,720,1.349,721,0.923,722,0.923,723,0.923,724,0.923,725,0.923,726,1.62,727,1.349,728,1.273,731,1.044,732,2.132,748,1.431,833,2.119,852,1.286,858,1.286,859,1.73,863,2.443,895,1.286,900,2.606,930,2.159,934,2.159,946,1.286,972,1.195,995,2.753,1016,2.558,1017,1.994,1030,2.753,1036,2.753,1043,1.994,1045,1.286,1046,1.286,1051,2.938,1122,1.392,1123,1.994,1124,2.159,1388,1.392,1389,2.888,1390,2.357,1391,2.357,1392,1.52,1393,2.357,1394,1.52,1395,2.357,1396,1.52,1397,1.52,1398,2.357,1399,2.357,1400,1.52,1401,1.52,1402,2.357,1403,2.357,1404,2.357,1405,1.52,1406,1.52,1407,1.52,1408,1.52,1409,1.52,1410,2.357,1411,3.254,1412,3.522,1413,1.52,1414,2.357,1415,2.357,1416,3.522,1417,2.357,1418,2.357,1419,1.52,1420,1.52,1421,2.357,1422,2.357,1423,2.357,1424,1.52,1425,1.52,1426,1.52,1427,1.52,1428,1.52,1429,1.52,1430,1.52,1431,1.52,1432,1.52,1433,2.357,1434,1.52,1435,1.52,1436,1.52,1437,1.52,1438,2.357,1439,2.357,1440,2.357,1441,3.254,1442,2.357,1443,2.888,1444,1.52,1445,2.888,1446,3.888,1447,2.357,1448,1.52,1449,1.52,1564,3.442,1565,3.442,1566,3.442,1567,3.442,1568,3.442,1569,3.442,1570,2.219,1571,3.442,1572,2.219,1573,2.219,1574,2.219,1575,2.219,1576,2.219,1577,2.219,1578,2.219,1579,2.219,1580,2.219,1581,2.219,1582,2.219,1583,2.219,1584,2.219,1585,2.219,1586,2.219,1587,2.219]],["title/coverage.html",[1588,4.182]],["body/coverage.html",[0,0.1,1,0.813,9,0.195,10,2.816,11,1.251,12,3.721,13,3.721,19,0.966,21,0.595,52,0.595,56,1.276,58,1.428,64,0.022,66,0.167,146,2.2,150,3.13,175,2.463,222,1.022,248,2.799,330,0.766,331,1.006,332,0.813,334,0.813,336,0.721,337,0.94,339,0.766,340,0.696,341,0.813,343,0.766,345,0.813,347,0.813,349,0.813,350,0.813,351,0.813,353,0.813,356,0.813,357,1.305,359,0.813,361,0.813,363,0.813,365,0.813,367,0.813,369,0.813,371,0.813,375,0.016,376,0.016,383,2.2,394,0.723,421,3.488,422,3.488,466,3.488,467,3.488,479,4.065,480,4.065,493,1.349,507,2.509,554,2.054,570,1.923,598,3.488,606,2.2,608,4.309,609,1.769,759,4.037,778,2.799,832,4.037,869,3.488,917,3.488,945,4.037,1071,3.488,1106,3.488,1127,3.488,1134,3.488,1167,3.488,1168,3.488,1169,3.488,1189,3.381,1190,3.488,1191,3.488,1213,4.037,1214,4.037,1274,4.037,1275,4.037,1305,4.037,1306,4.037,1330,4.037,1331,4.037,1349,4.037,1350,4.037,1365,4.037,1366,4.037,1388,3.947,1450,3.488,1544,3.488,1588,3.488,1589,4.087,1590,4.087,1591,4.087,1592,4.551,1593,5.333,1594,7.247,1595,3.094,1596,5.333,1597,4.551,1598,7.185,1599,3.488,1600,3.488,1601,3.488,1602,3.488,1603,4.087,1604,4.087,1605,5.936,1606,6.291,1607,6.816,1608,5.333,1609,6.291,1610,4.087,1611,5.333,1612,6.692,1613,4.087,1614,4.087,1615,4.087,1616,4.087,1617,5.936,1618,4.087,1619,4.087,1620,4.087,1621,4.087,1622,4.087,1623,4.087,1624,4.087,1625,4.087,1626,4.087,1627,4.087,1628,3.488,1629,4.087]],["title/dependencies.html",[1630,2.28,1631,3.692]],["body/dependencies.html",[64,0.022,163,0.264,164,0.917,165,0.806,169,1.308,175,2.246,375,0.019,376,0.019,937,4.724,938,4.724,951,4.19,1631,4.724,1632,5.535,1633,7.355,1634,5.535,1635,6.796,1636,6.43,1637,5.535,1638,4.724,1639,5.535,1640,5.535,1641,6.43,1642,5.535,1643,5.535,1644,5.535,1645,5.535,1646,5.535,1647,5.535,1648,5.535,1649,5.535,1650,5.535,1651,5.535,1652,5.535]],["title/miscellaneous/functions.html",[1653,2.063,1654,3.692]],["body/miscellaneous/functions.html",[21,1.006,35,0.197,64,0.021,91,1.09,92,0.356,375,0.019,376,0.019,1592,5.896,1595,5.229,1653,3.948,1654,4.919,1655,5.764]],["title/index.html",[35,0.103,1656,3.012,1657,3.012]],["body/index.html",[0,0.091,4,0.254,14,0.884,64,0.019,65,0.537,222,1.333,375,0.019,376,0.019,604,4.552,720,2.09,1595,5.338,1630,4.037,1638,5.37,1658,6.292,1659,5.334,1660,6.693,1661,6.693,1662,4.552,1663,5.334,1664,5.334,1665,7.218,1666,5.334,1667,5.334,1668,5.334,1669,5.334,1670,5.334,1671,5.334,1672,5.334,1673,5.334,1674,5.334,1675,5.334,1676,5.334,1677,6.693,1678,6.693,1679,5.334,1680,6.913,1681,5.334,1682,5.334,1683,5.334,1684,5.334,1685,6.292,1686,6.292,1687,6.913,1688,6.292,1689,6.292,1690,5.334,1691,7.148,1692,5.334,1693,5.334,1694,5.334,1695,6.292,1696,5.334,1697,5.334,1698,5.334,1699,5.334,1700,5.334,1701,5.334,1702,6.693,1703,5.334,1704,5.334,1705,5.334,1706,5.334,1707,4.037,1708,5.334,1709,5.334]],["title/modules.html",[1710,4.182]],["body/modules.html",[64,0.02,375,0.02,376,0.02,1710,5.001]],["title/overview.html",[1707,3.709]],["body/overview.html",[2,1.228,64,0.019,375,0.019,376,0.019,607,2.035,895,3.375,1536,4.41,1707,4.41,1711,5.826,1712,5.826]],["title/properties.html",[36,0.332,1630,2.28]],["body/properties.html",[36,0.448,64,0.02,375,0.02,376,0.02,1662,4.986,1713,5.843]],["title/miscellaneous/variables.html",[1653,2.063,1714,3.692]],["body/miscellaneous/variables.html",[10,2.562,11,1.3,12,3.519,13,3.8,18,4.608,25,0.312,35,0.172,64,0.022,66,0.299,147,1.896,148,1.896,175,2.611,331,0.951,340,0.658,357,1.314,375,0.018,376,0.018,1189,3.321,1213,3.82,1214,4.608,1274,3.82,1275,4.608,1305,3.82,1306,4.608,1330,3.82,1331,4.608,1349,3.82,1350,4.608,1365,3.82,1366,4.608,1597,4.307,1599,5.579,1600,5.579,1601,4.307,1602,5.196,1628,4.307,1653,3.456,1714,4.307,1715,5.046,1716,5.046,1717,6.537,1718,7.058,1719,6.088,1720,6.088,1721,5.046,1722,5.046,1723,5.046,1724,5.046,1725,5.046,1726,5.046,1727,5.046,1728,5.046]]],"invertedIndex":[["",{"_index":64,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":150,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1713,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":1652,"title":{},"body":{"dependencies.html":{}}}],["0.3s",{"_index":294,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["0.8",{"_index":280,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["0/1",{"_index":1594,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1612,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1608,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1610,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1596,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1627,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1607,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1609,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1606,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1611,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1605,"title":{},"body":{"coverage.html":{}}}],["03cm",{"_index":1386,"title":{},"body":{"components/ProductDetailTablaComponent.html":{}}}],["1",{"_index":205,"title":{"interfaces/Contact-1.html":{},"interfaces/Order-1.html":{},"interfaces/User-1.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["1.11.3",{"_index":1643,"title":{},"body":{"dependencies.html":{}}}],["1/3",{"_index":1624,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1229,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["10.000",{"_index":1209,"title":{},"body":{"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{}}}],["10/12",{"_index":1616,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":275,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/ProductDetailCuadernoComponent.html":{}}}],["1000",{"_index":282,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"injectables/NavigationService.html":{}}}],["10000",{"_index":1251,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{}}}],["105grs",{"_index":1348,"title":{},"body":{"components/ProductDetailLibretaComponent.html":{}}}],["11/14",{"_index":1614,"title":{},"body":{"coverage.html":{}}}],["11/15",{"_index":1618,"title":{},"body":{"coverage.html":{}}}],["11x15,3cm",{"_index":1347,"title":{},"body":{"components/ProductDetailLibretaComponent.html":{}}}],["12.000",{"_index":1272,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{}}}],["120px",{"_index":309,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["13",{"_index":1712,"title":{},"body":{"overview.html":{}}}],["14/17",{"_index":1622,"title":{},"body":{"coverage.html":{}}}],["14/19",{"_index":1626,"title":{},"body":{"coverage.html":{}}}],["140grs",{"_index":1303,"title":{},"body":{"components/ProductDetailCroqueraComponent.html":{}}}],["15.000",{"_index":1207,"title":{},"body":{"components/ProductCatalogComponent.html":{},"components/ProductDetailPoleraComponent.html":{}}}],["15000",{"_index":1363,"title":{},"body":{"components/ProductDetailPoleraComponent.html":{}}}],["16px",{"_index":300,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["17/23",{"_index":1625,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":1537,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["18,1x25,5cm",{"_index":1298,"title":{},"body":{"components/ProductDetailCroqueraComponent.html":{}}}],["18.0.0",{"_index":1633,"title":{},"body":{"dependencies.html":{}}}],["18.0.3",{"_index":1663,"title":{},"body":{"index.html":{}}}],["18.0.5",{"_index":1640,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":1245,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["2.3.0",{"_index":1650,"title":{},"body":{"dependencies.html":{}}}],["2/5",{"_index":1620,"title":{},"body":{"coverage.html":{}}}],["2024",{"_index":264,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["20x30",{"_index":1266,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{}}}],["22",{"_index":1711,"title":{},"body":{"overview.html":{}}}],["255",{"_index":279,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["2s",{"_index":312,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["30.000",{"_index":1212,"title":{},"body":{"components/ProductCatalogComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["3000",{"_index":1242,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["30000",{"_index":1378,"title":{},"body":{"components/ProductDetailTablaComponent.html":{}}}],["30cm",{"_index":1384,"title":{},"body":{"components/ProductDetailTablaComponent.html":{}}}],["33",{"_index":1623,"title":{},"body":{"coverage.html":{}}}],["4.18.2",{"_index":1647,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":1645,"title":{},"body":{"dependencies.html":{}}}],["4.500",{"_index":1203,"title":{},"body":{"components/ProductCatalogComponent.html":{},"components/ProductDetailLibretaComponent.html":{}}}],["40",{"_index":1619,"title":{},"body":{"coverage.html":{}}}],["4500",{"_index":1344,"title":{},"body":{"components/ProductDetailLibretaComponent.html":{}}}],["455c",{"_index":962,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["5.3.3",{"_index":1641,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":304,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["50cm",{"_index":1382,"title":{},"body":{"components/ProductDetailTablaComponent.html":{}}}],["54d1a9fa",{"_index":960,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["6",{"_index":1536,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["6000",{"_index":716,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["64",{"_index":1603,"title":{},"body":{"coverage.html":{}}}],["7.000",{"_index":1205,"title":{},"body":{"components/ProductCatalogComponent.html":{},"components/ProductDetailCroqueraComponent.html":{}}}],["7.8.0",{"_index":1648,"title":{},"body":{"dependencies.html":{}}}],["7000",{"_index":1288,"title":{},"body":{"components/ProductDetailCroqueraComponent.html":{}}}],["73",{"_index":1617,"title":{},"body":{"coverage.html":{}}}],["78",{"_index":1613,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1301,"title":{},"body":{"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailLibretaComponent.html":{}}}],["82",{"_index":1621,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":1615,"title":{},"body":{"coverage.html":{}}}],["8c64",{"_index":963,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["9.000",{"_index":1201,"title":{},"body":{"components/ProductCatalogComponent.html":{},"components/ProductDetailCuadernoComponent.html":{}}}],["9/14",{"_index":1604,"title":{},"body":{"coverage.html":{}}}],["9000",{"_index":1319,"title":{},"body":{"components/ProductDetailCuadernoComponent.html":{}}}],["__test__",{"_index":721,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["a5",{"_index":1321,"title":{},"body":{"components/ProductDetailCuadernoComponent.html":{}}}],["a6",{"_index":1346,"title":{},"body":{"components/ProductDetailLibretaComponent.html":{}}}],["a898aa7eb3a4",{"_index":964,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["acc",{"_index":530,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["accesorios",{"_index":1101,"title":{},"body":{"components/HomeComponent.html":{}}}],["acciones",{"_index":252,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{}}}],["acción",{"_index":823,"title":{},"body":{"components/CartComponent.html":{}}}],["actual_component",{"_index":374,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["actualiza",{"_index":684,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["actualización",{"_index":144,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["actualizada",{"_index":145,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"interfaces/Cart.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["actualizado",{"_index":694,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["actualizados",{"_index":1017,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["actualizar",{"_index":687,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["add",{"_index":1698,"title":{},"body":{"index.html":{}}}],["addclientmodal",{"_index":212,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["addcontact",{"_index":896,"title":{},"body":{"injectables/ContactsService.html":{}}}],["addcontact(contact",{"_index":860,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{}}}],["addcustomer",{"_index":1048,"title":{},"body":{"injectables/CustomersService.html":{}}}],["addcustomer(newcustomer",{"_index":1025,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["addtocart",{"_index":1220,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["addtocartform",{"_index":1217,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["adduser",{"_index":1564,"title":{},"body":{"injectables/UsersService.html":{}}}],["adduser(user",{"_index":1442,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["addusermodal",{"_index":581,"title":{},"body":{"components/AdminUserManagementComponent.html":{},"interfaces/User-1.html":{}}}],["adición",{"_index":136,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["admin",{"_index":22,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["adminclientmanagementcomponent",{"_index":1,"title":{"components/AdminClientManagementComponent.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["admincontactmanagementcomponent",{"_index":330,"title":{"components/AdminContactManagementComponent.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["administrador",{"_index":234,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Contact-1.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"interfaces/User-1.html":{}}}],["adminlogincomponent",{"_index":332,"title":{"components/AdminLoginComponent.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["adminloginform",{"_index":426,"title":{},"body":{"components/AdminLoginComponent.html":{}}}],["adminlogoutcomponent",{"_index":334,"title":{"components/AdminLogoutComponent.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["adminordermonitoringcomponent",{"_index":336,"title":{"components/AdminOrderMonitoringComponent.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["adminusermanagementcomponent",{"_index":339,"title":{"components/AdminUserManagementComponent.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{},"coverage.html":{}}}],["aes",{"_index":929,"title":{},"body":{"injectables/CryptoService.html":{}}}],["afterviewinit",{"_index":16,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["age",{"_index":1509,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["agendas",{"_index":1097,"title":{},"body":{"components/HomeComponent.html":{}}}],["agrega",{"_index":859,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["agregar",{"_index":258,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["al",{"_index":233,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["alert",{"_index":705,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["alert('actualización",{"_index":1515,"title":{},"body":{"components/ProfileComponent.html":{}}}],["alert('error",{"_index":1561,"title":{},"body":{"components/RegisterComponent.html":{}}}],["alert('inicio",{"_index":453,"title":{},"body":{"components/AdminLoginComponent.html":{},"components/LoginComponent.html":{}}}],["alert('pedido",{"_index":811,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["alert('registro",{"_index":1559,"title":{},"body":{"components/RegisterComponent.html":{}}}],["alert('se",{"_index":1186,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["alert('su",{"_index":891,"title":{},"body":{"components/ContactComponent.html":{}}}],["alerta",{"_index":697,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["alerta.remove",{"_index":715,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["alertadiv",{"_index":702,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["alertadiv.appendchild(document.createtextnode(mensaje",{"_index":706,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["alertadiv.classname",{"_index":704,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["algo",{"_index":1091,"title":{},"body":{"components/HomeComponent.html":{}}}],["align",{"_index":285,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["almacenados",{"_index":855,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{}}}],["almacenamiento",{"_index":1472,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["aluminio",{"_index":1103,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{}}}],["aluminio'},{'name",{"_index":358,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["aluminio.component.html",{"_index":1215,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{}}}],["aluminio.component.scss",{"_index":1216,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{}}}],["aluminio.component.ts",{"_index":1214,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["aluminio.component.ts:20",{"_index":1228,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{}}}],["aluminio.component.ts:21",{"_index":1231,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{}}}],["aluminio.component.ts:22",{"_index":1230,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{}}}],["aluminio.component.ts:23",{"_index":1222,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{}}}],["aluminio.component.ts:36",{"_index":1227,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{}}}],["aluminio.component.ts:40",{"_index":1224,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{}}}],["aluminio.component.ts:60",{"_index":1226,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{}}}],["aluminio.component.ts:86",{"_index":1225,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{}}}],["aluminio.component.ts:90",{"_index":1223,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{}}}],["aluminio/product",{"_index":1213,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["alumnio",{"_index":1252,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{}}}],["ancho",{"_index":1385,"title":{},"body":{"components/ProductDetailTablaComponent.html":{}}}],["angular",{"_index":1660,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1632,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":164,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":171,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/RegisterComponent.html":{}}}],["angular/compiler",{"_index":1634,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":163,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":169,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/LoginComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1635,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":165,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/NavigationService.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":1639,"title":{},"body":{"dependencies.html":{}}}],["anillado",{"_index":1299,"title":{},"body":{"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailLibretaComponent.html":{}}}],["animation",{"_index":310,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["anterior",{"_index":1255,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["antes",{"_index":1151,"title":{},"body":{"injectables/NavigationService.html":{}}}],["apellido",{"_index":251,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["apellidos",{"_index":1530,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["app",{"_index":21,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["app.component.html",{"_index":601,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":602,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":341,"title":{"components/AppComponent.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1602,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1670,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":957,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["applicationconfig",{"_index":1720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["archivo",{"_index":974,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/ProfileComponent.html":{}}}],["array",{"_index":1439,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["arreglo",{"_index":856,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{}}}],["artifacts",{"_index":1681,"title":{},"body":{"index.html":{}}}],["asigna",{"_index":138,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["assets/images/carpinteria1.png",{"_index":1379,"title":{},"body":{"components/ProductDetailTablaComponent.html":{}}}],["assets/images/croquera1.png",{"_index":1289,"title":{},"body":{"components/ProductDetailCroqueraComponent.html":{}}}],["assets/images/cuaderno1.png",{"_index":1320,"title":{},"body":{"components/ProductDetailCuadernoComponent.html":{}}}],["assets/images/lamina_aluminio1.png",{"_index":1253,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{}}}],["assets/images/libreta1.png",{"_index":1345,"title":{},"body":{"components/ProductDetailLibretaComponent.html":{}}}],["assets/images/polera1.png",{"_index":1364,"title":{},"body":{"components/ProductDetailPoleraComponent.html":{}}}],["asunto",{"_index":411,"title":{},"body":{"components/AdminContactManagementComponent.html":{},"interfaces/Contact.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{}}}],["authorization",{"_index":958,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["automatically",{"_index":1671,"title":{},"body":{"index.html":{}}}],["b5",{"_index":1297,"title":{},"body":{"components/ProductDetailCroqueraComponent.html":{}}}],["background",{"_index":277,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["basado",{"_index":1467,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["bearer",{"_index":959,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["bienvenidos",{"_index":1078,"title":{},"body":{"components/HomeComponent.html":{}}}],["birth",{"_index":1507,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["birth.getfullyear",{"_index":1511,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["birth.getmonth",{"_index":1514,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["birthdate",{"_index":155,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["blancas",{"_index":1304,"title":{},"body":{"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{}}}],["blanco",{"_index":1532,"title":{},"body":{"components/ProfileComponent.html":{}}}],["block",{"_index":790,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["boolean",{"_index":639,"title":{},"body":{"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["bootstrap",{"_index":175,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Contact-1.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/User-1.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["bootstrap.carousel(carouselelement",{"_index":1240,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["bootstrap.modal(document.getelementbyid('editclientmodal",{"_index":223,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["bootstrap.modal(document.getelementbyid('editusermodal",{"_index":587,"title":{},"body":{"components/AdminUserManagementComponent.html":{},"interfaces/User-1.html":{}}}],["bootstrap.modal.getinstance(addclientmodal",{"_index":215,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["bootstrap.modal.getinstance(addusermodal",{"_index":583,"title":{},"body":{"components/AdminUserManagementComponent.html":{},"interfaces/User-1.html":{}}}],["bootstrap.modal.getinstance(editclientmodal",{"_index":229,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["bootstrap.modal.getinstance(editusermodal",{"_index":591,"title":{},"body":{"components/AdminUserManagementComponent.html":{},"interfaces/User-1.html":{}}}],["bootstrapapplication(appcomponent",{"_index":1726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bootswatch",{"_index":1644,"title":{},"body":{"dependencies.html":{}}}],["border",{"_index":299,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["bordered",{"_index":249,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminUserManagementComponent.html":{}}}],["bottom",{"_index":307,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["browser",{"_index":1636,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":1680,"title":{},"body":{"index.html":{}}}],["busca",{"_index":726,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["buscar",{"_index":853,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{}}}],["bytes",{"_index":941,"title":{},"body":{"injectables/CryptoService.html":{}}}],["bytes.tostring(cryptojs.enc.utf8",{"_index":944,"title":{},"body":{"injectables/CryptoService.html":{}}}],["c.email",{"_index":1008,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["c.id",{"_index":1034,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["cada",{"_index":1244,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["cadena",{"_index":925,"title":{},"body":{"injectables/CryptoService.html":{}}}],["caja",{"_index":1269,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{}}}],["calcula",{"_index":1465,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["calculateage",{"_index":1454,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["calculateage(birthdate",{"_index":1463,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["calculatetotal",{"_index":763,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["cambia",{"_index":1243,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["cambiar",{"_index":420,"title":{},"body":{"components/AdminContactManagementComponent.html":{},"components/ProfileComponent.html":{}}}],["cambios",{"_index":104,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{}}}],["cantidad",{"_index":543,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["capabilities",{"_index":1700,"title":{},"body":{"index.html":{}}}],["caracteres",{"_index":1538,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["carga",{"_index":116,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"interfaces/Cart.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["cargar",{"_index":1529,"title":{},"body":{"components/ProfileComponent.html":{}}}],["carousel",{"_index":1234,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["carouselelement",{"_index":1238,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["carpinteria",{"_index":1082,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["carpintería",{"_index":1104,"title":{},"body":{"components/HomeComponent.html":{}}}],["carrito",{"_index":809,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["carro",{"_index":635,"title":{},"body":{"interfaces/Cart.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["carros",{"_index":616,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["cart",{"_index":606,"title":{"interfaces/Cart.html":{}},"body":{"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"coverage.html":{}}}],["cart'},{'name",{"_index":344,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["cart.component.html",{"_index":760,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["cart.component.scss",{"_index":761,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["cart.map((item",{"_index":675,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["cartcomponent",{"_index":343,"title":{"components/CartComponent.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["cartitem",{"_index":778,"title":{"interfaces/CartItem.html":{}},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"coverage.html":{}}}],["carts",{"_index":612,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["cartssaved",{"_index":622,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["catalog",{"_index":1192,"title":{},"body":{"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["catalog'},{'name",{"_index":355,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["catalog.component.html",{"_index":1193,"title":{},"body":{"components/ProductCatalogComponent.html":{}}}],["catalog.component.scss",{"_index":1194,"title":{},"body":{"components/ProductCatalogComponent.html":{}}}],["catalog.component.ts",{"_index":1191,"title":{},"body":{"components/ProductCatalogComponent.html":{},"coverage.html":{}}}],["catalog.component.ts:15",{"_index":1195,"title":{},"body":{"components/ProductCatalogComponent.html":{}}}],["catalog.component.ts:22",{"_index":1198,"title":{},"body":{"components/ProductCatalogComponent.html":{}}}],["catalog.component.ts:26",{"_index":1196,"title":{},"body":{"components/ProductCatalogComponent.html":{}}}],["catalog.component.ts:46",{"_index":1197,"title":{},"body":{"components/ProductCatalogComponent.html":{}}}],["catalog/product",{"_index":1190,"title":{},"body":{"components/ProductCatalogComponent.html":{},"coverage.html":{}}}],["catalogo",{"_index":820,"title":{},"body":{"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["catch",{"_index":724,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["catcherror",{"_index":953,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["catcherror(error",{"_index":991,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["categoria",{"_index":1257,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["center",{"_index":287,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["cerrado",{"_index":476,"title":{},"body":{"components/AdminLogoutComponent.html":{},"components/LogoutComponent.html":{}}}],["cerrar",{"_index":244,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["change",{"_index":1673,"title":{},"body":{"index.html":{}}}],["check",{"_index":1705,"title":{},"body":{"index.html":{}}}],["checkloginstate",{"_index":42,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["checkloginstatecheckout",{"_index":764,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["checkout",{"_index":765,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["choice",{"_index":1694,"title":{},"body":{"index.html":{}}}],["cierra",{"_index":1045,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["class",{"_index":177,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["class=\"table",{"_index":247,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminUserManagementComponent.html":{}}}],["clearcart",{"_index":658,"title":{},"body":{"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["cli",{"_index":1661,"title":{},"body":{"index.html":{}}}],["client",{"_index":11,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["client.clientname",{"_index":254,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["client.clientsurname",{"_index":255,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["client.email",{"_index":256,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["client.id",{"_index":253,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["client.password",{"_index":257,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["cliente",{"_index":99,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["clientes",{"_index":75,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["clientname",{"_index":151,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["clients",{"_index":37,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["clientservice",{"_index":55,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["clientsurname",{"_index":152,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["close",{"_index":211,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/User-1.html":{}}}],["cm",{"_index":1267,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{}}}],["cnc",{"_index":1084,"title":{},"body":{"components/HomeComponent.html":{}}}],["code",{"_index":1675,"title":{},"body":{"index.html":{}}}],["coincidan",{"_index":1488,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["coinciden",{"_index":1492,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["color",{"_index":306,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["command",{"_index":1695,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":27,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["component",{"_index":0,"title":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":328,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["componente",{"_index":62,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["compra",{"_index":617,"title":{},"body":{"interfaces/Cart.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["con",{"_index":129,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["config",{"_index":1599,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configura",{"_index":128,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["confirmar",{"_index":1542,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["confirmpassword",{"_index":1500,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["consecuencia",{"_index":1470,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["console.error('error",{"_index":988,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProfileComponent.html":{}}}],["console.log('administrador",{"_index":459,"title":{},"body":{"components/AdminLoginComponent.html":{}}}],["console.log('archivo",{"_index":984,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["console.log('buscando",{"_index":731,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["console.log('cliente",{"_index":1184,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["console.log('contacto",{"_index":845,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{}}}],["console.log('detalle",{"_index":683,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["console.log('el",{"_index":1403,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["console.log('email",{"_index":1122,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["console.log('error",{"_index":454,"title":{},"body":{"components/AdminLoginComponent.html":{},"interfaces/Cart.html":{},"interfaces/Contact.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["console.log('esta",{"_index":814,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["console.log('estado",{"_index":1429,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["console.log('formulario",{"_index":456,"title":{},"body":{"components/AdminLoginComponent.html":{},"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log('inicio",{"_index":451,"title":{},"body":{"components/AdminLoginComponent.html":{},"components/LoginComponent.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["console.log('intentando",{"_index":648,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["console.log('listaclientes",{"_index":980,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["console.log('logout",{"_index":1046,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["console.log('no",{"_index":816,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["console.log('orden",{"_index":670,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["console.log('perfil",{"_index":1409,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["console.log('producto",{"_index":656,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["console.log('registro",{"_index":890,"title":{},"body":{"components/ContactComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["console.log('se",{"_index":692,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["console.log('usuario",{"_index":235,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Contact-1.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["const",{"_index":183,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":50,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["constructor(cryptoservice",{"_index":1570,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(http",{"_index":1055,"title":{},"body":{"injectables/CustomersService.html":{}}}],["constructor(navigationservice",{"_index":51,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(private",{"_index":972,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"injectables/NavigationService.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["constructor(router",{"_index":1136,"title":{},"body":{"injectables/NavigationService.html":{}}}],["contact",{"_index":331,"title":{"interfaces/Contact.html":{},"interfaces/Contact-1.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contact'},{'name",{"_index":346,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["contact.component.html",{"_index":870,"title":{},"body":{"components/ContactComponent.html":{}}}],["contact.component.scss",{"_index":871,"title":{},"body":{"components/ContactComponent.html":{}}}],["contact.email",{"_index":414,"title":{},"body":{"components/AdminContactManagementComponent.html":{}}}],["contact.estado",{"_index":406,"title":{},"body":{"components/AdminContactManagementComponent.html":{},"interfaces/Contact-1.html":{}}}],["contact.fecha",{"_index":419,"title":{},"body":{"components/AdminContactManagementComponent.html":{}}}],["contact.id",{"_index":413,"title":{},"body":{"components/AdminContactManagementComponent.html":{},"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["contact.message",{"_index":418,"title":{},"body":{"components/AdminContactManagementComponent.html":{}}}],["contact.name",{"_index":415,"title":{},"body":{"components/AdminContactManagementComponent.html":{}}}],["contact.phone",{"_index":416,"title":{},"body":{"components/AdminContactManagementComponent.html":{}}}],["contact.subject",{"_index":417,"title":{},"body":{"components/AdminContactManagementComponent.html":{}}}],["contactanos",{"_index":1258,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["contactcomponent",{"_index":345,"title":{"components/ContactComponent.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["contactexisting",{"_index":847,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{}}}],["contactform",{"_index":872,"title":{},"body":{"components/ContactComponent.html":{}}}],["contactindex",{"_index":849,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{}}}],["contacto",{"_index":821,"title":{},"body":{"components/CartComponent.html":{},"interfaces/Contact.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["contactos",{"_index":241,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{}}}],["contacts",{"_index":378,"title":{},"body":{"components/AdminContactManagementComponent.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactsService.html":{}}}],["contacts.push(contact",{"_index":862,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{}}}],["contacts.splice(index",{"_index":868,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{}}}],["contacts[index",{"_index":867,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{}}}],["contactservice",{"_index":382,"title":{},"body":{"components/AdminContactManagementComponent.html":{},"interfaces/Contact-1.html":{}}}],["contactssaved",{"_index":834,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{}}}],["contactsservice",{"_index":383,"title":{"injectables/ContactsService.html":{}},"body":{"components/AdminContactManagementComponent.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"coverage.html":{}}}],["container",{"_index":707,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["container.appendchild(alertadiv",{"_index":712,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["container.firstchild",{"_index":710,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["container.insertbefore(alertadiv",{"_index":711,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["content",{"_index":289,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["contrario",{"_index":645,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["contraseña",{"_index":142,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["contraseñas",{"_index":1487,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["contáctanos",{"_index":893,"title":{},"body":{"components/ContactComponent.html":{}}}],["conversemos",{"_index":1259,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["copy",{"_index":263,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["correctamente",{"_index":478,"title":{},"body":{"components/AdminLogoutComponent.html":{},"components/LogoutComponent.html":{}}}],["correo",{"_index":260,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Cart.html":{},"interfaces/Contact.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/LoginComponent.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/PasswordRecoveryComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["coverage",{"_index":1588,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["credenciales",{"_index":1002,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["croquera",{"_index":1276,"title":{},"body":{"components/ProductDetailCroqueraComponent.html":{}}}],["croquera'},{'name",{"_index":360,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["croquera.component.html",{"_index":1277,"title":{},"body":{"components/ProductDetailCroqueraComponent.html":{}}}],["croquera.component.scss",{"_index":1278,"title":{},"body":{"components/ProductDetailCroqueraComponent.html":{}}}],["croquera.component.ts",{"_index":1275,"title":{},"body":{"components/ProductDetailCroqueraComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["croquera.component.ts:20",{"_index":1285,"title":{},"body":{"components/ProductDetailCroqueraComponent.html":{}}}],["croquera.component.ts:21",{"_index":1287,"title":{},"body":{"components/ProductDetailCroqueraComponent.html":{}}}],["croquera.component.ts:22",{"_index":1286,"title":{},"body":{"components/ProductDetailCroqueraComponent.html":{}}}],["croquera.component.ts:23",{"_index":1279,"title":{},"body":{"components/ProductDetailCroqueraComponent.html":{}}}],["croquera.component.ts:35",{"_index":1284,"title":{},"body":{"components/ProductDetailCroqueraComponent.html":{}}}],["croquera.component.ts:39",{"_index":1281,"title":{},"body":{"components/ProductDetailCroqueraComponent.html":{}}}],["croquera.component.ts:59",{"_index":1283,"title":{},"body":{"components/ProductDetailCroqueraComponent.html":{}}}],["croquera.component.ts:85",{"_index":1282,"title":{},"body":{"components/ProductDetailCroqueraComponent.html":{}}}],["croquera.component.ts:89",{"_index":1280,"title":{},"body":{"components/ProductDetailCroqueraComponent.html":{}}}],["croquera/product",{"_index":1274,"title":{},"body":{"components/ProductDetailCroqueraComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["croqueras",{"_index":1204,"title":{},"body":{"components/ProductCatalogComponent.html":{}}}],["crypto",{"_index":937,"title":{},"body":{"injectables/CryptoService.html":{},"dependencies.html":{}}}],["crypto.service",{"_index":946,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["cryptojs",{"_index":936,"title":{},"body":{"injectables/CryptoService.html":{}}}],["cryptojs.aes.decrypt(data",{"_index":942,"title":{},"body":{"injectables/CryptoService.html":{}}}],["cryptojs.aes.encrypt(data",{"_index":939,"title":{},"body":{"injectables/CryptoService.html":{}}}],["cryptoservice",{"_index":58,"title":{"injectables/CryptoService.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminLoginComponent.html":{},"injectables/CryptoService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/LoginComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["cuaderno",{"_index":1307,"title":{},"body":{"components/ProductDetailCuadernoComponent.html":{}}}],["cuaderno'},{'name",{"_index":362,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["cuaderno.component.html",{"_index":1308,"title":{},"body":{"components/ProductDetailCuadernoComponent.html":{}}}],["cuaderno.component.scss",{"_index":1309,"title":{},"body":{"components/ProductDetailCuadernoComponent.html":{}}}],["cuaderno.component.ts",{"_index":1306,"title":{},"body":{"components/ProductDetailCuadernoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cuaderno.component.ts:20",{"_index":1316,"title":{},"body":{"components/ProductDetailCuadernoComponent.html":{}}}],["cuaderno.component.ts:21",{"_index":1318,"title":{},"body":{"components/ProductDetailCuadernoComponent.html":{}}}],["cuaderno.component.ts:22",{"_index":1317,"title":{},"body":{"components/ProductDetailCuadernoComponent.html":{}}}],["cuaderno.component.ts:23",{"_index":1310,"title":{},"body":{"components/ProductDetailCuadernoComponent.html":{}}}],["cuaderno.component.ts:36",{"_index":1315,"title":{},"body":{"components/ProductDetailCuadernoComponent.html":{}}}],["cuaderno.component.ts:40",{"_index":1312,"title":{},"body":{"components/ProductDetailCuadernoComponent.html":{}}}],["cuaderno.component.ts:60",{"_index":1314,"title":{},"body":{"components/ProductDetailCuadernoComponent.html":{}}}],["cuaderno.component.ts:86",{"_index":1313,"title":{},"body":{"components/ProductDetailCuadernoComponent.html":{}}}],["cuaderno.component.ts:90",{"_index":1311,"title":{},"body":{"components/ProductDetailCuadernoComponent.html":{}}}],["cuaderno/product",{"_index":1305,"title":{},"body":{"components/ProductDetailCuadernoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cuadernos",{"_index":1095,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailCuadernoComponent.html":{}}}],["cuadriculadas",{"_index":1327,"title":{},"body":{"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{}}}],["cuadro",{"_index":1263,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{}}}],["customer",{"_index":146,"title":{"interfaces/Customer.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["customer.clientname",{"_index":1525,"title":{},"body":{"components/ProfileComponent.html":{}}}],["customer.clientsurname",{"_index":1526,"title":{},"body":{"components/ProfileComponent.html":{}}}],["customer.dispatchaddress",{"_index":1528,"title":{},"body":{"components/ProfileComponent.html":{}}}],["customer.email",{"_index":1001,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/ProfileComponent.html":{}}}],["customer.id",{"_index":1020,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["customerexists",{"_index":1026,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["customers",{"_index":967,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["customers.find(c",{"_index":1007,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["customers.find(customer",{"_index":1013,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["customers.findindex(customer",{"_index":1019,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["customers.length",{"_index":1032,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["customers.push(newcustomer",{"_index":1035,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["customers.some(customer",{"_index":1000,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["customers[index",{"_index":1022,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["customersservice",{"_index":19,"title":{"injectables/CustomersService.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"components/ContactComponent.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["d9cc",{"_index":961,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["danger",{"_index":696,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/LoginComponent.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/PasswordRecoveryComponent.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["data",{"_index":200,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"injectables/CryptoService.html":{}}}],["date",{"_index":400,"title":{},"body":{"components/AdminContactManagementComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"interfaces/Cart.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactsService.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["date(birthdate",{"_index":1508,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["date.split",{"_index":742,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["datos",{"_index":1016,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["day",{"_index":741,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["dd",{"_index":736,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["de",{"_index":70,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/LoginComponent.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["debe",{"_index":1148,"title":{},"body":{"injectables/NavigationService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["declare",{"_index":173,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Contact-1.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/User-1.html":{}}}],["decrypt",{"_index":919,"title":{},"body":{"injectables/CryptoService.html":{}}}],["decrypt(data",{"_index":922,"title":{},"body":{"injectables/CryptoService.html":{}}}],["default",{"_index":147,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"injectables/CustomersService.html":{},"injectables/NavigationService.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":59,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/NavigationService.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UsersService.html":{}}}],["del",{"_index":61,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminLoginComponent.html":{},"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/PasswordRecoveryComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["delay",{"_index":1139,"title":{},"body":{"injectables/NavigationService.html":{}}}],["delay=1000",{"_index":1155,"title":{},"body":{"injectables/NavigationService.html":{}}}],["deleteclient",{"_index":43,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["deleteclient(index",{"_index":93,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["deletecontact",{"_index":379,"title":{},"body":{"components/AdminContactManagementComponent.html":{},"injectables/ContactsService.html":{}}}],["deletecontact(index",{"_index":386,"title":{},"body":{"components/AdminContactManagementComponent.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactsService.html":{}}}],["deleteuser",{"_index":555,"title":{},"body":{"components/AdminUserManagementComponent.html":{},"injectables/UsersService.html":{}}}],["deleteuser(index",{"_index":562,"title":{},"body":{"components/AdminUserManagementComponent.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":1631,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["derechos",{"_index":267,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["description",{"_index":68,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["desde",{"_index":117,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"interfaces/Cart.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["desea",{"_index":1533,"title":{},"body":{"components/ProfileComponent.html":{}}}],["desencripta",{"_index":924,"title":{},"body":{"injectables/CryptoService.html":{}}}],["desencriptada",{"_index":931,"title":{},"body":{"injectables/CryptoService.html":{}}}],["desencriptar",{"_index":930,"title":{},"body":{"injectables/CryptoService.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["despacho",{"_index":1543,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["después",{"_index":123,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"injectables/NavigationService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["detail",{"_index":357,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["detail.id",{"_index":754,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["detail.product",{"_index":535,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["detail.product).join",{"_index":528,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["detail.quantity",{"_index":531,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["detalle",{"_index":806,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["detalles",{"_index":619,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/ProductCatalogComponent.html":{}}}],["dev",{"_index":1667,"title":{},"body":{"index.html":{}}}],["development",{"_index":1664,"title":{},"body":{"index.html":{}}}],["dibujos",{"_index":1292,"title":{},"body":{"components/ProductDetailCroqueraComponent.html":{}}}],["dirección",{"_index":259,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["directive",{"_index":327,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["directives",{"_index":373,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1679,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1684,"title":{},"body":{"index.html":{}}}],["disc",{"_index":323,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["dispatchaddress",{"_index":156,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["display",{"_index":283,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["disponible",{"_index":717,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["dist",{"_index":1683,"title":{},"body":{"index.html":{}}}],["document",{"_index":1237,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["document.createelement('div",{"_index":703,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["document.getelementbyid('addclientmodal",{"_index":213,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["document.getelementbyid('addusermodal",{"_index":582,"title":{},"body":{"components/AdminUserManagementComponent.html":{},"interfaces/User-1.html":{}}}],["document.getelementbyid('editclientmodal",{"_index":228,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["document.getelementbyid('editusermodal",{"_index":590,"title":{},"body":{"components/AdminUserManagementComponent.html":{},"interfaces/User-1.html":{}}}],["document.getelementbyid('loading",{"_index":1157,"title":{},"body":{"injectables/NavigationService.html":{}}}],["document.getelementbyid('loginmenu')!.style.display",{"_index":786,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["document.getelementbyid('logoutmenu')!.style.display",{"_index":791,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["document.getelementbyid('profilemenu')!.style.display",{"_index":789,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["document.getelementbyid('registermenu')!.style.display",{"_index":788,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["document.queryselector('#productcarousel",{"_index":1239,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["document.queryselector('.alert",{"_index":714,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["document.queryselector('.container",{"_index":708,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["document.queryselectorall('a",{"_index":185,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["documentation",{"_index":1589,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["dura",{"_index":1294,"title":{},"body":{"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailLibretaComponent.html":{}}}],["duras",{"_index":1323,"title":{},"body":{"components/ProductDetailCuadernoComponent.html":{}}}],["dynamic",{"_index":1637,"title":{},"body":{"dependencies.html":{}}}],["déjelo",{"_index":1531,"title":{},"body":{"components/ProfileComponent.html":{}}}],["e",{"_index":725,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["e.g",{"_index":700,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":1692,"title":{},"body":{"index.html":{}}}],["ease",{"_index":295,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["edad",{"_index":1466,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["edición",{"_index":109,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["editar",{"_index":114,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{}}}],["editclient",{"_index":44,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["editclient(index",{"_index":107,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["editclientmodal",{"_index":221,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["editclientmodal.show",{"_index":224,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["editorderform",{"_index":484,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["edituser",{"_index":556,"title":{},"body":{"components/AdminUserManagementComponent.html":{}}}],["edituser(index",{"_index":564,"title":{},"body":{"components/AdminUserManagementComponent.html":{},"interfaces/User-1.html":{}}}],["editusermodal",{"_index":586,"title":{},"body":{"components/AdminUserManagementComponent.html":{},"interfaces/User-1.html":{}}}],["editusermodal.show",{"_index":588,"title":{},"body":{"components/AdminUserManagementComponent.html":{},"interfaces/User-1.html":{}}}],["ejecuta",{"_index":122,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["el",{"_index":81,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminLoginComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["elección",{"_index":1261,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["electrónico",{"_index":261,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Cart.html":{},"interfaces/Contact.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/LoginComponent.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/PasswordRecoveryComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["element",{"_index":326,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["elemento",{"_index":1462,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["elementref",{"_index":432,"title":{},"body":{"components/AdminLoginComponent.html":{},"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["elimina",{"_index":100,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["eliminación",{"_index":97,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["eliminar",{"_index":106,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["email",{"_index":153,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/LoginComponent.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["email.trim",{"_index":1426,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["emailexists",{"_index":1183,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["emptycart",{"_index":822,"title":{},"body":{"components/CartComponent.html":{}}}],["en",{"_index":455,"title":{},"body":{"components/AdminLoginComponent.html":{},"interfaces/Cart.html":{},"interfaces/Contact.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["encontrada",{"_index":729,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["encontrado",{"_index":732,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/PasswordRecoveryComponent.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["encripta",{"_index":141,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"injectables/CryptoService.html":{}}}],["encriptación",{"_index":78,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["encriptada",{"_index":927,"title":{},"body":{"injectables/CryptoService.html":{}}}],["encriptar",{"_index":934,"title":{},"body":{"injectables/CryptoService.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["encrypt",{"_index":920,"title":{},"body":{"injectables/CryptoService.html":{}}}],["encrypt(data",{"_index":932,"title":{},"body":{"injectables/CryptoService.html":{}}}],["end",{"_index":1691,"title":{},"body":{"index.html":{}}}],["enlace",{"_index":1187,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["enlaces",{"_index":132,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["enrutamiento",{"_index":77,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["entre",{"_index":1535,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["entregado",{"_index":551,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{}}}],["enviado",{"_index":550,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"components/ContactComponent.html":{},"components/PasswordRecoveryComponent.html":{}}}],["enviar",{"_index":894,"title":{},"body":{"components/ContactComponent.html":{}}}],["envío",{"_index":1482,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["error",{"_index":987,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["error('el",{"_index":1029,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["error.message",{"_index":1562,"title":{},"body":{"components/RegisterComponent.html":{}}}],["es",{"_index":460,"title":{},"body":{"components/AdminLoginComponent.html":{},"components/ContactComponent.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/LoginComponent.html":{},"injectables/NavigationService.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["especial",{"_index":1092,"title":{},"body":{"components/HomeComponent.html":{}}}],["específica",{"_index":751,"title":{},"body":{"interfaces/Cart.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["espesor",{"_index":1387,"title":{},"body":{"components/ProductDetailTablaComponent.html":{}}}],["espiral",{"_index":1325,"title":{},"body":{"components/ProductDetailCuadernoComponent.html":{}}}],["est",{"_index":89,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["esta",{"_index":812,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["establece",{"_index":110,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["estado",{"_index":82,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"interfaces/Cart.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["estampada",{"_index":1264,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{}}}],["estampado",{"_index":1099,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailPoleraComponent.html":{}}}],["event",{"_index":188,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["event.preventdefault",{"_index":189,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["event.target",{"_index":191,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["eventcoalescing",{"_index":1722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["execute",{"_index":1688,"title":{},"body":{"index.html":{}}}],["existe",{"_index":1030,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["existente",{"_index":685,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["existingitems",{"_index":677,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["existingitems.concat(orderdetail",{"_index":680,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["exitosa",{"_index":1516,"title":{},"body":{"components/ProfileComponent.html":{}}}],["exitosamente",{"_index":643,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"components/LogoutComponent.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["exitoso",{"_index":452,"title":{},"body":{"components/AdminLoginComponent.html":{},"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["export",{"_index":176,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["express",{"_index":1646,"title":{},"body":{"dependencies.html":{}}}],["express.express",{"_index":1655,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extends",{"_index":610,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["f3f3f3",{"_index":302,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["false",{"_index":646,"title":{},"body":{"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["fb",{"_index":428,"title":{},"body":{"components/AdminLoginComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/ContactComponent.html":{},"components/LoginComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["fecha",{"_index":399,"title":{},"body":{"components/AdminContactManagementComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"interfaces/Cart.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactsService.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["files",{"_index":1674,"title":{},"body":{"index.html":{}}}],["findcontact",{"_index":897,"title":{},"body":{"injectables/ContactsService.html":{}}}],["findcontact(id",{"_index":854,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{}}}],["findorder(id",{"_index":730,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["finduser",{"_index":1565,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduser(email",{"_index":1438,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["first",{"_index":1697,"title":{},"body":{"index.html":{}}}],["firstchild",{"_index":709,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["fixed",{"_index":271,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["flex",{"_index":284,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["form",{"_index":1490,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["form.get('confirmpassword')?.value",{"_index":1505,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["form.get('password')?.value",{"_index":1504,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["formatea",{"_index":733,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["formateada",{"_index":737,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["formato",{"_index":462,"title":{},"body":{"components/AdminLoginComponent.html":{},"interfaces/Cart.html":{},"interfaces/Contact.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"components/LoginComponent.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["formatodd",{"_index":1475,"title":{},"body":{"components/ProfileComponent.html":{}}}],["formattoformdate",{"_index":898,"title":{},"body":{"injectables/ContactsService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["formattoformdate(date",{"_index":738,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["formattostoragedate",{"_index":899,"title":{},"body":{"injectables/ContactsService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["formattostoragedate(date",{"_index":743,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["formbuilder",{"_index":429,"title":{},"body":{"components/AdminLoginComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/ContactComponent.html":{},"components/LoginComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["formgroup",{"_index":438,"title":{},"body":{"components/AdminLoginComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/ContactComponent.html":{},"components/LoginComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":29,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Contact-1.html":{},"interfaces/User-1.html":{}}}],["formulario",{"_index":1474,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["formularios",{"_index":1458,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["fue",{"_index":641,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["fueron",{"_index":671,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["function",{"_index":1593,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1654,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1701,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1677,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1659,"title":{},"body":{"index.html":{}}}],["gestión",{"_index":240,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{}}}],["getcontacts",{"_index":857,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{}}}],["getcustomerbyemail",{"_index":1049,"title":{},"body":{"injectables/CustomersService.html":{}}}],["getcustomerbyemail(email",{"_index":1012,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["getcustomers",{"_index":989,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["getloggedinclientemail",{"_index":1042,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["getorderdetails(orderid",{"_index":752,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["getorderproducts",{"_index":488,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{}}}],["getorderproducts(order.id",{"_index":545,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{}}}],["getorderproducts(orderid",{"_index":496,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["getorderquantity",{"_index":489,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{}}}],["getorderquantity(order.id",{"_index":546,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{}}}],["getorderquantity(orderid",{"_index":499,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["getorders",{"_index":750,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["getting",{"_index":1656,"title":{"index.html":{}},"body":{}}],["getusers",{"_index":1441,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["go",{"_index":1704,"title":{},"body":{"index.html":{}}}],["goback",{"_index":1221,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["guarda",{"_index":102,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["guardar",{"_index":262,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{}}}],["ha",{"_index":125,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/ContactComponent.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/PasswordRecoveryComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["hacer",{"_index":1087,"title":{},"body":{"components/HomeComponent.html":{}}}],["hay",{"_index":245,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminUserManagementComponent.html":{}}}],["headers",{"_index":956,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["height",{"_index":276,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["help",{"_index":1702,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":292,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["hidetext",{"_index":319,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["hoja",{"_index":1326,"title":{},"body":{"components/ProductDetailCuadernoComponent.html":{}}}],["hojas",{"_index":1302,"title":{},"body":{"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{}}}],["home",{"_index":818,"title":{},"body":{"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["home'},{'name",{"_index":348,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["home.component.html",{"_index":1072,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1073,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":347,"title":{"components/HomeComponent.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["hook",{"_index":119,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["href",{"_index":193,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/NavigationService.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["href.startswith",{"_index":1163,"title":{},"body":{"injectables/NavigationService.html":{}}}],["html",{"_index":325,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["htmlelement",{"_index":192,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["http",{"_index":969,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["http://localhost:4200",{"_index":1669,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":947,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["httpclientmodule",{"_index":30,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/RegisterComponent.html":{}}}],["httpheaders",{"_index":948,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["httpoptions",{"_index":955,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["https://firebasestorage.googleapis.com/v0/b/puentemagicojson.appspot.com/o/customers.json?alt=media&token=54d1a9fa",{"_index":966,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["icons",{"_index":1642,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":139,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["id=\"usertable",{"_index":593,"title":{},"body":{"components/AdminUserManagementComponent.html":{}}}],["identificador",{"_index":72,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["identifier",{"_index":1590,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":512,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["imagen",{"_index":637,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["imagenes",{"_index":1235,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["implements",{"_index":14,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{},"index.html":{}}}],["import",{"_index":160,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":26,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["impresión",{"_index":1080,"title":{},"body":{"components/HomeComponent.html":{}}}],["incluye",{"_index":1270,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{}}}],["incorrecto",{"_index":463,"title":{},"body":{"components/AdminLoginComponent.html":{},"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["incorrectos",{"_index":1124,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["index",{"_index":35,"title":{"index.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":314,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["información",{"_index":1014,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["inicia",{"_index":1422,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["iniciado",{"_index":1036,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["inicializa",{"_index":968,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["inicialización",{"_index":134,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["inicializada",{"_index":127,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["inicializar",{"_index":1233,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["iniciar",{"_index":465,"title":{},"body":{"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["iniciarsesion",{"_index":1566,"title":{},"body":{"injectables/UsersService.html":{}}}],["iniciarsesion(email",{"_index":1423,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["inicio",{"_index":83,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminLoginComponent.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":161,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["inject(platform_id",{"_index":180,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["injectable",{"_index":609,"title":{"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"injectables/CustomersService.html":{},"injectables/NavigationService.html":{},"injectables/UsersService.html":{}},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":895,"title":{},"body":{"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"injectables/CustomersService.html":{},"injectables/NavigationService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["interface",{"_index":394,"title":{"interfaces/Cart.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"interfaces/Customer.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{}},"body":{"components/AdminContactManagementComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["interfaces",{"_index":607,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"interfaces/Customer.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"overview.html":{}}}],["interfaz",{"_index":698,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["interval",{"_index":1241,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["invalido",{"_index":457,"title":{},"body":{"components/AdminLoginComponent.html":{},"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{}}}],["inválido",{"_index":1518,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["ir",{"_index":1133,"title":{},"body":{"components/LogoutComponent.html":{}}}],["islocalstorageavailable",{"_index":718,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["isplatformbrowser",{"_index":166,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["isplatformbrowser(this.platformid",{"_index":182,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["isvalid",{"_index":1119,"title":{},"body":{"components/LoginComponent.html":{}}}],["item",{"_index":676,"title":{},"body":{"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["item.price",{"_index":798,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["item.price.tofixed(0",{"_index":825,"title":{},"body":{"components/CartComponent.html":{}}}],["item.product",{"_index":824,"title":{},"body":{"components/CartComponent.html":{}}}],["item.quantity",{"_index":799,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["item.quantity).tofixed(0",{"_index":826,"title":{},"body":{"components/CartComponent.html":{}}}],["items",{"_index":286,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["js",{"_index":938,"title":{},"body":{"injectables/CryptoService.html":{},"dependencies.html":{}}}],["json",{"_index":975,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/ProfileComponent.html":{}}}],["json.parse(cartssaved",{"_index":625,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["json.parse(contactssaved",{"_index":836,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{}}}],["json.parse(localstorage.getitem('carts",{"_index":674,"title":{},"body":{"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["json.parse(localstorage.getitem('loggedinclient",{"_index":1041,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["json.parse(localstorage.getitem('loggedinuser",{"_index":1436,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["json.parse(localstorage.getitem('orderdetails",{"_index":678,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["json.parse(localstorage.getitem(this.storagekey",{"_index":858,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["json.parse(orderdetailssaved",{"_index":632,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["json.parse(orderssaved",{"_index":628,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["json.parse(profilessaved",{"_index":1394,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["json.parse(userssaved",{"_index":1397,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["json.stringify(contacts",{"_index":864,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{}}}],["json.stringify(customer",{"_index":1039,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["json.stringify(this.carts",{"_index":653,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["json.stringify(this.contacts",{"_index":843,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{}}}],["json.stringify(this.orders",{"_index":669,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["json.stringify(this.profiles",{"_index":1407,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["json.stringify(this.users",{"_index":1415,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["json.stringify(updatedcustomer",{"_index":1517,"title":{},"body":{"components/ProfileComponent.html":{}}}],["json.stringify(updateditems",{"_index":682,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["json.stringify(user",{"_index":1435,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["json.stringify(userdata",{"_index":448,"title":{},"body":{"components/AdminLoginComponent.html":{}}}],["json.stringify(users",{"_index":1445,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["jsonurl",{"_index":965,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["justify",{"_index":288,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["karma",{"_index":1690,"title":{},"body":{"index.html":{}}}],["keyframes",{"_index":315,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["la",{"_index":73,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["lamina",{"_index":1208,"title":{},"body":{"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{}}}],["laminada",{"_index":1295,"title":{},"body":{"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailLibretaComponent.html":{}}}],["laminadas",{"_index":1324,"title":{},"body":{"components/ProductDetailCuadernoComponent.html":{}}}],["laminas",{"_index":1102,"title":{},"body":{"components/HomeComponent.html":{}}}],["largo",{"_index":1383,"title":{},"body":{"components/ProductDetailTablaComponent.html":{}}}],["las",{"_index":744,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["left",{"_index":273,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["legend",{"_index":324,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["letra",{"_index":1540,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["libreta",{"_index":1332,"title":{},"body":{"components/ProductDetailLibretaComponent.html":{}}}],["libreta'},{'name",{"_index":364,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["libreta.component.html",{"_index":1333,"title":{},"body":{"components/ProductDetailLibretaComponent.html":{}}}],["libreta.component.scss",{"_index":1334,"title":{},"body":{"components/ProductDetailLibretaComponent.html":{}}}],["libreta.component.ts",{"_index":1331,"title":{},"body":{"components/ProductDetailLibretaComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["libreta.component.ts:20",{"_index":1341,"title":{},"body":{"components/ProductDetailLibretaComponent.html":{}}}],["libreta.component.ts:21",{"_index":1343,"title":{},"body":{"components/ProductDetailLibretaComponent.html":{}}}],["libreta.component.ts:22",{"_index":1342,"title":{},"body":{"components/ProductDetailLibretaComponent.html":{}}}],["libreta.component.ts:23",{"_index":1335,"title":{},"body":{"components/ProductDetailLibretaComponent.html":{}}}],["libreta.component.ts:36",{"_index":1340,"title":{},"body":{"components/ProductDetailLibretaComponent.html":{}}}],["libreta.component.ts:40",{"_index":1337,"title":{},"body":{"components/ProductDetailLibretaComponent.html":{}}}],["libreta.component.ts:60",{"_index":1339,"title":{},"body":{"components/ProductDetailLibretaComponent.html":{}}}],["libreta.component.ts:86",{"_index":1338,"title":{},"body":{"components/ProductDetailLibretaComponent.html":{}}}],["libreta.component.ts:90",{"_index":1336,"title":{},"body":{"components/ProductDetailLibretaComponent.html":{}}}],["libreta/product",{"_index":1330,"title":{},"body":{"components/ProductDetailLibretaComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["libretas",{"_index":1096,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductCatalogComponent.html":{}}}],["limpia",{"_index":657,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["limpiar",{"_index":808,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"components/ContactComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["linear",{"_index":313,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["lineas",{"_index":1328,"title":{},"body":{"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{}}}],["link.addeventlistener('click",{"_index":187,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["links",{"_index":184,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["links.foreach(link",{"_index":186,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["lista",{"_index":101,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["listaclientes",{"_index":977,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["lo",{"_index":644,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["loadcart",{"_index":766,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["loadclients",{"_index":45,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["loadcontacts",{"_index":380,"title":{},"body":{"components/AdminContactManagementComponent.html":{},"interfaces/Contact-1.html":{}}}],["loadcustomerdata",{"_index":1455,"title":{},"body":{"components/ProfileComponent.html":{}}}],["loader",{"_index":298,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["loading",{"_index":268,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["loadingscreen",{"_index":1156,"title":{},"body":{"injectables/NavigationService.html":{}}}],["loadingscreen.classlist.add('active",{"_index":1158,"title":{},"body":{"injectables/NavigationService.html":{}}}],["loadingscreen.classlist.remove('active",{"_index":1165,"title":{},"body":{"injectables/NavigationService.html":{}}}],["loadordersfromlocalstorage",{"_index":745,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["loadusers",{"_index":557,"title":{},"body":{"components/AdminUserManagementComponent.html":{},"interfaces/User-1.html":{}}}],["localstorage",{"_index":620,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["localstorage.getitem('carts",{"_index":623,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["localstorage.getitem('contacts",{"_index":835,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{}}}],["localstorage.getitem('orderdetails",{"_index":630,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["localstorage.getitem('orders",{"_index":627,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["localstorage.getitem('profiles",{"_index":1392,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["localstorage.getitem('users",{"_index":1396,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["localstorage.getitem(this.orderdetailsstoragekey",{"_index":747,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["localstorage.getitem(this.orderstoragekey",{"_index":746,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["localstorage.removeitem('carts",{"_index":659,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["localstorage.removeitem('loggedinclient",{"_index":1047,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["localstorage.removeitem('loggedinuser",{"_index":1437,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["localstorage.removeitem(test",{"_index":723,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["localstorage.setitem('carts",{"_index":652,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["localstorage.setitem('contacts",{"_index":842,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{}}}],["localstorage.setitem('loggedinclient",{"_index":1038,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/ProfileComponent.html":{}}}],["localstorage.setitem('loggedinuser",{"_index":1434,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["localstorage.setitem('orderdetails",{"_index":681,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["localstorage.setitem('orders",{"_index":668,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["localstorage.setitem('profiles",{"_index":1406,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["localstorage.setitem('user",{"_index":447,"title":{},"body":{"components/AdminLoginComponent.html":{}}}],["localstorage.setitem('users",{"_index":1414,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["localstorage.setitem(test",{"_index":722,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["localstorage.setitem(this.orderstoragekey",{"_index":758,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["localstorage.setitem(this.storagekey",{"_index":863,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["loggedinclient",{"_index":1040,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["loggedinclientemail",{"_index":1521,"title":{},"body":{"components/ProfileComponent.html":{}}}],["loggedinuser",{"_index":1043,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["loggedinuser.email",{"_index":1044,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["login",{"_index":237,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/LoginComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"interfaces/User-1.html":{}}}],["login'},{'name",{"_index":333,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["login.component.html",{"_index":424,"title":{},"body":{"components/AdminLoginComponent.html":{},"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":425,"title":{},"body":{"components/AdminLoginComponent.html":{},"components/LoginComponent.html":{}}}],["login.component.ts",{"_index":422,"title":{},"body":{"components/AdminLoginComponent.html":{},"coverage.html":{}}}],["login.component.ts:20",{"_index":433,"title":{},"body":{"components/AdminLoginComponent.html":{}}}],["login.component.ts:36",{"_index":436,"title":{},"body":{"components/AdminLoginComponent.html":{}}}],["login.component.ts:40",{"_index":435,"title":{},"body":{"components/AdminLoginComponent.html":{}}}],["login.component.ts:56",{"_index":437,"title":{},"body":{"components/AdminLoginComponent.html":{}}}],["login.component.ts:76",{"_index":434,"title":{},"body":{"components/AdminLoginComponent.html":{}}}],["login/admin",{"_index":421,"title":{},"body":{"components/AdminLoginComponent.html":{},"coverage.html":{}}}],["logincomponent",{"_index":349,"title":{"components/LoginComponent.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["loginexitoso",{"_index":449,"title":{},"body":{"components/AdminLoginComponent.html":{}}}],["loginform",{"_index":1107,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":468,"title":{},"body":{"components/AdminLogoutComponent.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/LogoutComponent.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["logout'},{'name",{"_index":335,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["logout.component.html",{"_index":469,"title":{},"body":{"components/AdminLogoutComponent.html":{},"components/LogoutComponent.html":{}}}],["logout.component.scss",{"_index":470,"title":{},"body":{"components/AdminLogoutComponent.html":{},"components/LogoutComponent.html":{}}}],["logout.component.ts",{"_index":467,"title":{},"body":{"components/AdminLogoutComponent.html":{},"coverage.html":{}}}],["logout.component.ts:16",{"_index":471,"title":{},"body":{"components/AdminLogoutComponent.html":{}}}],["logout.component.ts:25",{"_index":474,"title":{},"body":{"components/AdminLogoutComponent.html":{}}}],["logout.component.ts:29",{"_index":473,"title":{},"body":{"components/AdminLogoutComponent.html":{}}}],["logout.component.ts:47",{"_index":472,"title":{},"body":{"components/AdminLogoutComponent.html":{}}}],["logout/admin",{"_index":466,"title":{},"body":{"components/AdminLogoutComponent.html":{},"coverage.html":{}}}],["logoutcomponent",{"_index":350,"title":{"components/LogoutComponent.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["logueado",{"_index":90,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{}}}],["los",{"_index":103,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/Contact.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["láser",{"_index":1085,"title":{},"body":{"components/HomeComponent.html":{}}}],["madera",{"_index":1211,"title":{},"body":{"components/ProductCatalogComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["management",{"_index":23,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Contact-1.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"interfaces/User-1.html":{}}}],["management'},{'name",{"_index":329,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["management.component.html",{"_index":34,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Contact-1.html":{},"interfaces/User-1.html":{}}}],["management.component.scss",{"_index":32,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Contact-1.html":{},"interfaces/User-1.html":{}}}],["management.component.ts",{"_index":13,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Contact-1.html":{},"interfaces/User-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["management.component.ts:101",{"_index":135,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["management.component.ts:103",{"_index":561,"title":{},"body":{"components/AdminUserManagementComponent.html":{}}}],["management.component.ts:121",{"_index":108,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["management.component.ts:135",{"_index":143,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["management.component.ts:157",{"_index":95,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["management.component.ts:169",{"_index":79,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["management.component.ts:25",{"_index":149,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminUserManagementComponent.html":{}}}],["management.component.ts:26",{"_index":157,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["management.component.ts:27",{"_index":158,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["management.component.ts:28",{"_index":60,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["management.component.ts:30",{"_index":384,"title":{},"body":{"components/AdminContactManagementComponent.html":{}}}],["management.component.ts:35",{"_index":567,"title":{},"body":{"components/AdminUserManagementComponent.html":{}}}],["management.component.ts:40",{"_index":389,"title":{},"body":{"components/AdminContactManagementComponent.html":{}}}],["management.component.ts:51",{"_index":574,"title":{},"body":{"components/AdminUserManagementComponent.html":{}}}],["management.component.ts:52",{"_index":571,"title":{},"body":{"components/AdminUserManagementComponent.html":{}}}],["management.component.ts:53",{"_index":573,"title":{},"body":{"components/AdminUserManagementComponent.html":{}}}],["management.component.ts:54",{"_index":572,"title":{},"body":{"components/AdminUserManagementComponent.html":{}}}],["management.component.ts:56",{"_index":118,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminUserManagementComponent.html":{}}}],["management.component.ts:58",{"_index":390,"title":{},"body":{"components/AdminContactManagementComponent.html":{}}}],["management.component.ts:63",{"_index":566,"title":{},"body":{"components/AdminUserManagementComponent.html":{}}}],["management.component.ts:65",{"_index":388,"title":{},"body":{"components/AdminContactManagementComponent.html":{}}}],["management.component.ts:67",{"_index":568,"title":{},"body":{"components/AdminUserManagementComponent.html":{}}}],["management.component.ts:69",{"_index":392,"title":{},"body":{"components/AdminContactManagementComponent.html":{}}}],["management.component.ts:76",{"_index":387,"title":{},"body":{"components/AdminContactManagementComponent.html":{}}}],["management.component.ts:77",{"_index":565,"title":{},"body":{"components/AdminUserManagementComponent.html":{}}}],["management.component.ts:78",{"_index":133,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["management.component.ts:81",{"_index":385,"title":{},"body":{"components/AdminContactManagementComponent.html":{}}}],["management.component.ts:85",{"_index":569,"title":{},"body":{"components/AdminUserManagementComponent.html":{}}}],["management.component.ts:89",{"_index":115,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["management.component.ts:98",{"_index":563,"title":{},"body":{"components/AdminUserManagementComponent.html":{}}}],["management/admin",{"_index":12,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Contact-1.html":{},"interfaces/User-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maneja",{"_index":96,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["manejada",{"_index":1162,"title":{},"body":{"injectables/NavigationService.html":{}}}],["map",{"_index":952,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["map((customers",{"_index":1006,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["map(customers",{"_index":999,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["matching",{"_index":376,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.max(...customers.map(c",{"_index":1033,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["math.max(...this.clients.map((p",{"_index":203,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["maxquantity",{"_index":1218,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["mayúscula",{"_index":1541,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["medidas",{"_index":1265,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{}}}],["men",{"_index":784,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["menos",{"_index":1539,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["mensaje",{"_index":412,"title":{},"body":{"components/AdminContactManagementComponent.html":{},"interfaces/Cart.html":{},"interfaces/Contact.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":1727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":398,"title":{},"body":{"components/AdminContactManagementComponent.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{}}}],["metadata",{"_index":17,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["methods",{"_index":41,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/NavigationService.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UsersService.html":{}}}],["metodocliente",{"_index":1050,"title":{},"body":{"injectables/CustomersService.html":{}}}],["metodocliente(listaclientes",{"_index":979,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["metálico",{"_index":1300,"title":{},"body":{"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{}}}],["mientras",{"_index":1146,"title":{},"body":{"injectables/NavigationService.html":{}}}],["milisegundos",{"_index":1150,"title":{},"body":{"injectables/NavigationService.html":{}}}],["minquantity",{"_index":1219,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["miscellaneous",{"_index":1653,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mismatch",{"_index":1491,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["mm",{"_index":735,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["mo",{"_index":815,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["modal",{"_index":113,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/User-1.html":{}}}],["modalinstance",{"_index":214,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/User-1.html":{}}}],["modalinstance.hide",{"_index":216,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/User-1.html":{}}}],["modules",{"_index":1710,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monitoreo",{"_index":242,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{}}}],["monitoring",{"_index":481,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["monitoring'},{'name",{"_index":338,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["monitoring.component.html",{"_index":482,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["monitoring.component.scss",{"_index":483,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["monitoring.component.ts",{"_index":480,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"coverage.html":{}}}],["monitoring.component.ts:106",{"_index":497,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{}}}],["monitoring.component.ts:111",{"_index":500,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{}}}],["monitoring.component.ts:116",{"_index":505,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{}}}],["monitoring.component.ts:36",{"_index":506,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{}}}],["monitoring.component.ts:37",{"_index":508,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{}}}],["monitoring.component.ts:38",{"_index":509,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{}}}],["monitoring.component.ts:39",{"_index":494,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{}}}],["monitoring.component.ts:57",{"_index":501,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{}}}],["monitoring.component.ts:73",{"_index":502,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{}}}],["monitoring.component.ts:78",{"_index":495,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{}}}],["monitoring.component.ts:92",{"_index":504,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{}}}],["monitoring/admin",{"_index":479,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"coverage.html":{}}}],["month",{"_index":740,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["monthdiff",{"_index":1512,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["more",{"_index":1703,"title":{},"body":{"index.html":{}}}],["mostrando",{"_index":1144,"title":{},"body":{"injectables/NavigationService.html":{}}}],["mostrar",{"_index":246,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["mostraralerta",{"_index":900,"title":{},"body":{"injectables/ContactsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["mostraralerta(mensaje",{"_index":701,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["motivo",{"_index":1262,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["ms",{"_index":1154,"title":{},"body":{"injectables/NavigationService.html":{}}}],["muestra",{"_index":112,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["mágico",{"_index":239,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["nacimiento",{"_index":1468,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["name",{"_index":65,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/NavigationService.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["nativa",{"_index":1380,"title":{},"body":{"components/ProductDetailTablaComponent.html":{}}}],["navega",{"_index":1141,"title":{},"body":{"injectables/NavigationService.html":{}}}],["navegación",{"_index":71,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["navegar",{"_index":1149,"title":{},"body":{"injectables/NavigationService.html":{}}}],["navigate",{"_index":1668,"title":{},"body":{"index.html":{}}}],["navigatewithdelay",{"_index":1135,"title":{},"body":{"injectables/NavigationService.html":{}}}],["navigatewithdelay(href",{"_index":1138,"title":{},"body":{"injectables/NavigationService.html":{}}}],["navigationservice",{"_index":52,"title":{"injectables/NavigationService.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/NavigationService.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{},"coverage.html":{}}}],["ndice",{"_index":105,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["need",{"_index":1696,"title":{},"body":{"index.html":{}}}],["new",{"_index":222,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{},"coverage.html":{},"index.html":{}}}],["newcart",{"_index":650,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["newclient",{"_index":38,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["newconctact",{"_index":840,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{}}}],["newcustomer",{"_index":1024,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["newcustomer.email",{"_index":1027,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["newcustomer.id",{"_index":1031,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["neworder",{"_index":666,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["newprofile",{"_index":1404,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["newstatus",{"_index":538,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["newuser",{"_index":552,"title":{},"body":{"components/AdminUserManagementComponent.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["ng",{"_index":1665,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":46,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["ngoninit",{"_index":47,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["nico",{"_index":140,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["nombre",{"_index":250,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Cart.html":{},"interfaces/Contact.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["none",{"_index":787,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["nueva",{"_index":547,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["nuevo",{"_index":137,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Cart.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["null",{"_index":159,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["number",{"_index":94,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["número",{"_index":837,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["o",{"_index":1123,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["o.id",{"_index":524,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{}}}],["object",{"_index":54,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["objeto",{"_index":1493,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["objetos",{"_index":1440,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["obligatoria",{"_index":464,"title":{},"body":{"components/AdminLoginComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["obligatorio",{"_index":461,"title":{},"body":{"components/AdminLoginComponent.html":{},"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["observable",{"_index":949,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["obtiene",{"_index":748,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["ocultar",{"_index":783,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["olvid",{"_index":1126,"title":{},"body":{"components/LoginComponent.html":{}}}],["onaddclient",{"_index":48,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["onadduser",{"_index":558,"title":{},"body":{"components/AdminUserManagementComponent.html":{},"interfaces/User-1.html":{}}}],["oninit",{"_index":15,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["onreset",{"_index":873,"title":{},"body":{"components/ContactComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["onsubmit",{"_index":427,"title":{},"body":{"components/AdminLoginComponent.html":{},"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["onupdateclient",{"_index":49,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["onupdateuser",{"_index":559,"title":{},"body":{"components/AdminUserManagementComponent.html":{},"interfaces/User-1.html":{}}}],["opacity",{"_index":290,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["opcional",{"_index":1143,"title":{},"body":{"injectables/NavigationService.html":{}}}],["optional",{"_index":67,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/NavigationService.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UsersService.html":{}}}],["orden",{"_index":548,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["order",{"_index":337,"title":{"interfaces/Order.html":{},"interfaces/Order-1.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["order.email",{"_index":526,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["order.estado",{"_index":532,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{}}}],["order.id",{"_index":544,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["orderdetail",{"_index":507,"title":{"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{}},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"coverage.html":{}}}],["orderdetails",{"_index":613,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["orderdetailssaved",{"_index":629,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["orderdetailsstoragekey",{"_index":615,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["orderexisting",{"_index":688,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["orderid",{"_index":498,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{}}}],["orderindex",{"_index":690,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["orders",{"_index":485,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{}}}],["orderservice",{"_index":492,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["orderssaved",{"_index":626,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["ordersservice",{"_index":493,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"coverage.html":{}}}],["orderstoragekey",{"_index":614,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["out",{"_index":1706,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1707,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p.id",{"_index":204,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["package",{"_index":1630,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["pagar",{"_index":829,"title":{},"body":{"components/CartComponent.html":{}}}],["page",{"_index":1709,"title":{},"body":{"index.html":{}}}],["pantalla",{"_index":1145,"title":{},"body":{"injectables/NavigationService.html":{}}}],["papeleria",{"_index":1079,"title":{},"body":{"components/HomeComponent.html":{}}}],["papelería",{"_index":1094,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{}}}],["para",{"_index":131,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["param",{"_index":178,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["parameters",{"_index":63,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/NavigationService.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UsersService.html":{}}}],["password",{"_index":154,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["password).subscribe(isvalid",{"_index":1118,"title":{},"body":{"components/LoginComponent.html":{}}}],["password.trim",{"_index":1428,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["passwordmatchvalidator",{"_index":1456,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["passwordmatchvalidator(form",{"_index":1485,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["passwordrecoverycomponent",{"_index":351,"title":{"components/PasswordRecoveryComponent.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["passwordrecoveryform",{"_index":1173,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["pedido",{"_index":541,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{}}}],["pedidos",{"_index":243,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/HomeComponent.html":{}}}],["pendiente",{"_index":549,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["perfil",{"_index":458,"title":{},"body":{"components/AdminLoginComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["perfiles",{"_index":1390,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["permite",{"_index":813,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["personaliza",{"_index":1291,"title":{},"body":{"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{}}}],["personalizada",{"_index":1290,"title":{},"body":{"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["personalizadas",{"_index":1202,"title":{},"body":{"components/ProductCatalogComponent.html":{}}}],["personalizado",{"_index":1093,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{}}}],["personalizados",{"_index":1200,"title":{},"body":{"components/ProductCatalogComponent.html":{},"components/ProductDetailCuadernoComponent.html":{}}}],["phone",{"_index":396,"title":{},"body":{"components/AdminContactManagementComponent.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{}}}],["plataforma",{"_index":74,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["platform",{"_index":1693,"title":{},"body":{"index.html":{}}}],["platform_id",{"_index":162,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["platformid",{"_index":53,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["polera",{"_index":1351,"title":{},"body":{"components/ProductDetailPoleraComponent.html":{}}}],["polera'},{'name",{"_index":366,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["polera.component.html",{"_index":1352,"title":{},"body":{"components/ProductDetailPoleraComponent.html":{}}}],["polera.component.scss",{"_index":1353,"title":{},"body":{"components/ProductDetailPoleraComponent.html":{}}}],["polera.component.ts",{"_index":1350,"title":{},"body":{"components/ProductDetailPoleraComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["polera.component.ts:20",{"_index":1360,"title":{},"body":{"components/ProductDetailPoleraComponent.html":{}}}],["polera.component.ts:21",{"_index":1362,"title":{},"body":{"components/ProductDetailPoleraComponent.html":{}}}],["polera.component.ts:22",{"_index":1361,"title":{},"body":{"components/ProductDetailPoleraComponent.html":{}}}],["polera.component.ts:23",{"_index":1354,"title":{},"body":{"components/ProductDetailPoleraComponent.html":{}}}],["polera.component.ts:36",{"_index":1359,"title":{},"body":{"components/ProductDetailPoleraComponent.html":{}}}],["polera.component.ts:40",{"_index":1356,"title":{},"body":{"components/ProductDetailPoleraComponent.html":{}}}],["polera.component.ts:60",{"_index":1358,"title":{},"body":{"components/ProductDetailPoleraComponent.html":{}}}],["polera.component.ts:86",{"_index":1357,"title":{},"body":{"components/ProductDetailPoleraComponent.html":{}}}],["polera.component.ts:90",{"_index":1355,"title":{},"body":{"components/ProductDetailPoleraComponent.html":{}}}],["polera/product",{"_index":1349,"title":{},"body":{"components/ProductDetailPoleraComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["poleras",{"_index":1206,"title":{},"body":{"components/ProductCatalogComponent.html":{}}}],["por",{"_index":727,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["position",{"_index":270,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["precio",{"_index":638,"title":{},"body":{"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["predeterminado",{"_index":1153,"title":{},"body":{"injectables/NavigationService.html":{}}}],["price",{"_index":513,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["primary",{"_index":305,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["private",{"_index":179,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["procesado",{"_index":407,"title":{},"body":{"components/AdminContactManagementComponent.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactsService.html":{}}}],["product",{"_index":354,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["productcatalogcomponent",{"_index":353,"title":{"components/ProductCatalogComponent.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["productdetailaluminiocomponent",{"_index":356,"title":{"components/ProductDetailAluminioComponent.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["productdetailcroqueracomponent",{"_index":359,"title":{"components/ProductDetailCroqueraComponent.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["productdetailcuadernocomponent",{"_index":361,"title":{"components/ProductDetailCuadernoComponent.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["productdetaillibretacomponent",{"_index":363,"title":{"components/ProductDetailLibretaComponent.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["productdetailpoleracomponent",{"_index":365,"title":{"components/ProductDetailPoleraComponent.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["productdetailtablacomponent",{"_index":367,"title":{"components/ProductDetailTablaComponent.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["productname",{"_index":516,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["producto",{"_index":542,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["productos",{"_index":1199,"title":{},"body":{"components/ProductCatalogComponent.html":{}}}],["products",{"_index":533,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["products.join",{"_index":536,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["profile",{"_index":570,"title":{"interfaces/Profile.html":{}},"body":{"components/AdminUserManagementComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["profile'},{'name",{"_index":370,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["profile.component.html",{"_index":1451,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.scss",{"_index":1452,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.id",{"_index":1401,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["profilecomponent",{"_index":369,"title":{"components/ProfileComponent.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["profileexisting",{"_index":1399,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["profileform",{"_index":1453,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profiles",{"_index":1389,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["profilessaved",{"_index":1391,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["project",{"_index":1658,"title":{},"body":{"index.html":{}}}],["properties",{"_index":36,"title":{"properties.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/LoginComponent.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["proporcionada",{"_index":976,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["proporcionan",{"_index":1489,"title":{},"body":{"components/ProfileComponent.html":{}}}],["provideclienthydration",{"_index":1724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":611,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["providehttpclient(withfetch",{"_index":1725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":18,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["provideserverrendering",{"_index":1728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["proyectos",{"_index":1090,"title":{},"body":{"components/HomeComponent.html":{}}}],["pu3nt3m4g1c0",{"_index":935,"title":{},"body":{"injectables/CryptoService.html":{}}}],["puente",{"_index":238,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["puentemagicoweb",{"_index":604,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["puntos",{"_index":1329,"title":{},"body":{"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{}}}],["quantity",{"_index":514,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["que",{"_index":120,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"injectables/NavigationService.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["quitar",{"_index":827,"title":{},"body":{"components/CartComponent.html":{}}}],["radius",{"_index":303,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["rdenes",{"_index":618,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["reactiveformsmodule",{"_index":423,"title":{},"body":{"components/AdminLoginComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/ContactComponent.html":{},"components/LoginComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["reactivos",{"_index":1459,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["realiza",{"_index":1483,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["realizar",{"_index":970,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["recovery",{"_index":1170,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery'},{'name",{"_index":352,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["recovery.component.html",{"_index":1171,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery.component.scss",{"_index":1172,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery.component.ts",{"_index":1169,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"coverage.html":{}}}],["recovery.component.ts:19",{"_index":1174,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery.component.ts:33",{"_index":1177,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery.component.ts:37",{"_index":1176,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery.component.ts:53",{"_index":1178,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery.component.ts:79",{"_index":1175,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery/password",{"_index":1168,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"coverage.html":{}}}],["recuperación",{"_index":1188,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recuperar",{"_index":992,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/PasswordRecoveryComponent.html":{}}}],["redirige",{"_index":87,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["redirigir",{"_index":232,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Contact-1.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["reference",{"_index":1708,"title":{},"body":{"index.html":{}}}],["referencia",{"_index":1461,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["regalo",{"_index":1271,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{}}}],["regalos",{"_index":1089,"title":{},"body":{"components/HomeComponent.html":{}}}],["register",{"_index":372,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":1545,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":1546,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercarts(product",{"_index":647,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["registercomponent",{"_index":371,"title":{"components/RegisterComponent.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["registercontacts",{"_index":901,"title":{},"body":{"injectables/ContactsService.html":{}}}],["registercontacts(name",{"_index":838,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{}}}],["registerform",{"_index":1547,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerorderdetails(id",{"_index":673,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["registerorders(email",{"_index":664,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["registerprofile",{"_index":1567,"title":{},"body":{"injectables/UsersService.html":{}}}],["registerprofile(id",{"_index":1398,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["registeruser",{"_index":1568,"title":{},"body":{"injectables/UsersService.html":{}}}],["registeruser(name",{"_index":1410,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["registra",{"_index":634,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["registrada",{"_index":663,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["registrado",{"_index":642,"title":{},"body":{"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["registrados",{"_index":672,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["registrar",{"_index":649,"title":{},"body":{"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["registro",{"_index":785,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["registroexitoso",{"_index":888,"title":{},"body":{"components/ContactComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["relativa",{"_index":1160,"title":{},"body":{"injectables/NavigationService.html":{}}}],["reload",{"_index":1672,"title":{},"body":{"index.html":{}}}],["removefromcart",{"_index":767,"title":{},"body":{"components/CartComponent.html":{}}}],["removefromcart(index",{"_index":660,"title":{},"body":{"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["renderer",{"_index":430,"title":{},"body":{"components/AdminLoginComponent.html":{},"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["renderer2",{"_index":431,"title":{},"body":{"components/AdminLoginComponent.html":{},"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["renderizado",{"_index":1460,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["reservados",{"_index":265,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["response",{"_index":983,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["restablece",{"_index":1480,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["results",{"_index":375,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retardo",{"_index":130,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["retorna",{"_index":640,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["retraso",{"_index":1142,"title":{},"body":{"injectables/NavigationService.html":{}}}],["return",{"_index":181,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":91,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/NavigationService.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["rgba(255",{"_index":278,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["ride",{"_index":1247,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["roble",{"_index":1381,"title":{},"body":{"components/ProductDetailTablaComponent.html":{}}}],["root",{"_index":599,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["root'},{'name",{"_index":342,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["rotate(0deg",{"_index":317,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["rotate(360deg",{"_index":318,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["router",{"_index":57,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NavigationService.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["routermodule",{"_index":28,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["routeroutlet",{"_index":600,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":1595,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["running",{"_index":1685,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":951,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":954,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["saveorderstolocalstorage",{"_index":757,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["scaffolding",{"_index":1676,"title":{},"body":{"index.html":{}}}],["screen",{"_index":269,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"injectables/NavigationService.html":{}}}],["screen.active",{"_index":296,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["se",{"_index":121,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"components/HomeComponent.html":{},"injectables/NavigationService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["secondary",{"_index":308,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["secretkey",{"_index":918,"title":{},"body":{"injectables/CryptoService.html":{}}}],["security",{"_index":322,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["segundos",{"_index":1246,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["seleccionado",{"_index":111,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["selectedclient",{"_index":39,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["selectedindex",{"_index":40,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/User-1.html":{}}}],["selectedorderdetails",{"_index":486,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["selectedorderid",{"_index":487,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["selecteduser",{"_index":553,"title":{},"body":{"components/AdminUserManagementComponent.html":{},"interfaces/User-1.html":{}}}],["selector",{"_index":20,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["selectorder",{"_index":490,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{}}}],["selectorder(orderid",{"_index":503,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["ser",{"_index":1161,"title":{},"body":{"injectables/NavigationService.html":{}}}],["serve",{"_index":1666,"title":{},"body":{"index.html":{}}}],["server",{"_index":1638,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["server.ts",{"_index":1592,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["serverconfig",{"_index":1600,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["services/contacts.service",{"_index":393,"title":{},"body":{"components/AdminContactManagementComponent.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{}}}],["services/crypto.service",{"_index":172,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["services/customers.service",{"_index":168,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["services/navigation.service",{"_index":167,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["services/orders.service",{"_index":510,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["services/users.service",{"_index":170,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Contact-1.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"interfaces/User-1.html":{}}}],["servicio",{"_index":69,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"interfaces/Cart.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["sesión",{"_index":84,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"components/ContactComponent.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["setloginstate",{"_index":1051,"title":{},"body":{"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["setloginstate(customer",{"_index":1037,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["setloginstate(user",{"_index":1433,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["settimeout",{"_index":713,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["show",{"_index":220,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/User-1.html":{}}}],["si",{"_index":88,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["sido",{"_index":126,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/ContactComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["siguiente",{"_index":1256,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["sin",{"_index":1268,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{}}}],["sobre",{"_index":1260,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["sobrescribe",{"_index":973,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["sobrescribir",{"_index":978,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["sobrescrito",{"_index":985,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["solicitudes",{"_index":971,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["solid",{"_index":301,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["son",{"_index":1003,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["spin",{"_index":311,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["src/.../admin",{"_index":1717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.server.ts",{"_index":1719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":1715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":1716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../product",{"_index":1718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":598,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":605,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":1597,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":1601,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/admin",{"_index":10,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Contact-1.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"interfaces/User-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/cart/cart.component.ts",{"_index":759,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"coverage.html":{}}}],["src/app/components/cart/cart.component.ts:101",{"_index":772,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:118",{"_index":771,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:25",{"_index":768,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:34",{"_index":776,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:39",{"_index":770,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:59",{"_index":775,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:75",{"_index":779,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:76",{"_index":780,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:78",{"_index":774,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:85",{"_index":769,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:89",{"_index":777,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:95",{"_index":773,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/contact/contact.component.ts",{"_index":869,"title":{},"body":{"components/ContactComponent.html":{},"coverage.html":{}}}],["src/app/components/contact/contact.component.ts:19",{"_index":874,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/contact/contact.component.ts:38",{"_index":877,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/contact/contact.component.ts:42",{"_index":876,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/contact/contact.component.ts:58",{"_index":879,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/contact/contact.component.ts:80",{"_index":878,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/contact/contact.component.ts:84",{"_index":875,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/home/home.component.ts",{"_index":1071,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts:15",{"_index":1074,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:22",{"_index":1077,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:26",{"_index":1075,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:46",{"_index":1076,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/login/login.component.ts",{"_index":1106,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:20",{"_index":1108,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:36",{"_index":1111,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:40",{"_index":1110,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:56",{"_index":1112,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:77",{"_index":1109,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/logout/logout.component.ts",{"_index":1127,"title":{},"body":{"components/LogoutComponent.html":{},"coverage.html":{}}}],["src/app/components/logout/logout.component.ts:15",{"_index":1128,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/components/logout/logout.component.ts:23",{"_index":1131,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/components/logout/logout.component.ts:27",{"_index":1130,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/components/logout/logout.component.ts:45",{"_index":1129,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/components/password",{"_index":1167,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"coverage.html":{}}}],["src/app/components/product",{"_index":1189,"title":{},"body":{"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/profile/profile.component.ts",{"_index":1450,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/components/profile/profile.component.ts:110",{"_index":1464,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:127",{"_index":1481,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:169",{"_index":1479,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:187",{"_index":1469,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:20",{"_index":1494,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:21",{"_index":1457,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:215",{"_index":1476,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:245",{"_index":1471,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:257",{"_index":1473,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:62",{"_index":1478,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:73",{"_index":1477,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:96",{"_index":1486,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/register/register.component.ts",{"_index":1544,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/components/register/register.component.ts:107",{"_index":1549,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:124",{"_index":1556,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:162",{"_index":1555,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:180",{"_index":1550,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:209",{"_index":1551,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:22",{"_index":1548,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:221",{"_index":1552,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:63",{"_index":1554,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:73",{"_index":1553,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:96",{"_index":1557,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/services/contacts.service.ts",{"_index":832,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"coverage.html":{}}}],["src/app/services/contacts.service.ts:103",{"_index":912,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/services/contacts.service.ts:131",{"_index":911,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/services/contacts.service.ts:149",{"_index":907,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/services/contacts.service.ts:170",{"_index":908,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/services/contacts.service.ts:18",{"_index":916,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/services/contacts.service.ts:182",{"_index":909,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/services/contacts.service.ts:19",{"_index":904,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/services/contacts.service.ts:193",{"_index":910,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/services/contacts.service.ts:203",{"_index":905,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/services/contacts.service.ts:216",{"_index":914,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/services/contacts.service.ts:228",{"_index":906,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/services/contacts.service.ts:41",{"_index":913,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/services/contacts.service.ts:69",{"_index":915,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/services/crypto.service.ts",{"_index":917,"title":{},"body":{"injectables/CryptoService.html":{},"coverage.html":{}}}],["src/app/services/crypto.service.ts:19",{"_index":933,"title":{},"body":{"injectables/CryptoService.html":{}}}],["src/app/services/crypto.service.ts:30",{"_index":923,"title":{},"body":{"injectables/CryptoService.html":{}}}],["src/app/services/crypto.service.ts:8",{"_index":921,"title":{},"body":{"injectables/CryptoService.html":{}}}],["src/app/services/customers.service.ts",{"_index":945,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"coverage.html":{}}}],["src/app/services/customers.service.ts:115",{"_index":1059,"title":{},"body":{"injectables/CustomersService.html":{}}}],["src/app/services/customers.service.ts:128",{"_index":1067,"title":{},"body":{"injectables/CustomersService.html":{}}}],["src/app/services/customers.service.ts:148",{"_index":1057,"title":{},"body":{"injectables/CustomersService.html":{}}}],["src/app/services/customers.service.ts:174",{"_index":1065,"title":{},"body":{"injectables/CustomersService.html":{}}}],["src/app/services/customers.service.ts:202",{"_index":1062,"title":{},"body":{"injectables/CustomersService.html":{}}}],["src/app/services/customers.service.ts:21",{"_index":1070,"title":{},"body":{"injectables/CustomersService.html":{}}}],["src/app/services/customers.service.ts:219",{"_index":1066,"title":{},"body":{"injectables/CustomersService.html":{}}}],["src/app/services/customers.service.ts:231",{"_index":1058,"title":{},"body":{"injectables/CustomersService.html":{}}}],["src/app/services/customers.service.ts:245",{"_index":1061,"title":{},"body":{"injectables/CustomersService.html":{}}}],["src/app/services/customers.service.ts:257",{"_index":1063,"title":{},"body":{"injectables/CustomersService.html":{}}}],["src/app/services/customers.service.ts:28",{"_index":1056,"title":{},"body":{"injectables/CustomersService.html":{}}}],["src/app/services/customers.service.ts:48",{"_index":1064,"title":{},"body":{"injectables/CustomersService.html":{}}}],["src/app/services/customers.service.ts:66",{"_index":1060,"title":{},"body":{"injectables/CustomersService.html":{}}}],["src/app/services/customers.service.ts:82",{"_index":1068,"title":{},"body":{"injectables/CustomersService.html":{}}}],["src/app/services/customers.service.ts:96",{"_index":1069,"title":{},"body":{"injectables/CustomersService.html":{}}}],["src/app/services/navigation.service.ts",{"_index":1134,"title":{},"body":{"injectables/NavigationService.html":{},"coverage.html":{}}}],["src/app/services/navigation.service.ts:19",{"_index":1140,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/services/navigation.service.ts:7",{"_index":1137,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/services/orders.service.ts",{"_index":608,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"coverage.html":{}}}],["src/app/services/users.service.ts",{"_index":1388,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["src/app/services/users.service.ts:115",{"_index":1584,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:148",{"_index":1577,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:172",{"_index":1580,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:200",{"_index":1578,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:217",{"_index":1583,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:229",{"_index":1573,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:240",{"_index":1579,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:254",{"_index":1575,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:27",{"_index":1587,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:274",{"_index":1576,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:28",{"_index":1586,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:285",{"_index":1572,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:29",{"_index":1571,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:299",{"_index":1585,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:312",{"_index":1574,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:57",{"_index":1581,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:86",{"_index":1582,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/main.server.ts",{"_index":1628,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":24,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["started",{"_index":1657,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1591,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":517,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{}}}],["stickers",{"_index":1098,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductDetailCuadernoComponent.html":{}}}],["storagekey",{"_index":833,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["stored",{"_index":1682,"title":{},"body":{"index.html":{}}}],["string",{"_index":395,"title":{},"body":{"components/AdminContactManagementComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["styleurl",{"_index":377,"title":{},"body":{"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["styleurls",{"_index":31,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["su",{"_index":728,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/LoginComponent.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/PasswordRecoveryComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["subject",{"_index":397,"title":{},"body":{"components/AdminContactManagementComponent.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{}}}],["sublimación",{"_index":1081,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailPoleraComponent.html":{}}}],["success",{"_index":655,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/LoginComponent.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/PasswordRecoveryComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["sum",{"_index":797,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["tabla",{"_index":1210,"title":{},"body":{"components/ProductCatalogComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["tabla'},{'name",{"_index":368,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["tabla.component.html",{"_index":1367,"title":{},"body":{"components/ProductDetailTablaComponent.html":{}}}],["tabla.component.scss",{"_index":1368,"title":{},"body":{"components/ProductDetailTablaComponent.html":{}}}],["tabla.component.ts",{"_index":1366,"title":{},"body":{"components/ProductDetailTablaComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tabla.component.ts:20",{"_index":1375,"title":{},"body":{"components/ProductDetailTablaComponent.html":{}}}],["tabla.component.ts:21",{"_index":1377,"title":{},"body":{"components/ProductDetailTablaComponent.html":{}}}],["tabla.component.ts:22",{"_index":1376,"title":{},"body":{"components/ProductDetailTablaComponent.html":{}}}],["tabla.component.ts:23",{"_index":1369,"title":{},"body":{"components/ProductDetailTablaComponent.html":{}}}],["tabla.component.ts:36",{"_index":1374,"title":{},"body":{"components/ProductDetailTablaComponent.html":{}}}],["tabla.component.ts:40",{"_index":1371,"title":{},"body":{"components/ProductDetailTablaComponent.html":{}}}],["tabla.component.ts:60",{"_index":1373,"title":{},"body":{"components/ProductDetailTablaComponent.html":{}}}],["tabla.component.ts:86",{"_index":1372,"title":{},"body":{"components/ProductDetailTablaComponent.html":{}}}],["tabla.component.ts:90",{"_index":1370,"title":{},"body":{"components/ProductDetailTablaComponent.html":{}}}],["tabla/product",{"_index":1365,"title":{},"body":{"components/ProductDetailTablaComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":248,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminUserManagementComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1629,"title":{},"body":{"coverage.html":{}}}],["tamaño",{"_index":1296,"title":{},"body":{"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{}}}],["tanto",{"_index":1147,"title":{},"body":{"injectables/NavigationService.html":{}}}],["tapa",{"_index":1293,"title":{},"body":{"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailLibretaComponent.html":{}}}],["tapas",{"_index":1322,"title":{},"body":{"components/ProductDetailCuadernoComponent.html":{}}}],["target",{"_index":190,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["target.getattribute('href",{"_index":194,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["tecnologia",{"_index":1083,"title":{},"body":{"components/HomeComponent.html":{}}}],["tecnología",{"_index":1105,"title":{},"body":{"components/HomeComponent.html":{}}}],["teléfono",{"_index":410,"title":{},"body":{"components/AdminContactManagementComponent.html":{},"interfaces/Contact.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["templateurl",{"_index":33,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["tener",{"_index":1534,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["test",{"_index":720,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["testing",{"_index":1699,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1687,"title":{},"body":{"index.html":{}}}],["text",{"_index":321,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["textiles",{"_index":1100,"title":{},"body":{"components/HomeComponent.html":{}}}],["texto",{"_index":926,"title":{},"body":{"injectables/CryptoService.html":{}}}],["this.addtocartform",{"_index":1232,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["this.addtocartform.valid",{"_index":1249,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["this.addtocartform.value.quantity",{"_index":1250,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["this.adminloginform",{"_index":440,"title":{},"body":{"components/AdminLoginComponent.html":{}}}],["this.adminloginform.valid",{"_index":444,"title":{},"body":{"components/AdminLoginComponent.html":{}}}],["this.adminloginform.value.email",{"_index":445,"title":{},"body":{"components/AdminLoginComponent.html":{}}}],["this.adminloginform.value.password",{"_index":446,"title":{},"body":{"components/AdminLoginComponent.html":{}}}],["this.calculatetotal",{"_index":794,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["this.cart",{"_index":793,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["this.cart.reduce((sum",{"_index":796,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["this.cart.splice(index",{"_index":800,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["this.carts",{"_index":624,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["this.carts.push(newcart",{"_index":651,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["this.carts.splice(index",{"_index":661,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["this.checkloginstate",{"_index":197,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["this.checkloginstatecheckout",{"_index":803,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["this.clearcart",{"_index":810,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["this.clients",{"_index":199,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["this.clients.length",{"_index":202,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["this.clients.push(this.newclient",{"_index":208,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["this.clients.splice(index",{"_index":230,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["this.clients[index",{"_index":218,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["this.clients[this.selectedindex",{"_index":227,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["this.clientservice.getcustomers().subscribe(data",{"_index":198,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["this.clientservice.metodocliente(this.clients",{"_index":209,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["this.contactform",{"_index":880,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.contactform.reset",{"_index":892,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.contactform.valid",{"_index":881,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.contactform.value",{"_index":882,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.contactform.value.email",{"_index":884,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.contactform.value.message",{"_index":887,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.contactform.value.name",{"_index":883,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.contactform.value.phone",{"_index":885,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.contactform.value.suject",{"_index":886,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.contacts",{"_index":403,"title":{},"body":{"components/AdminContactManagementComponent.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactsService.html":{}}}],["this.contacts.find(contact",{"_index":848,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{}}}],["this.contacts.findindex(contact",{"_index":850,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{}}}],["this.contacts.length",{"_index":839,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{}}}],["this.contacts.push(newconctact",{"_index":841,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{}}}],["this.contacts[contactindex",{"_index":851,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{}}}],["this.contacts[index",{"_index":405,"title":{},"body":{"components/AdminContactManagementComponent.html":{},"interfaces/Contact-1.html":{}}}],["this.contactservice.deletecontact(index",{"_index":409,"title":{},"body":{"components/AdminContactManagementComponent.html":{},"interfaces/Contact-1.html":{}}}],["this.contactservice.getcontacts",{"_index":404,"title":{},"body":{"components/AdminContactManagementComponent.html":{},"interfaces/Contact-1.html":{}}}],["this.contactservice.islocalstorageavailable",{"_index":401,"title":{},"body":{"components/AdminContactManagementComponent.html":{},"interfaces/Contact-1.html":{}}}],["this.contactservice.updatecontact(index",{"_index":408,"title":{},"body":{"components/AdminContactManagementComponent.html":{},"interfaces/Contact-1.html":{}}}],["this.contactsservice.registercontacts(name",{"_index":889,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.cryptoservice.decrypt(c.password",{"_index":1009,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["this.cryptoservice.decrypt(user.password",{"_index":1424,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["this.cryptoservice.encrypt(password",{"_index":1420,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["this.cryptoservice.encrypt(this.newclient.password",{"_index":207,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["this.cryptoservice.encrypt(this.selectedclient.password",{"_index":226,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["this.customer",{"_index":1523,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.customersservice.checkloginstate",{"_index":782,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["this.customersservice.getcustomerbyemail(loggedinclientemail).subscribe",{"_index":1522,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.customersservice.getloggedinclientemail",{"_index":804,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"components/ProfileComponent.html":{}}}],["this.customersservice.islocalstorageavailable",{"_index":792,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["this.customersservice.logout",{"_index":1132,"title":{},"body":{"components/LogoutComponent.html":{}}}],["this.customersservice.mostraralerta('cliente",{"_index":1185,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"components/ProfileComponent.html":{}}}],["this.customersservice.mostraralerta('email",{"_index":1125,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.customersservice.mostraralerta('inicio",{"_index":1120,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.customersservice.validateemail(email).subscribe",{"_index":1182,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["this.customersservice.validatelogin(email",{"_index":1117,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.editorderform",{"_index":515,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["this.editorderform.patchvalue",{"_index":525,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["this.editorderform.value.status",{"_index":539,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["this.fb.group",{"_index":441,"title":{},"body":{"components/AdminLoginComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/ContactComponent.html":{},"components/LoginComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["this.formattoformdate(customer.birthdate",{"_index":1527,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getcontacts",{"_index":861,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{}}}],["this.getcustomers().pipe",{"_index":998,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["this.getusers",{"_index":1443,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["this.http.get(this.jsonurl).pipe",{"_index":990,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["this.http.post(this.jsonurl",{"_index":981,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["this.httpoptions).subscribe",{"_index":982,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["this.islocalstorageavailable",{"_index":621,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["this.loadcart",{"_index":781,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["this.loadclients",{"_index":196,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["this.loadcontacts",{"_index":402,"title":{},"body":{"components/AdminContactManagementComponent.html":{},"interfaces/Contact-1.html":{}}}],["this.loadcustomerdata",{"_index":1503,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.loadordersfromlocalstorage",{"_index":633,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["this.loadusers",{"_index":576,"title":{},"body":{"components/AdminUserManagementComponent.html":{},"interfaces/User-1.html":{}}}],["this.loginform",{"_index":1113,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.valid",{"_index":1114,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.email",{"_index":1115,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.password",{"_index":1116,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.metodocliente(customers",{"_index":1023,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["this.mostraralerta('contacto",{"_index":844,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{}}}],["this.mostraralerta('el",{"_index":1402,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["this.mostraralerta('email",{"_index":1432,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["this.mostraralerta('error",{"_index":852,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["this.mostraralerta('inicio",{"_index":1430,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["this.mostraralerta('orden",{"_index":695,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["this.mostraralerta('perfil",{"_index":1408,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["this.mostraralerta('producto",{"_index":654,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["this.mostraralerta('usuario",{"_index":1416,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["this.navigationservice.navigatewithdelay(href",{"_index":195,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["this.newclient",{"_index":210,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["this.newclient.id",{"_index":201,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["this.newclient.password",{"_index":206,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["this.newuser",{"_index":580,"title":{},"body":{"components/AdminUserManagementComponent.html":{},"interfaces/User-1.html":{}}}],["this.orderdetails",{"_index":631,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["this.orderdetails.filter(detail",{"_index":753,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["this.orders",{"_index":518,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{}}}],["this.orders.find(o",{"_index":523,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{}}}],["this.orders.find(order",{"_index":689,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["this.orders.findindex(contact",{"_index":691,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["this.orders.length",{"_index":665,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["this.orders.push(neworder",{"_index":667,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["this.orders[orderindex",{"_index":693,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["this.orderservice.getorderdetails(orderid",{"_index":522,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["this.orderservice.getorderdetails(orderid).map(detail",{"_index":534,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["this.orderservice.getorderdetails(orderid).reduce((acc",{"_index":537,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["this.orderservice.getorders",{"_index":519,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["this.orderservice.updateorderstatus(this.selectedorderid",{"_index":540,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["this.ordersservice.clearcart",{"_index":802,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["this.ordersservice.registercarts(product",{"_index":1254,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["this.ordersservice.registerorderdetails(id",{"_index":807,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["this.ordersservice.registerorders(email",{"_index":805,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["this.ordersservice.removefromcart(index",{"_index":801,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["this.passwordmatchvalidator",{"_index":1502,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["this.passwordrecoveryform",{"_index":1179,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["this.passwordrecoveryform.valid",{"_index":1180,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["this.passwordrecoveryform.value.email",{"_index":1181,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["this.profileform",{"_index":1495,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileform.patchvalue",{"_index":1524,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileform.reset",{"_index":1519,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profiles",{"_index":1393,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["this.profiles.find(profile",{"_index":1400,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["this.profiles.push(newprofile",{"_index":1405,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["this.registerform",{"_index":1558,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.reset",{"_index":1560,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.navigate(['/admin",{"_index":236,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Contact-1.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"interfaces/User-1.html":{}}}],["this.router.navigate(['/home",{"_index":1121,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/login",{"_index":817,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"components/PasswordRecoveryComponent.html":{}}}],["this.router.navigate(['/product",{"_index":1248,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["this.router.navigate(['/profile",{"_index":1563,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.navigate(['/register",{"_index":1520,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.router.navigatebyurl(href).then",{"_index":1164,"title":{},"body":{"injectables/NavigationService.html":{}}}],["this.saveorderstolocalstorage",{"_index":756,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["this.secretkey",{"_index":943,"title":{},"body":{"injectables/CryptoService.html":{}}}],["this.secretkey).tostring",{"_index":940,"title":{},"body":{"injectables/CryptoService.html":{}}}],["this.selectedclient",{"_index":217,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["this.selectedclient.password",{"_index":225,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["this.selectedindex",{"_index":219,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/User-1.html":{}}}],["this.selectedorderdetails",{"_index":521,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["this.selectedorderdetails.map(detail",{"_index":527,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["this.selectedorderdetails.reduce((acc",{"_index":529,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["this.selectedorderid",{"_index":520,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["this.selecteduser",{"_index":584,"title":{},"body":{"components/AdminUserManagementComponent.html":{},"interfaces/User-1.html":{}}}],["this.setloginstate(customer",{"_index":1010,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["this.setloginstate(user",{"_index":1431,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["this.totalamount",{"_index":795,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["this.users",{"_index":577,"title":{},"body":{"components/AdminUserManagementComponent.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["this.users.find(user",{"_index":1412,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["this.users.findindex(user",{"_index":1419,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["this.users.push(newuser",{"_index":1413,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["this.users[index",{"_index":585,"title":{},"body":{"components/AdminUserManagementComponent.html":{},"interfaces/User-1.html":{}}}],["this.users[userindex",{"_index":1421,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["this.userservice.adduser(this.newuser",{"_index":579,"title":{},"body":{"components/AdminUserManagementComponent.html":{},"interfaces/User-1.html":{}}}],["this.userservice.deleteuser(index",{"_index":592,"title":{},"body":{"components/AdminUserManagementComponent.html":{},"interfaces/User-1.html":{}}}],["this.userservice.getusers",{"_index":578,"title":{},"body":{"components/AdminUserManagementComponent.html":{},"interfaces/User-1.html":{}}}],["this.userservice.islocalstorageavailable",{"_index":575,"title":{},"body":{"components/AdminUserManagementComponent.html":{},"interfaces/User-1.html":{}}}],["this.userservice.updateuser(this.selectedindex",{"_index":589,"title":{},"body":{"components/AdminUserManagementComponent.html":{},"interfaces/User-1.html":{}}}],["this.usersservice.checkloginstate",{"_index":231,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Contact-1.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"interfaces/User-1.html":{}}}],["this.usersservice.iniciarsesion(email",{"_index":450,"title":{},"body":{"components/AdminLoginComponent.html":{}}}],["this.usersservice.logout",{"_index":475,"title":{},"body":{"components/AdminLogoutComponent.html":{}}}],["throw",{"_index":1028,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["throwerror",{"_index":950,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["throwerror(error",{"_index":993,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["tipo",{"_index":699,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["title",{"_index":603,"title":{},"body":{"components/AppComponent.html":{}}}],["todas",{"_index":749,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["today",{"_index":1506,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["today.getfullyear",{"_index":1510,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["today.getmonth",{"_index":1513,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["todos",{"_index":266,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/CartComponent.html":{},"interfaces/Contact.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["toggleestado",{"_index":381,"title":{},"body":{"components/AdminContactManagementComponent.html":{}}}],["toggleestado(index",{"_index":391,"title":{},"body":{"components/AdminContactManagementComponent.html":{},"interfaces/Contact-1.html":{}}}],["top",{"_index":272,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["total",{"_index":511,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["totalamount",{"_index":762,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{}}}],["totalamount.tofixed(0",{"_index":830,"title":{},"body":{"components/CartComponent.html":{}}}],["transform",{"_index":316,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["transition",{"_index":293,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["true",{"_index":25,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":719,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["tslib",{"_index":1649,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":477,"title":{},"body":{"components/AdminLogoutComponent.html":{},"components/CartComponent.html":{},"components/LogoutComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["tus",{"_index":1088,"title":{},"body":{"components/HomeComponent.html":{}}}],["type",{"_index":66,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":1236,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["un",{"_index":98,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/PasswordRecoveryComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["una",{"_index":662,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["undefined",{"_index":1011,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{}}}],["unen",{"_index":1086,"title":{},"body":{"components/HomeComponent.html":{}}}],["unit",{"_index":1686,"title":{},"body":{"index.html":{}}}],["updatecontact",{"_index":902,"title":{},"body":{"injectables/ContactsService.html":{}}}],["updatecontact(index",{"_index":866,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{}}}],["updatecontacts",{"_index":903,"title":{},"body":{"injectables/ContactsService.html":{}}}],["updatecontacts(name",{"_index":846,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{}}}],["updatecustomer",{"_index":1052,"title":{},"body":{"injectables/CustomersService.html":{}}}],["updatecustomer(updatedcustomer",{"_index":1018,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["updatedcontact",{"_index":865,"title":{},"body":{"interfaces/Contact.html":{},"injectables/ContactsService.html":{}}}],["updatedcustomer",{"_index":1015,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["updatedcustomer.id",{"_index":1021,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["updateditems",{"_index":679,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["updateduser",{"_index":1446,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["updateduser(name",{"_index":1417,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["updateorders(email",{"_index":686,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["updateorderstatus",{"_index":491,"title":{},"body":{"components/AdminOrderMonitoringComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{}}}],["updateorderstatus(orderid",{"_index":755,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["updateuser",{"_index":1569,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuser(index",{"_index":1447,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["url",{"_index":636,"title":{},"body":{"interfaces/Cart.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{}}}],["use",{"_index":1678,"title":{},"body":{"index.html":{}}}],["user",{"_index":340,"title":{"interfaces/User.html":{},"interfaces/User-1.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":595,"title":{},"body":{"components/AdminUserManagementComponent.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["user.email.trim",{"_index":1425,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["user.name",{"_index":594,"title":{},"body":{"components/AdminUserManagementComponent.html":{}}}],["user.password",{"_index":596,"title":{},"body":{"components/AdminUserManagementComponent.html":{}}}],["user.password.trim",{"_index":1427,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["user.profile",{"_index":597,"title":{},"body":{"components/AdminUserManagementComponent.html":{}}}],["userexisting",{"_index":1411,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["userindex",{"_index":1418,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["users",{"_index":554,"title":{"interfaces/Users.html":{}},"body":{"components/AdminUserManagementComponent.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["users.push(user",{"_index":1444,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["users.splice(index",{"_index":1449,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["users[index",{"_index":1448,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["userservice",{"_index":560,"title":{},"body":{"components/AdminUserManagementComponent.html":{},"interfaces/User-1.html":{}}}],["userssaved",{"_index":1395,"title":{},"body":{"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["usersservice",{"_index":56,"title":{"injectables/UsersService.html":{}},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Contact-1.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["usuario",{"_index":85,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/PasswordRecoveryComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["usuarios",{"_index":76,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["utilizando",{"_index":928,"title":{},"body":{"injectables/CryptoService.html":{}}}],["vaciar",{"_index":831,"title":{},"body":{"components/CartComponent.html":{}}}],["vacío",{"_index":828,"title":{},"body":{"components/CartComponent.html":{}}}],["valida",{"_index":994,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["validaciones",{"_index":1484,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["validar",{"_index":996,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/PasswordRecoveryComponent.html":{}}}],["validateemail",{"_index":1053,"title":{},"body":{"injectables/CustomersService.html":{}}}],["validateemail(email",{"_index":997,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["validatelogin",{"_index":1054,"title":{},"body":{"injectables/CustomersService.html":{}}}],["validatelogin(email",{"_index":1005,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["validator",{"_index":1501,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["validators",{"_index":439,"title":{},"body":{"components/AdminLoginComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/ContactComponent.html":{},"components/LoginComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.email",{"_index":443,"title":{},"body":{"components/AdminLoginComponent.html":{},"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.pattern('(?=.*[a",{"_index":1496,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.required",{"_index":442,"title":{},"body":{"components/AdminLoginComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/ContactComponent.html":{},"components/LoginComponent.html":{},"interfaces/Order-1.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["valor",{"_index":1152,"title":{},"body":{"injectables/NavigationService.html":{}}}],["value",{"_index":148,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"injectables/ContactsService.html":{},"injectables/CryptoService.html":{},"injectables/CustomersService.html":{},"injectables/NavigationService.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":174,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{}}}],["variable",{"_index":1598,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1714,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ver",{"_index":819,"title":{},"body":{"components/CartComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["verifica",{"_index":80,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["verificar",{"_index":1159,"title":{},"body":{"injectables/NavigationService.html":{}}}],["version",{"_index":1662,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1689,"title":{},"body":{"index.html":{}}}],["visibility",{"_index":291,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["visible",{"_index":297,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["vista",{"_index":124,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["void",{"_index":92,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"components/AdminContactManagementComponent.html":{},"components/AdminLoginComponent.html":{},"components/AdminLogoutComponent.html":{},"components/AdminOrderMonitoringComponent.html":{},"components/AdminUserManagementComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/Order-1.html":{},"interfaces/OrderDetail.html":{},"interfaces/Orderdetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["volver",{"_index":1273,"title":{},"body":{"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{}}}],["válidas",{"_index":1004,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["webkit",{"_index":320,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["width",{"_index":274,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["window.location.href",{"_index":1166,"title":{},"body":{"injectables/NavigationService.html":{}}}],["xito",{"_index":986,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{}}}],["y",{"_index":86,"title":{},"body":{"components/AdminClientManagementComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Contact.html":{},"components/ContactComponent.html":{},"injectables/ContactsService.html":{},"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/PasswordRecoveryComponent.html":{},"components/ProductCatalogComponent.html":{},"components/ProductDetailAluminioComponent.html":{},"components/ProductDetailCroqueraComponent.html":{},"components/ProductDetailCuadernoComponent.html":{},"components/ProductDetailLibretaComponent.html":{},"components/ProductDetailPoleraComponent.html":{},"components/ProductDetailTablaComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["ya",{"_index":995,"title":{},"body":{"interfaces/Customer.html":{},"injectables/CustomersService.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["year",{"_index":739,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["yyyy",{"_index":734,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Order.html":{},"interfaces/OrderDetail.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["z",{"_index":281,"title":{},"body":{"components/AdminClientManagementComponent.html":{}}}],["z\\\\d]{6,18",{"_index":1499,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["z])(?=.*\\\\d)[a",{"_index":1497,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["za",{"_index":1498,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["zone.js",{"_index":1651,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AdminClientManagementComponent.html":{"url":"components/AdminClientManagementComponent.html","title":"component - AdminClientManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminClientManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin-client-management/admin-client-management.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                CustomersService\n                \n            \n\n\n            \n                selector\n                app-admin-client-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                            FormsModule\n                            HttpClientModule\n                \n            \n\n            \n                styleUrls\n                ./admin-client-management.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./admin-client-management.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clients\n                            \n                            \n                                newClient\n                            \n                            \n                                selectedClient\n                            \n                            \n                                selectedIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkLoginState\n                            \n                            \n                                deleteClient\n                            \n                            \n                                editClient\n                            \n                            \n                                loadClients\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onAddClient\n                            \n                            \n                                onUpdateClient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigationService: NavigationService, platformId: Object, clientService: CustomersService, usersService: UsersService, router: Router, cryptoService: CryptoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin-client-management/admin-client-management.component.ts:28\n                            \n                        \n\n                \n                    \n                            Constructor del componente AdminClientManagementComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de navegación.\n\n\n                                                        \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nIdentificador de la plataforma.\n\n\n                                                        \n                                                \n                                                \n                                                        clientService\n                                                  \n                                                        \n                                                                        CustomersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de clientes.\n\n\n                                                        \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de usuarios.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de enrutamiento.\n\n\n                                                        \n                                                \n                                                \n                                                        cryptoService\n                                                  \n                                                        \n                                                                        CryptoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de encriptación.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkLoginState\n                        \n                    \n                \n            \n            \n                \ncheckLoginState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-client-management/admin-client-management.component.ts:169\n                        \n                    \n\n\n            \n                \n                        Verifica el estado de inicio de sesión del usuario y redirige si no está logueado.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteClient\n                        \n                    \n                \n            \n            \n                \ndeleteClient(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-client-management/admin-client-management.component.ts:157\n                        \n                    \n\n\n            \n                \n                        Maneja la eliminación de un cliente. Elimina el cliente de la lista y guarda los cambios.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl índice del cliente a eliminar.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editClient\n                        \n                    \n                \n            \n            \n                \neditClient(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-client-management/admin-client-management.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Maneja la edición de un cliente. Establece el cliente seleccionado y muestra el modal de edición.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl índice del cliente a editar.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadClients\n                        \n                    \n                \n            \n            \n                \nloadClients()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-client-management/admin-client-management.component.ts:89\n                        \n                    \n\n\n            \n                \n                        Carga la lista de clientes desde el servicio de clientes.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-client-management/admin-client-management.component.ts:56\n                        \n                    \n\n\n            \n                \n                        Hook que se ejecuta después de que la vista ha sido inicializada. Configura la navegación con retardo para los enlaces.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-client-management/admin-client-management.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Hook de inicialización del componente. Carga la lista de clientes y verifica el estado de inicio de sesión.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAddClient\n                        \n                    \n                \n            \n            \n                \nonAddClient()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-client-management/admin-client-management.component.ts:101\n                        \n                    \n\n\n            \n                \n                        Maneja la adición de un nuevo cliente. Asigna un ID único, encripta la contraseña y guarda el cliente.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUpdateClient\n                        \n                    \n                \n            \n            \n                \nonUpdateClient()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-client-management/admin-client-management.component.ts:135\n                        \n                    \n\n\n            \n                \n                        Maneja la actualización de un cliente. Encripta la contraseña actualizada y guarda el cliente.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        clients\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Customer[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin-client-management/admin-client-management.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Customer\n\n                    \n                \n                \n                    \n                        Default value : { id: 0, clientName: '', clientSurname: '', email: '', password: '', birthdate: '', dispatchAddress: '' }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin-client-management/admin-client-management.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Customer\n\n                    \n                \n                \n                    \n                        Default value : { id: 0, clientName: '', clientSurname: '', email: '', password: '', birthdate: '', dispatchAddress: '' }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin-client-management/admin-client-management.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin-client-management/admin-client-management.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NavigationService } from '../../services/navigation.service';\nimport { CustomersService, Customer } from '../../services/customers.service';\nimport { FormsModule } from '@angular/forms';\nimport { UsersService } from '../../services/users.service';\nimport { Router } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CryptoService } from '../../services/crypto.service';\n\ndeclare var bootstrap: any;\n\n@Component({\n  selector: 'app-admin-client-management',\n  standalone: true,\n  imports: [CommonModule, RouterModule, FormsModule, HttpClientModule],\n  templateUrl: './admin-client-management.component.html',\n  styleUrls: ['./admin-client-management.component.scss'],\n  providers: [CustomersService]\n})\nexport class AdminClientManagementComponent implements OnInit, AfterViewInit {\n\n  clients: Customer[] = [];\n  newClient: Customer = { id: 0, clientName: '', clientSurname: '', email: '', password: '', birthdate: '', dispatchAddress: '' };\n  selectedClient: Customer = { id: 0, clientName: '', clientSurname: '', email: '', password: '', birthdate: '', dispatchAddress: '' };\n  selectedIndex: number | null = null;\n\n  /**\n   * @description \n   * Constructor del componente AdminClientManagementComponent.\n   * \n   * @param {NavigationService} navigationService - Servicio de navegación.\n   * @param {Object} platformId - Identificador de la plataforma.\n   * @param {CustomersService} clientService - Servicio de clientes.\n   * @param {UsersService} usersService - Servicio de usuarios.\n   * @param {Router} router - Servicio de enrutamiento.\n   * @param {CryptoService} cryptoService - Servicio de encriptación.\n   */\n  constructor(\n    private navigationService: NavigationService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private clientService: CustomersService,\n    private usersService: UsersService,\n    private router: Router,\n    private cryptoService: CryptoService\n  ) { }\n\n  /**\n   * @description \n   * Hook que se ejecuta después de que la vista ha sido inicializada. Configura la navegación con retardo para los enlaces.\n   * \n   * @return {void}\n   */\n  ngAfterViewInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      const links = document.querySelectorAll('a');\n      links.forEach(link => {\n        link.addEventListener('click', (event: Event) => {\n          event.preventDefault();\n          const target = event.target as HTMLElement;\n          const href = target.getAttribute('href');\n          if (href) {\n            this.navigationService.navigateWithDelay(href);\n          }\n        });\n      });\n    }\n  }\n\n  /**\n   * @description \n   * Hook de inicialización del componente. Carga la lista de clientes y verifica el estado de inicio de sesión.\n   * \n   * @return {void}\n   */\n  ngOnInit(): void {\n    this.loadClients();\n    this.checkLoginState();\n  }\n\n  /**\n   * @description \n   * Carga la lista de clientes desde el servicio de clientes.\n   * \n   * @return {void}\n   */\n  loadClients(): void {\n    this.clientService.getCustomers().subscribe(data => {\n      this.clients = data;\n    });\n  }\n\n  /**\n   * @description \n   * Maneja la adición de un nuevo cliente. Asigna un ID único, encripta la contraseña y guarda el cliente.\n   * \n   * @return {void}\n   */\n  onAddClient(): void {\n    this.newClient.id = this.clients.length > 0 ? Math.max(...this.clients.map((p: any) => p.id)) + 1 : 1;\n    this.newClient.password = this.cryptoService.encrypt(this.newClient.password);\n    this.clients.push(this.newClient);\n    this.clientService.MetodoCliente(this.clients);\n    this.newClient = { id: 0, clientName: '', clientSurname: '', email: '', password: '', birthdate: '', dispatchAddress: '' };\n    this.loadClients();\n    // Close modal\n    const addClientModal = document.getElementById('addClientModal');\n    const modalInstance = bootstrap.Modal.getInstance(addClientModal);\n    modalInstance.hide();\n  }\n\n  /**\n   * @description \n   * Maneja la edición de un cliente. Establece el cliente seleccionado y muestra el modal de edición.\n   * \n   * @param {number} index - El índice del cliente a editar.\n   * @return {void}\n   */\n  editClient(index: number): void {\n    this.selectedClient = { ...this.clients[index] };\n    this.selectedIndex = index;\n    // Show modal\n    const editClientModal = new bootstrap.Modal(document.getElementById('editClientModal'));\n    editClientModal.show();\n  }\n\n  /**\n   * @description \n   * Maneja la actualización de un cliente. Encripta la contraseña actualizada y guarda el cliente.\n   * \n   * @return {void}\n   */\n  onUpdateClient(): void {\n    if (this.selectedIndex !== null) {\n      this.selectedClient.password = this.cryptoService.encrypt(this.selectedClient.password);\n      this.clients[this.selectedIndex] = this.selectedClient;\n      this.clientService.MetodoCliente(this.clients);\n      this.selectedClient = { id: 0, clientName: '', clientSurname: '', email: '', password: '', birthdate: '', dispatchAddress: '' };\n      this.selectedIndex = null;\n      this.loadClients();\n      // Close modal\n      const editClientModal = document.getElementById('editClientModal');\n      const modalInstance = bootstrap.Modal.getInstance(editClientModal);\n      modalInstance.hide();\n    }\n  }\n\n  /**\n   * @description \n   * Maneja la eliminación de un cliente. Elimina el cliente de la lista y guarda los cambios.\n   * \n   * @param {number} index - El índice del cliente a eliminar.\n   * @return {void}\n   */\n  deleteClient(index: number): void {\n    this.clients.splice(index, 1);\n    this.clientService.MetodoCliente(this.clients);\n    this.loadClients();\n  }\n\n  /**\n   * @description \n   * Verifica el estado de inicio de sesión del usuario y redirige si no está logueado.\n   * \n   * @return {void}\n   */\n  checkLoginState(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.usersService.checkLoginState()) {\n        // Redirigir al administrador\n        console.log('Usuario logueado.');\n      } else {\n        // Redirigir al administrador\n        this.router.navigate(['/admin-login']);\n        console.log('Usuario no logueado.');\n      }\n    }\n  }\n}\n    \n\n    \n            \n    \n        \n            \n                \n                    \n                    Puente Mágico\n                \n                    \n                \n                \n                    \n                        \n                            Gestión Usuarios\n                        \n                        \n                            Gestión Clientes\n                        \n                        \n                          Gestión Contactos\n                        \n                        \n                            Monitoreo Pedidos\n                        \n                        \n                            Cerrar Sesión\n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        Gestión de Clientes\n        \n          \n            No hay Clientes para mostrar.\n             0\" class=\"table table-bordered\">\n              \n                \n                  ID\n                  Nombre Cliente\n                  Apellido Cliente\n                  Email\n                  Contraseña\n                  Acciones\n                \n              \n              \n                \n                  {{ client.id }}\n                  {{ client.clientName }}\n                  {{ client.clientSurname }}\n                  {{ client.email }}\n                  {{ client.password }}\n                  \n                    Editar\n                    Eliminar\n                  \n                \n              \n            \n            Agregar Nuevo Cliente\n          \n        \n      \n        \n        \n          \n            \n              \n                Editar Cliente\n                \n              \n              \n                \n                  \n                    ID:\n                    \n                  \n                  \n                    Nombre Cliente:\n                    \n                  \n                  \n                    Apellido Cliente:\n                    \n                  \n                  \n                    Dirección de Correo Electrónico:\n                    \n                  \n                  \n                    Contraseña:\n                    \n                  \n                  Guardar Cambios\n                \n              \n            \n          \n        \n      \n        \n          \n            \n              \n                Agregar Nuevo Cliente\n                \n              \n              \n                \n                  \n                    ID:\n                    \n                  \n                  \n                    Nombre Cliente:\n                    \n                  \n                  \n                    Apellido Cliente:\n                    \n                  \n                  \n                    Dirección de Correo Electrónico:\n                    \n                  \n                  \n                    Contraseña:\n                    \n                  \n                  Agregar Cliente\n                \n              \n            \n          \n        \n      \n      \n    \n    \n        \n            &copy; 2024 Puente Mágico. Reservados todos los derechos.\n        \n    \n    \n    \n    \n        \n    \n\n    \n\n    \n                \n                    ./admin-client-management.component.scss\n                \n                #loading-screen {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(255, 255, 255, 0.8);\n    z-index: 1000;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    opacity: 0;\n    visibility: hidden;\n    transition: opacity 0.3s ease;\n}\n\n#loading-screen.active {\n    opacity: 1;\n    visibility: visible;\n}\n\n.loader {\n    border: 16px solid #f3f3f3;\n    border-radius: 50%;\n    border-top: 16px solid var(--primary-color);\n    border-bottom: 16px solid var(--secondary-color);\n    width: 120px;\n    height: 120px;\n    animation: spin 2s linear infinite;\n}\n\n@keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n}\n\n.hidetext { -webkit-text-security: disc; /* Default */ }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Puente Mágico                                                                                                                                            Gestión Usuarios                                                                            Gestión Clientes                                                                          Gestión Contactos                                                                            Monitoreo Pedidos                                                                            Cerrar Sesión                                                                                                    Gestión de Clientes                              No hay Clientes para mostrar.             0\" class=\"table table-bordered\">                                                ID                  Nombre Cliente                  Apellido Cliente                  Email                  Contraseña                  Acciones                                                                              {{ client.id }}                  {{ client.clientName }}                  {{ client.clientSurname }}                  {{ client.email }}                  {{ client.password }}                                      Editar                    Eliminar                                                                        Agregar Nuevo Cliente                                                                                            Editar Cliente                                                                                                  ID:                                                                            Nombre Cliente:                                                                            Apellido Cliente:                                                                            Dirección de Correo Electrónico:                                                                            Contraseña:                                                        Guardar Cambios                                                                                                                              Agregar Nuevo Cliente                                                                                                  ID:                                                                            Nombre Cliente:                                                                            Apellido Cliente:                                                                            Dirección de Correo Electrónico:                                                                            Contraseña:                                                        Agregar Cliente                                                                                                    © 2024 Puente Mágico. Reservados todos los derechos.                                    '\n    var COMPONENTS = [{'name': 'AdminClientManagementComponent', 'selector': 'app-admin-client-management'},{'name': 'AdminContactManagementComponent', 'selector': 'app-admin-contact-management'},{'name': 'AdminLoginComponent', 'selector': 'app-admin-login'},{'name': 'AdminLogoutComponent', 'selector': 'app-admin-logout'},{'name': 'AdminOrderMonitoringComponent', 'selector': 'app-admin-order-monitoring'},{'name': 'AdminUserManagementComponent', 'selector': 'app-admin-user-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'ProductCatalogComponent', 'selector': 'app-product-catalog'},{'name': 'ProductDetailAluminioComponent', 'selector': 'app-product-detail-aluminio'},{'name': 'ProductDetailCroqueraComponent', 'selector': 'app-product-detail-croquera'},{'name': 'ProductDetailCuadernoComponent', 'selector': 'app-product-detail-cuaderno'},{'name': 'ProductDetailLibretaComponent', 'selector': 'app-product-detail-libreta'},{'name': 'ProductDetailPoleraComponent', 'selector': 'app-product-detail-polera'},{'name': 'ProductDetailTablaComponent', 'selector': 'app-product-detail-tabla'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminClientManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminContactManagementComponent.html":{"url":"components/AdminContactManagementComponent.html","title":"component - AdminContactManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminContactManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin-contact-management/admin-contact-management.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-contact-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./admin-contact-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./admin-contact-management.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contacts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkLoginState\n                            \n                            \n                                deleteContact\n                            \n                            \n                                loadContacts\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleEstado\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigationService: NavigationService, platformId: Object, contactService: ContactsService, usersService: UsersService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin-contact-management/admin-contact-management.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        contactService\n                                                  \n                                                        \n                                                                        ContactsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkLoginState\n                        \n                    \n                \n            \n            \n                \ncheckLoginState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-contact-management/admin-contact-management.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteContact\n                        \n                    \n                \n            \n            \n                \ndeleteContact(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-contact-management/admin-contact-management.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadContacts\n                        \n                    \n                \n            \n            \n                \nloadContacts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-contact-management/admin-contact-management.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-contact-management/admin-contact-management.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-contact-management/admin-contact-management.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleEstado\n                        \n                    \n                \n            \n            \n                \ntoggleEstado(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-contact-management/admin-contact-management.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contacts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Contact[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin-contact-management/admin-contact-management.component.ts:56\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NavigationService } from '../../services/navigation.service';\nimport { ContactsService } from '../../services/contacts.service';\ndeclare var bootstrap: any;\nimport { FormsModule } from '@angular/forms';\nimport { UsersService } from '../../services/users.service';\nimport { Router } from '@angular/router';\n\ninterface Contact {\n  name: string;\n  email: string;\n  phone: string;\n  subject: string;\n  message: string;\n  fecha: Date;\n  estado: string;\n  id: number;\n}\n\n@Component({\n  selector: 'app-admin-contact-management',\n  standalone: true,\n  imports: [CommonModule, RouterModule, FormsModule],\n  templateUrl: './admin-contact-management.component.html',\n  styleUrl: './admin-contact-management.component.scss'\n})\nexport class AdminContactManagementComponent implements OnInit, AfterViewInit {\n\n  constructor(\n    private navigationService: NavigationService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n\t  private contactService: ContactsService,\n    private usersService: UsersService,\n    private router: Router\n  ) { }\n\n  ngAfterViewInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      const links = document.querySelectorAll('a');\n      links.forEach(link => {\n        link.addEventListener('click', (event: Event) => {\n          event.preventDefault();\n          const target = event.target as HTMLElement;\n          const href = target.getAttribute('href');\n          if (href) {\n            this.navigationService.navigateWithDelay(href);\n          }\n        });\n      });\n    }\n  }\n  \n  contacts: Contact[] = [];\n\n  ngOnInit(): void {\n    if (this.contactService.isLocalStorageAvailable()) {\n      this.loadContacts();\n    }\n    this.checkLoginState();\n  }\n\n  loadContacts(): void {\n    this.contacts = this.contactService.getContacts();\n  }\n\n  toggleEstado(index: number): void {\n    const contact = this.contacts[index];\n    contact.estado = contact.estado === 'Nuevo' ? 'Procesado' : 'Nuevo';\n    this.contactService.updateContact(index, contact);\n    this.loadContacts();\n  }\n\n  deleteContact(index: number): void {\n    this.contactService.deleteContact(index);\n    this.loadContacts();\n  }\n\n  checkLoginState(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.usersService.checkLoginState()) {\n        // Redirigir al administrador\n        //this.router.navigate(['/admin-user-management']);\n        console.log('Usuario logueado.');\n      } else {\n        // Redirigir al administrador\n        this.router.navigate(['/admin-login']);\n        console.log('Usuario no logueado.');\n      }\n    }\n  }\n}\n    \n\n    \n            \n    \n        \n            \n                \n                    \n                    Puente Mágico\n                \n                    \n                \n                \n                    \n                        \n                            Gestión Usuarios\n                        \n                        \n                            Gestión Clientes\n                        \n                        \n                            Gestión Contactos\n                        \n                        \n                            Monitoreo Pedidos\n                        \n                        \n                            Cerrar Sesión\n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        Gestión de Contactos\n        \n        \n            No hay Contactos para mostrar.\n             0\" class=\"table table-bordered\">\n            \n                \n                ID\n                Email\n                Nombre\n                Teléfono\n                Asunto\n                Mensaje\n                Estado\n                Fecha\n                Acciones\n                \n            \n            \n                \n                {{ contact.id }}\n                {{ contact.email }}\n                {{ contact.name }}\n                {{ contact.phone }}\n                {{ contact.subject }}\n                {{ contact.message }}\n                {{ contact.estado }}\n                {{ contact.fecha }}\n                \n                    Cambiar Estado\n                    Eliminar\n                \n                \n            \n            \n        \n        \n    \n\n    \n    \n        \n            &copy; 2024 Puente Mágico. Reservados todos los derechos.\n        \n    \n    \n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Puente Mágico                                                                                                                                            Gestión Usuarios                                                                            Gestión Clientes                                                                            Gestión Contactos                                                                            Monitoreo Pedidos                                                                            Cerrar Sesión                                                                                                    Gestión de Contactos                            No hay Contactos para mostrar.             0\" class=\"table table-bordered\">                                            ID                Email                Nombre                Teléfono                Asunto                Mensaje                Estado                Fecha                Acciones                                                                        {{ contact.id }}                {{ contact.email }}                {{ contact.name }}                {{ contact.phone }}                {{ contact.subject }}                {{ contact.message }}                {{ contact.estado }}                {{ contact.fecha }}                                    Cambiar Estado                    Eliminar                                                                                                        © 2024 Puente Mágico. Reservados todos los derechos.                                    '\n    var COMPONENTS = [{'name': 'AdminClientManagementComponent', 'selector': 'app-admin-client-management'},{'name': 'AdminContactManagementComponent', 'selector': 'app-admin-contact-management'},{'name': 'AdminLoginComponent', 'selector': 'app-admin-login'},{'name': 'AdminLogoutComponent', 'selector': 'app-admin-logout'},{'name': 'AdminOrderMonitoringComponent', 'selector': 'app-admin-order-monitoring'},{'name': 'AdminUserManagementComponent', 'selector': 'app-admin-user-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'ProductCatalogComponent', 'selector': 'app-product-catalog'},{'name': 'ProductDetailAluminioComponent', 'selector': 'app-product-detail-aluminio'},{'name': 'ProductDetailCroqueraComponent', 'selector': 'app-product-detail-croquera'},{'name': 'ProductDetailCuadernoComponent', 'selector': 'app-product-detail-cuaderno'},{'name': 'ProductDetailLibretaComponent', 'selector': 'app-product-detail-libreta'},{'name': 'ProductDetailPoleraComponent', 'selector': 'app-product-detail-polera'},{'name': 'ProductDetailTablaComponent', 'selector': 'app-product-detail-tabla'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminContactManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminLoginComponent.html":{"url":"components/AdminLoginComponent.html","title":"component - AdminLoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminLoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin-login/admin-login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./admin-login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./admin-login.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adminLoginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkLoginState\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigationService: NavigationService, platformId: Object, fb: FormBuilder, usersService: UsersService, renderer: Renderer2, el: ElementRef, cryptoService: CryptoService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin-login/admin-login.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cryptoService\n                                                  \n                                                        \n                                                                        CryptoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkLoginState\n                        \n                    \n                \n            \n            \n                \ncheckLoginState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-login/admin-login.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-login/admin-login.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-login/admin-login.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-login/admin-login.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        adminLoginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin-login/admin-login.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NavigationService } from '../../services/navigation.service';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { UsersService } from '../../services/users.service';\nimport { Renderer2, ElementRef } from '@angular/core';\nimport { CryptoService } from '../../services/crypto.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-login',\n  standalone: true,\n  imports: [CommonModule, RouterModule, ReactiveFormsModule],\n  templateUrl: './admin-login.component.html',\n  styleUrl: './admin-login.component.scss'\n})\nexport class AdminLoginComponent implements OnInit, AfterViewInit {\n  adminLoginForm: FormGroup;\n\n  constructor(\n    private navigationService: NavigationService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n\t  private fb: FormBuilder,\n    private usersService: UsersService,\n    private renderer: Renderer2,\n    private el: ElementRef,\n    private cryptoService: CryptoService,\n    private router: Router) { \n      this.adminLoginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]]});\n\t}\n\n  ngOnInit(): void {\n    this.checkLoginState();\n  }\n\n  ngAfterViewInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      const links = document.querySelectorAll('a');\n      links.forEach(link => {\n        link.addEventListener('click', (event: Event) => {\n          event.preventDefault();\n          const target = event.target as HTMLElement;\n          const href = target.getAttribute('href');\n          if (href) {\n            this.navigationService.navigateWithDelay(href);\n          }\n        });\n      });\n    }\n  }\n\n  onSubmit() {\n    if (this.adminLoginForm.valid) {\n      const email = this.adminLoginForm.value.email;\n      const password = this.adminLoginForm.value.password;\n\n      //localStorage.setItem('user', JSON.stringify(userData));\n      const loginExitoso = this.usersService.iniciarSesion(email, password);\n      if (loginExitoso) {\n        console.log('Inicio de sesión exitoso:', { email });\n        alert('Inicio de sesión exitoso!');\n        // Redirigir al administrador\n        this.router.navigate(['/admin-user-management']);\n      } else {\n        console.log('Error en el inicio de sesión.');\n      }\n    } else {\n      console.log('Formulario invalido');\n    }\n  }\n\n  checkLoginState(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.usersService.checkLoginState()) {\n        // Redirigir al perfil del usuario\n        this.router.navigate(['/admin-user-management']);\n      } else {\n        console.log('Administrador no logueado.');\n      }\n    }\n  }\n}\n\n    \n\n    \n            \n    \n        \n            \n                \n                    \n                    Puente Mágico\n                \n                    \n                \n                \n                    \n\t\t\t\t\t\t\n\t\t\t\t\t\t\tLogin Administrador\n\t\t\t\t\t\t\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            \n                Login Administrador\n                \n                    \n                        Correo Electrónico:\n                        \n                        \n                            Correo Electrónico es obligatorio.\n                            Formato de correo electrónico incorrecto.\n                        \n                    \n                    \n                        Contraseña:\n                        \n                        \n                            Contraseña es obligatoria.\n                        \n                    \n                    \n                    Iniciar Sesión\n                \n            \n        \n    \n\n    \n    \n        \n            &copy; 2024 Puente Mágico. Reservados todos los derechos.\n        \n    \n\n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Puente Mágico                                                                                        \t\t\t\t\t\t\t\t\t\t\t\t\tLogin Administrador\t\t\t\t\t\t                                                                                                        Login Administrador                                                            Correo Electrónico:                                                                            Correo Electrónico es obligatorio.                            Formato de correo electrónico incorrecto.                                                                                        Contraseña:                                                                            Contraseña es obligatoria.                                                                                    Iniciar Sesión                                                                    © 2024 Puente Mágico. Reservados todos los derechos.                                '\n    var COMPONENTS = [{'name': 'AdminClientManagementComponent', 'selector': 'app-admin-client-management'},{'name': 'AdminContactManagementComponent', 'selector': 'app-admin-contact-management'},{'name': 'AdminLoginComponent', 'selector': 'app-admin-login'},{'name': 'AdminLogoutComponent', 'selector': 'app-admin-logout'},{'name': 'AdminOrderMonitoringComponent', 'selector': 'app-admin-order-monitoring'},{'name': 'AdminUserManagementComponent', 'selector': 'app-admin-user-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'ProductCatalogComponent', 'selector': 'app-product-catalog'},{'name': 'ProductDetailAluminioComponent', 'selector': 'app-product-detail-aluminio'},{'name': 'ProductDetailCroqueraComponent', 'selector': 'app-product-detail-croquera'},{'name': 'ProductDetailCuadernoComponent', 'selector': 'app-product-detail-cuaderno'},{'name': 'ProductDetailLibretaComponent', 'selector': 'app-product-detail-libreta'},{'name': 'ProductDetailPoleraComponent', 'selector': 'app-product-detail-polera'},{'name': 'ProductDetailTablaComponent', 'selector': 'app-product-detail-tabla'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminLoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminLogoutComponent.html":{"url":"components/AdminLogoutComponent.html","title":"component - AdminLogoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminLogoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin-logout/admin-logout.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-logout\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./admin-logout.component.html\n            \n\n\n\n            \n                styleUrl\n                ./admin-logout.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkLoginState\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigationService: NavigationService, platformId: Object, usersService: UsersService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin-logout/admin-logout.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkLoginState\n                        \n                    \n                \n            \n            \n                \ncheckLoginState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-logout/admin-logout.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-logout/admin-logout.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-logout/admin-logout.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NavigationService } from '../../services/navigation.service';\nimport { UsersService } from '../../services/users.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-logout',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  templateUrl: './admin-logout.component.html',\n  styleUrl: './admin-logout.component.scss'\n})\nexport class AdminLogoutComponent implements OnInit, AfterViewInit {\n\n  constructor(\n    private navigationService: NavigationService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private usersService: UsersService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.checkLoginState();\n  }\n\n  ngAfterViewInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      const links = document.querySelectorAll('a');\n      links.forEach(link => {\n        link.addEventListener('click', (event: Event) => {\n          event.preventDefault();\n          const target = event.target as HTMLElement;\n          const href = target.getAttribute('href');\n          if (href) {\n            this.navigationService.navigateWithDelay(href);\n          }\n        });\n      });\n    }\n    this.usersService.logout();\n    this.checkLoginState();\n  }\n\n  checkLoginState(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.usersService.checkLoginState()) {\n        // Redirigir al administrador\n        //this.router.navigate(['/admin-user-management']);\n        console.log('Usuario logueado.');\n      } else {\n        // Redirigir al administrador\n        //this.router.navigate(['/admin-login']);\n        console.log('Usuario no logueado.');\n      }\n    }\n  }\n}\n\n    \n\n    \n            \n    \n        \n            \n                \n                    \n                    Puente Mágico\n                \n                    \n                \n                \n                    \n\t\t\t\t\t\t\n\t\t\t\t\t\t\tLogin Administrador\n\t\t\t\t\t\t\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            \n                Cerrar sesión administrador\n                Has cerrado tu sesión de administrador correctamente.\n                Iniciar Sesión\n            \n        \n    \n\n    \n    \n        \n            &copy; 2024 Puente Mágico. Reservados todos los derechos.\n        \n    \n    \n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Puente Mágico                                                                                        \t\t\t\t\t\t\t\t\t\t\t\t\tLogin Administrador\t\t\t\t\t\t                                                                                                        Cerrar sesión administrador                Has cerrado tu sesión de administrador correctamente.                Iniciar Sesión                                                    © 2024 Puente Mágico. Reservados todos los derechos.                                    '\n    var COMPONENTS = [{'name': 'AdminClientManagementComponent', 'selector': 'app-admin-client-management'},{'name': 'AdminContactManagementComponent', 'selector': 'app-admin-contact-management'},{'name': 'AdminLoginComponent', 'selector': 'app-admin-login'},{'name': 'AdminLogoutComponent', 'selector': 'app-admin-logout'},{'name': 'AdminOrderMonitoringComponent', 'selector': 'app-admin-order-monitoring'},{'name': 'AdminUserManagementComponent', 'selector': 'app-admin-user-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'ProductCatalogComponent', 'selector': 'app-product-catalog'},{'name': 'ProductDetailAluminioComponent', 'selector': 'app-product-detail-aluminio'},{'name': 'ProductDetailCroqueraComponent', 'selector': 'app-product-detail-croquera'},{'name': 'ProductDetailCuadernoComponent', 'selector': 'app-product-detail-cuaderno'},{'name': 'ProductDetailLibretaComponent', 'selector': 'app-product-detail-libreta'},{'name': 'ProductDetailPoleraComponent', 'selector': 'app-product-detail-polera'},{'name': 'ProductDetailTablaComponent', 'selector': 'app-product-detail-tabla'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminLogoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminOrderMonitoringComponent.html":{"url":"components/AdminOrderMonitoringComponent.html","title":"component - AdminOrderMonitoringComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminOrderMonitoringComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin-order-monitoring/admin-order-monitoring.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-order-monitoring\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./admin-order-monitoring.component.html\n            \n\n\n\n            \n                styleUrl\n                ./admin-order-monitoring.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editOrderForm\n                            \n                            \n                                orders\n                            \n                            \n                                selectedOrderDetails\n                            \n                            \n                                selectedOrderId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkLoginState\n                            \n                            \n                                getOrderProducts\n                            \n                            \n                                getOrderQuantity\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectOrder\n                            \n                            \n                                updateOrderStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigationService: NavigationService, platformId: Object, usersService: UsersService, router: Router, orderService: OrdersService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin-order-monitoring/admin-order-monitoring.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        orderService\n                                                  \n                                                        \n                                                                        OrdersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkLoginState\n                        \n                    \n                \n            \n            \n                \ncheckLoginState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-order-monitoring/admin-order-monitoring.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrderProducts\n                        \n                    \n                \n            \n            \n                \ngetOrderProducts(orderId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-order-monitoring/admin-order-monitoring.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrderQuantity\n                        \n                    \n                \n            \n            \n                \ngetOrderQuantity(orderId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-order-monitoring/admin-order-monitoring.component.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-order-monitoring/admin-order-monitoring.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-order-monitoring/admin-order-monitoring.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectOrder\n                        \n                    \n                \n            \n            \n                \nselectOrder(orderId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-order-monitoring/admin-order-monitoring.component.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOrderStatus\n                        \n                    \n                \n            \n            \n                \nupdateOrderStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-order-monitoring/admin-order-monitoring.component.ts:116\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editOrderForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin-order-monitoring/admin-order-monitoring.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Order[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin-order-monitoring/admin-order-monitoring.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedOrderDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Orderdetail[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin-order-monitoring/admin-order-monitoring.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedOrderId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin-order-monitoring/admin-order-monitoring.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NavigationService } from '../../services/navigation.service';\nimport { UsersService } from '../../services/users.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { OrdersService } from '../../services/orders.service';\n\ninterface Order {\n  email: string;\n  id: number;\n  total: number;\n  fecha: Date;\n  estado: string;\n}\n\ninterface Orderdetail {\n  id: number;\n  product: string;\n  image: string;\n  price: number;\n  quantity: number;\n  total: number;\n}\n\n@Component({\n  selector: 'app-admin-order-monitoring',\n  standalone: true,\n  imports: [CommonModule, RouterModule, ReactiveFormsModule],\n  templateUrl: './admin-order-monitoring.component.html',\n  styleUrl: './admin-order-monitoring.component.scss'\n})\nexport class AdminOrderMonitoringComponent implements OnInit, AfterViewInit {\n  orders: Order[] = [];\n  selectedOrderDetails: Orderdetail[] = [];\n  selectedOrderId: number | null = null;\n  editOrderForm: FormGroup;\n  \n  constructor(\n    private navigationService: NavigationService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private usersService: UsersService,\n    private router: Router,\n    private orderService: OrdersService,\n    private fb: FormBuilder\n  ) {\n    this.editOrderForm = this.fb.group({\n      clientName: ['', Validators.required],\n      productName: ['', Validators.required],\n      quantity: ['', Validators.required],\n      status: ['', Validators.required]\n    });\n  }\n\n  ngAfterViewInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      const links = document.querySelectorAll('a');\n      links.forEach(link => {\n        link.addEventListener('click', (event: Event) => {\n          event.preventDefault();\n          const target = event.target as HTMLElement;\n          const href = target.getAttribute('href');\n          if (href) {\n            this.navigationService.navigateWithDelay(href);\n          }\n        });\n      });\n    }\n  }\n\n  ngOnInit(): void {\n    this.checkLoginState();\n\tthis.orders = this.orderService.getOrders();\n  }\n\n  checkLoginState(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.usersService.checkLoginState()) {\n        // Redirigir al administrador\n        //this.router.navigate(['/admin-user-management']);\n        console.log('Usuario logueado.');\n      } else {\n        // Redirigir al administrador\n        this.router.navigate(['/admin-login']);\n        console.log('Usuario no logueado.');\n      }\n    }\n  }\n\n  selectOrder(orderId: number): void {\n    this.selectedOrderId = orderId;\n    this.selectedOrderDetails = this.orderService.getOrderDetails(orderId);\n    const order = this.orders.find(o => o.id === orderId);\n    if (order) {\n      this.editOrderForm.patchValue({\n        clientName: order.email,\n        productName: this.selectedOrderDetails.map(detail => detail.product).join(', '),\n        quantity: this.selectedOrderDetails.reduce((acc, detail) => acc + detail.quantity, 0),\n        status: order.estado\n      });\n    }\n  }\n\n  getOrderProducts(orderId: number): string {\n    const products = this.orderService.getOrderDetails(orderId).map(detail => detail.product);\n    return products.join(', ');\n  }\n\n  getOrderQuantity(orderId: number): number {\n    const quantity = this.orderService.getOrderDetails(orderId).reduce((acc, detail) => acc + detail.quantity, 0);\n    return quantity;\n  }\n\n  updateOrderStatus(): void {\n    if (this.selectedOrderId !== null) {\n      const newStatus = this.editOrderForm.value.status;\n      this.orderService.updateOrderStatus(this.selectedOrderId, newStatus);\n      this.orders = this.orderService.getOrders();\n    }\n  }\n}\n    \n\n    \n        \n\n    \n      \n        \n          \n          Puente Mágico\n        \n        \n          \n        \n        \n          \n            \n              Gestión Usuarios\n            \n            \n              Gestión Clientes\n            \n            \n              Gestión Contactos\n            \n            \n              Monitoreo Pedidos\n            \n            \n              Cerrar Sesión\n            \n          \n        \n      \n    \n  \n  \n  \n    Monitoreo Pedidos\n    \n      \n        \n          \n            \n              ID Pedido\n              Email Cliente\n              Producto\n              Cantidad\n              Estado\n              Acciones\n            \n          \n          \n            \n              {{ order.id }}\n              {{ order.email }}\n              {{ getOrderProducts(order.id) }}\n              {{ getOrderQuantity(order.id) }}\n              {{ order.estado }}\n              \n                Editar\n              \n            \n          \n        \n        Agregar Nueva Orden -->\n      \n    \n  \n  \n  \n    \n      \n        \n          Editar Pedido\n          \n        \n        \n          \n            \n              Nombre Cliente:\n              \n            \n            \n              Nombre Producto:\n              \n            \n            \n              Cantidad:\n              \n            \n            \n              Estado:\n              \n                Pendiente\n                Enviado\n                Entregado\n              \n            \n            Guardar Cambios\n          \n        \n      \n    \n  \n\n    \n    \n        \n            &copy; 2024 Puente Mágico. Reservados todos los derechos.\n        \n    \n    \n    \n    \n        \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      Puente Mágico                                                                              Gestión Usuarios                                      Gestión Clientes                                      Gestión Contactos                                      Monitoreo Pedidos                                      Cerrar Sesión                                                  Monitoreo Pedidos                                                      ID Pedido              Email Cliente              Producto              Cantidad              Estado              Acciones                                                          {{ order.id }}              {{ order.email }}              {{ getOrderProducts(order.id) }}              {{ getOrderQuantity(order.id) }}              {{ order.estado }}                              Editar                                                    Agregar Nueva Orden -->                                            Editar Pedido                                                              Nombre Cliente:                                                    Nombre Producto:                                                    Cantidad:                                                    Estado:                              Pendiente                Enviado                Entregado                                      Guardar Cambios                                                          © 2024 Puente Mágico. Reservados todos los derechos.                                      '\n    var COMPONENTS = [{'name': 'AdminClientManagementComponent', 'selector': 'app-admin-client-management'},{'name': 'AdminContactManagementComponent', 'selector': 'app-admin-contact-management'},{'name': 'AdminLoginComponent', 'selector': 'app-admin-login'},{'name': 'AdminLogoutComponent', 'selector': 'app-admin-logout'},{'name': 'AdminOrderMonitoringComponent', 'selector': 'app-admin-order-monitoring'},{'name': 'AdminUserManagementComponent', 'selector': 'app-admin-user-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'ProductCatalogComponent', 'selector': 'app-product-catalog'},{'name': 'ProductDetailAluminioComponent', 'selector': 'app-product-detail-aluminio'},{'name': 'ProductDetailCroqueraComponent', 'selector': 'app-product-detail-croquera'},{'name': 'ProductDetailCuadernoComponent', 'selector': 'app-product-detail-cuaderno'},{'name': 'ProductDetailLibretaComponent', 'selector': 'app-product-detail-libreta'},{'name': 'ProductDetailPoleraComponent', 'selector': 'app-product-detail-polera'},{'name': 'ProductDetailTablaComponent', 'selector': 'app-product-detail-tabla'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminOrderMonitoringComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminUserManagementComponent.html":{"url":"components/AdminUserManagementComponent.html","title":"component - AdminUserManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminUserManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin-user-management/admin-user-management.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-user-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./admin-user-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./admin-user-management.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newUser\n                            \n                            \n                                selectedIndex\n                            \n                            \n                                selectedUser\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkLoginState\n                            \n                            \n                                deleteUser\n                            \n                            \n                                editUser\n                            \n                            \n                                loadUsers\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onAddUser\n                            \n                            \n                                onUpdateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigationService: NavigationService, platformId: Object, userService: UsersService, usersService: UsersService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin-user-management/admin-user-management.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkLoginState\n                        \n                    \n                \n            \n            \n                \ncheckLoginState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-user-management/admin-user-management.component.ts:103\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-user-management/admin-user-management.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUser\n                        \n                    \n                \n            \n            \n                \neditUser(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-user-management/admin-user-management.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUsers\n                        \n                    \n                \n            \n            \n                \nloadUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-user-management/admin-user-management.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-user-management/admin-user-management.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-user-management/admin-user-management.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAddUser\n                        \n                    \n                \n            \n            \n                \nonAddUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-user-management/admin-user-management.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUpdateUser\n                        \n                    \n                \n            \n            \n                \nonUpdateUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-user-management/admin-user-management.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        newUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : { name: '', email: '', password: '', profile: '' }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin-user-management/admin-user-management.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin-user-management/admin-user-management.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : { name: '', email: '', password: '', profile: '' }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin-user-management/admin-user-management.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin-user-management/admin-user-management.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NavigationService } from '../../services/navigation.service';\nimport { UsersService } from '../../services/users.service';\ndeclare var bootstrap: any;\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\n\ninterface User {\n  name: string;\n  email: string;\n  password: string;\n  profile: string;\n}\n\n@Component({\n  selector: 'app-admin-user-management',\n  standalone: true,\n  imports: [CommonModule, RouterModule, FormsModule],\n  templateUrl: './admin-user-management.component.html',\n  styleUrl: './admin-user-management.component.scss'\n})\nexport class AdminUserManagementComponent implements OnInit, AfterViewInit {\n\n  constructor(\n    private navigationService: NavigationService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private userService: UsersService,\n    private usersService: UsersService,\n    private router: Router\n  ) { }\n\n  ngAfterViewInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      const links = document.querySelectorAll('a');\n      links.forEach(link => {\n        link.addEventListener('click', (event: Event) => {\n          event.preventDefault();\n          const target = event.target as HTMLElement;\n          const href = target.getAttribute('href');\n          if (href) {\n            this.navigationService.navigateWithDelay(href);\n          }\n        });\n      });\n    }\n  }\n\n  users: User[] = [];\n  newUser: User = { name: '', email: '', password: '', profile: '' };\n  selectedUser: User = { name: '', email: '', password: '', profile: '' };\n  selectedIndex: number | null = null;\n\n  ngOnInit(): void {\n    if (this.userService.isLocalStorageAvailable()) {\n      this.loadUsers();\n    }\n    this.checkLoginState();\n  }\n\n  loadUsers(): void {\n    this.users = this.userService.getUsers();\n  }\n\n  onAddUser(): void {\n    this.userService.addUser(this.newUser);\n    this.newUser = { name: '', email: '', password: '', profile: '' };\n    this.loadUsers();\n    // Close modal\n    const addUserModal = document.getElementById('addUserModal');\n    const modalInstance = bootstrap.Modal.getInstance(addUserModal);\n    modalInstance.hide();\n  }\n\n  editUser(index: number): void {\n    this.selectedUser = { ...this.users[index] };\n    this.selectedIndex = index;\n    // Show modal\n    const editUserModal = new bootstrap.Modal(document.getElementById('editUserModal'));\n    editUserModal.show();\n  }\n\n  onUpdateUser(): void {\n    if (this.selectedIndex !== null) {\n      this.userService.updateUser(this.selectedIndex, this.selectedUser);\n      this.selectedUser = { name: '', email: '', password: '', profile: '' };\n      this.selectedIndex = null;\n      this.loadUsers();\n      // Close modal\n      const editUserModal = document.getElementById('editUserModal');\n      const modalInstance = bootstrap.Modal.getInstance(editUserModal);\n      modalInstance.hide();\n    }\n  }\n\n  deleteUser(index: number): void {\n    this.userService.deleteUser(index);\n    this.loadUsers();\n  }\n\n  checkLoginState(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.usersService.checkLoginState()) {\n        // Redirigir al administrador\n        //this.router.navigate(['/admin-user-management']);\n        console.log('Usuario logueado.');\n      } else {\n        // Redirigir al administrador\n        this.router.navigate(['/admin-login']);\n        console.log('Usuario no logueado.');\n      }\n    }\n  }\n}\n    \n\n    \n            \n    \n        \n            \n                \n                    \n                    Puente Mágico\n                \n                    \n                \n                \n                    \n                        \n                            Gestión Usuarios\n                        \n                        \n                            Gestión Clientes\n                        \n                        \n                          Gestión Contactos\n                        \n                        \n                            Monitoreo Pedidos\n                        \n                        \n                            Cerrar Sesión\n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        Gestión Usuarios\n        \n          \n            No hay Usuarios para mostrar.\n             0\" class=\"table table-bordered\" id=\"userTable\">\n              \n                \n                  Nombre Usuario\n                  Email\n                  Contraseña\n                  Perfil\n                  Acciones\n                \n              \n              \n                \n                  {{ user.name }}\n                  {{ user.email }}\n                  {{ user.password }}\n                  {{ user.profile }}\n                  \n                    Editar\n                    Eliminar\n                  \n                \n              \n            \n            Agregar Nuevo Usuario\n          \n        \n      \n        \n        \n          \n            \n              \n                Agregar Nuevo Usuario\n                \n              \n              \n                \n                  \n                    Nombre Usuario:\n                    \n                  \n                  \n                    Dirección de Correo Electrónico:\n                    \n                  \n                  \n                    Contraseña:\n                    \n                  \n                  \n                    Perfil Usuario:\n                    \n                  \n                  Agregar Usuario\n                \n              \n            \n          \n        \n      \n        \n          \n            \n              \n                Editar Usuario\n                \n              \n              \n                \n                  \n                    Nombre Usuario:\n                    \n                  \n                  \n                    Dirección de Correo Electrónico:\n                    \n                  \n                  \n                    Contraseña:\n                    \n                  \n                  \n                    Perfil Usuario:\n                    \n                  \n                  Guardar Cambios\n                \n              \n            \n          \n        \n      \n    \n    \n    \n        \n            &copy; 2024 Puente Mágico. Reservados todos los derechos.\n        \n    \n    \n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Puente Mágico                                                                                                                                            Gestión Usuarios                                                                            Gestión Clientes                                                                          Gestión Contactos                                                                            Monitoreo Pedidos                                                                            Cerrar Sesión                                                                                                    Gestión Usuarios                              No hay Usuarios para mostrar.             0\" class=\"table table-bordered\" id=\"userTable\">                                                Nombre Usuario                  Email                  Contraseña                  Perfil                  Acciones                                                                              {{ user.name }}                  {{ user.email }}                  {{ user.password }}                  {{ user.profile }}                                      Editar                    Eliminar                                                                        Agregar Nuevo Usuario                                                                                            Agregar Nuevo Usuario                                                                                                  Nombre Usuario:                                                                            Dirección de Correo Electrónico:                                                                            Contraseña:                                                                            Perfil Usuario:                                                        Agregar Usuario                                                                                                                              Editar Usuario                                                                                                  Nombre Usuario:                                                                            Dirección de Correo Electrónico:                                                                            Contraseña:                                                                            Perfil Usuario:                                                        Guardar Cambios                                                                                                  © 2024 Puente Mágico. Reservados todos los derechos.                                    '\n    var COMPONENTS = [{'name': 'AdminClientManagementComponent', 'selector': 'app-admin-client-management'},{'name': 'AdminContactManagementComponent', 'selector': 'app-admin-contact-management'},{'name': 'AdminLoginComponent', 'selector': 'app-admin-login'},{'name': 'AdminLogoutComponent', 'selector': 'app-admin-logout'},{'name': 'AdminOrderMonitoringComponent', 'selector': 'app-admin-order-monitoring'},{'name': 'AdminUserManagementComponent', 'selector': 'app-admin-user-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'ProductCatalogComponent', 'selector': 'app-product-catalog'},{'name': 'ProductDetailAluminioComponent', 'selector': 'app-product-detail-aluminio'},{'name': 'ProductDetailCroqueraComponent', 'selector': 'app-product-detail-croquera'},{'name': 'ProductDetailCuadernoComponent', 'selector': 'app-product-detail-cuaderno'},{'name': 'ProductDetailLibretaComponent', 'selector': 'app-product-detail-libreta'},{'name': 'ProductDetailPoleraComponent', 'selector': 'app-product-detail-polera'},{'name': 'ProductDetailTablaComponent', 'selector': 'app-product-detail-tabla'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminUserManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'PuenteMagicoWeb'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  title = 'PuenteMagicoWeb';\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdminClientManagementComponent', 'selector': 'app-admin-client-management'},{'name': 'AdminContactManagementComponent', 'selector': 'app-admin-contact-management'},{'name': 'AdminLoginComponent', 'selector': 'app-admin-login'},{'name': 'AdminLogoutComponent', 'selector': 'app-admin-logout'},{'name': 'AdminOrderMonitoringComponent', 'selector': 'app-admin-order-monitoring'},{'name': 'AdminUserManagementComponent', 'selector': 'app-admin-user-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'ProductCatalogComponent', 'selector': 'app-product-catalog'},{'name': 'ProductDetailAluminioComponent', 'selector': 'app-product-detail-aluminio'},{'name': 'ProductDetailCroqueraComponent', 'selector': 'app-product-detail-croquera'},{'name': 'ProductDetailCuadernoComponent', 'selector': 'app-product-detail-cuaderno'},{'name': 'ProductDetailLibretaComponent', 'selector': 'app-product-detail-libreta'},{'name': 'ProductDetailPoleraComponent', 'selector': 'app-product-detail-polera'},{'name': 'ProductDetailTablaComponent', 'selector': 'app-product-detail-tabla'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cart.html":{"url":"interfaces/Cart.html","title":"interface - Cart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Cart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/orders.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            product\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                        \n                                            total\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        product\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        product:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ninterface Cart {\n  product: string;\n  image: string;\n  price: number;\n  quantity: number;\n  total: number;\n}\n\ninterface Order {\n  email: string;\n  id: number;\n  total: number;\n  fecha: Date;\n  estado: string;\n}\n\ninterface OrderDetail extends Cart {\n  id: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n  private carts: Cart[] = [];\n  private orders: Order[] = [];\n  private orderdetails: OrderDetail[] = [];\n  private orderStorageKey = 'orders';\n  private orderDetailsStorageKey = 'orderdetails';\n\n  /**\n   * @description \n   * Constructor del servicio. Carga los carros de compra, órdenes y detalles de órdenes desde localStorage.\n   * \n   */\n  constructor() {\n    if (this.isLocalStorageAvailable()) {\n      const cartsSaved = localStorage.getItem('carts');\n      this.carts = cartsSaved ? JSON.parse(cartsSaved) : [];\n      const ordersSaved = localStorage.getItem('orders');\n      this.orders = ordersSaved ? JSON.parse(ordersSaved) : [];\n      const orderdetailsSaved = localStorage.getItem('orderdetails');\n      this.orderdetails = orderdetailsSaved ? JSON.parse(orderdetailsSaved) : [];\n      this.loadOrdersFromLocalStorage();\n    } else {\n      this.carts = [];\n      this.orders = [];\n      this.orderdetails = [];\n    }\n  }\n\n  /**\n   * @description \n   * Registra un nuevo producto en el carro de compra.\n   * \n   * @param {string} product - El nombre del producto.\n   * @param {string} image - La URL de la imagen del producto.\n   * @param {number} price - El precio del producto.\n   * @param {number} quantity - La cantidad del producto.\n   * @param {number} total - El total del producto.\n   * @return {boolean} - Retorna true si el producto fue registrado exitosamente en el carro, de lo contrario false.\n   */\n  registerCarts(product: string, image: string, price: number, quantity: number, total: number): boolean {\n    console.log('Intentando registrar producto en carro compra:', { product, image, price, quantity, total });\n\n    const newCart: Cart = { product, image, price, quantity, total };\n    this.carts.push(newCart);\n    if (this.isLocalStorageAvailable()) {\n      localStorage.setItem('carts', JSON.stringify(this.carts));\n    }\n    this.mostrarAlerta('Producto registrado exitosamente en carro compra.', 'success');\n    console.log('Producto registrado exitosamente en carro compra:', newCart);\n    return true;\n  }\n\n  /**\n   * @description \n   * Limpia el carro de compra.\n   * \n   * @return {void}\n   */\n  clearCart(): void {\n    this.carts = [];\n    if (this.isLocalStorageAvailable()) {\n      localStorage.removeItem('carts');\n    }\n  }\n\n  /**\n   * @description \n   * Elimina un producto del carro de compra.\n   * \n   * @param {number} index - El índice del producto a eliminar.\n   * @return {void}\n   */\n  removeFromCart(index: number): void {\n    this.carts.splice(index, 1);\n    if (this.isLocalStorageAvailable()) {\n      localStorage.setItem('carts', JSON.stringify(this.carts));\n    }\n  }\n\n  /**\n   * @description \n   * Registra una nueva orden.\n   * \n   * @param {string} email - El correo electrónico del cliente.\n   * @param {number} total - El total de la orden.\n   * @return {number} - Retorna el ID de la nueva orden registrada.\n   */\n  registerOrders(email: string, total: number): number {\n    console.log('Intentando registrar orden cliente:', { email, total });\n    const fecha = new Date();\n    const estado = 'Pendiente';\n    const id = this.orders.length + 1;\n\n    const newOrder: Order = { email, id, total, fecha, estado };\n    this.orders.push(newOrder);\n    if (this.isLocalStorageAvailable()) {\n      localStorage.setItem('orders', JSON.stringify(this.orders));\n    }\n    console.log('Orden cliente registrado exitosamente:', newOrder);\n    return id;\n  }\n\n  /**\n   * @description \n   * Registra los detalles de una orden.\n   * \n   * @param {number} id - El ID de la orden.\n   * @return {boolean} - Retorna true si los detalles de la orden fueron registrados exitosamente, de lo contrario false.\n   */\n  registerOrderdetails(id: number): boolean {\n    if (this.isLocalStorageAvailable()) {\n      const cart = JSON.parse(localStorage.getItem('carts') || '[]');\n      const orderDetail = cart.map((item: any) => ({\n        ...item,\n        id: id\n      }));\n\n      const existingItems = JSON.parse(localStorage.getItem('orderdetails') || '[]');\n      const updatedItems = existingItems.concat(orderDetail);\n      \n      localStorage.setItem('orderdetails', JSON.stringify(updatedItems));\n\n      console.log('Detalle compra registrado exitosamente:', orderDetail);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @description \n   * Actualiza una orden existente.\n   * \n   * @param {string} email - El correo electrónico del cliente.\n   * @param {number} id - El ID de la orden.\n   * @param {number} total - El total de la orden.\n   * @param {string} estado - El estado de la orden.\n   * @return {boolean} - Retorna true si la orden fue actualizada exitosamente, de lo contrario false.\n   */\n  updateOrders(email: string, id: number, total: number, estado: string): boolean {\n    console.log('Intentando actualizar orden cliente:', { email, id });\n    const orderExisting = this.orders.find(order => order.id === id);\n    const fecha = new Date();\n\n    if (orderExisting) {\n      const orderIndex = this.orders.findIndex(contact => contact.id === id);\n      if (orderIndex !== -1) {\n        console.log('Se actualiza estado orden cliente');\n        this.orders[orderIndex] = { email: email, id: id, total: total, fecha: fecha, estado : estado };\n        localStorage.setItem('orders', JSON.stringify(this.orders));\n\n        console.log('Orden cliente actualizado exitosamente:', this.orders[orderIndex]);\n        return true;\n      } else {\n        console.log('Error al actualizar el orden cliente:', email);\n        return false;\n      } \n    }\n\n    this.mostrarAlerta('Orden cliente no actualizado.', 'danger');\n    console.log('Orden cliente no actualizado:', email);\n    return false;\n  }\n\n  /**\n   * @description \n   * Muestra una alerta en la interfaz de usuario.\n   * \n   * @param {string} mensaje - El mensaje de la alerta.\n   * @param {string} tipo - El tipo de alerta (e.g., 'success', 'danger').\n   * @return {void}\n   */\n  private mostrarAlerta(mensaje: string, tipo: string): void {\n    const alertaDiv = document.createElement('div');\n    alertaDiv.className = `alert alert-${tipo}`;\n    alertaDiv.appendChild(document.createTextNode(mensaje));\n    const container = document.querySelector('.container');\n    if (container) {\n      const firstChild = container.firstChild;\n      if (firstChild) {\n        container.insertBefore(alertaDiv, firstChild);\n      } else {\n        container.appendChild(alertaDiv);\n      }\n\n      setTimeout(() => {\n        const alerta = document.querySelector('.alert');\n        if (alerta) {\n          alerta.remove();\n        }\n      }, 6000);\n    }\n  }\n\n  /**\n   * @description \n   * Verifica si localStorage está disponible.\n   * \n   * @return {boolean} - Retorna true si localStorage está disponible, de lo contrario false.\n   */\n  private isLocalStorageAvailable(): boolean {\n    try {\n      const test = '__test__';\n      localStorage.setItem(test, test);\n      localStorage.removeItem(test);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * @description \n   * Busca una orden por su ID.\n   * \n   * @param {number} id - El ID de la orden.\n   * @return {boolean} - Retorna true si la orden fue encontrada, de lo contrario false.\n   */\n  findOrder(id: number): boolean {\n    console.log('Buscando orden cliente:', { id });\n    const order = this.orders.find(order => order.id === id);\n    if (order) {\n      this.mostrarAlerta('Orden cliente encontrado.', 'success');\n      console.log('Orden cliente encontrado:', order);\n      return true;\n    } else {\n      this.mostrarAlerta('Orden cliente no encontrado.', 'danger');\n      console.log('Orden cliente no encontrado.');\n      return false;\n    }\n  }\n\n  /**\n   * @description \n   * Formatea una fecha en formato YYYY-MM-DD a DD-MM-YYYY.\n   * \n   * @param {string} date - La fecha en formato YYYY-MM-DD.\n   * @return {string} - La fecha formateada en formato DD-MM-YYYY.\n   */\n  private formatToFormDate(date: string): string {\n    const [year, month, day] = date.split('-');\n    return `${day}-${month}-${year}`;\n  }\n\n  /**\n   * @description \n   * Formatea una fecha en formato DD-MM-YYYY a YYYY-MM-DD.\n   * \n   * @param {string} date - La fecha en formato DD-MM-YYYY.\n   * @return {string} - La fecha formateada en formato YYYY-MM-DD.\n   */\n  private formatToStorageDate(date: string): string {\n    const [day, month, year] = date.split('-');\n    return `${year}-${month}-${day}`;\n  }\n\n  /**\n   * @description \n   * Carga las órdenes y los detalles de las órdenes desde el localStorage.\n   * \n   * @return {void}\n   */\n  private loadOrdersFromLocalStorage(): void {\n    const ordersSaved = localStorage.getItem(this.orderStorageKey);\n    const orderDetailsSaved = localStorage.getItem(this.orderDetailsStorageKey);\n    this.orders = ordersSaved ? JSON.parse(ordersSaved) : [];\n    this.orderdetails = orderDetailsSaved ? JSON.parse(orderDetailsSaved) : [];\n  }\n\n  /**\n   * @description \n   * Obtiene todas las órdenes.\n   * \n   * @return {Order[]} Lista de órdenes.\n   */\n  getOrders(): Order[] {\n    return this.orders;\n  }\n\n  /**\n   * @description \n   * Obtiene los detalles de una orden específica.\n   * \n   * @param {number} orderId - El ID de la orden.\n   * @return {OrderDetail[]} Lista de detalles de la orden.\n   */\n  getOrderDetails(orderId: number): OrderDetail[] {\n    return this.orderdetails.filter(detail => detail.id === orderId);\n  }\n\n  /**\n   * @description \n   * Actualiza el estado de una orden.\n   * \n   * @param {number} orderId - El ID de la orden.\n   * @param {string} status - El nuevo estado de la orden.\n   * @return {void}\n   */\n  updateOrderStatus(orderId: number, status: string): void {\n    const order = this.orders.find(o => o.id === orderId);\n    if (order) {\n      order.estado = status;\n      this.saveOrdersToLocalStorage();\n    }\n  }\n\n  /**\n   * @description \n   * Guarda las órdenes en el localStorage.\n   * \n   * @return {void}\n   */\n  saveOrdersToLocalStorage(): void {\n    localStorage.setItem(this.orderStorageKey, JSON.stringify(this.orders));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CartComponent.html":{"url":"components/CartComponent.html","title":"component - CartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/cart/cart.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cart\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cart.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cart.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cart\n                            \n                            \n                                totalAmount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateTotal\n                            \n                            \n                                checkLoginState\n                            \n                            \n                                checkLoginStateCheckout\n                            \n                            \n                                checkout\n                            \n                            \n                                clearCart\n                            \n                            \n                                loadCart\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeFromCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigationService: NavigationService, platformId: Object, customersService: CustomersService, ordersService: OrdersService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/cart/cart.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customersService\n                                                  \n                                                        \n                                                                        CustomersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ordersService\n                                                  \n                                                        \n                                                                        OrdersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calculateTotal\n                        \n                    \n                \n            \n            \n                \ncalculateTotal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkLoginState\n                        \n                    \n                \n            \n            \n                \ncheckLoginState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkLoginStateCheckout\n                        \n                    \n                \n            \n            \n                \ncheckLoginStateCheckout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:118\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkout\n                        \n                    \n                \n            \n            \n                \ncheckout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearCart\n                        \n                    \n                \n            \n            \n                \nclearCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCart\n                        \n                    \n                \n            \n            \n                \nloadCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFromCart\n                        \n                    \n                \n            \n            \n                \nremoveFromCart(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CartItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/cart/cart.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/cart/cart.component.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NavigationService } from '../../services/navigation.service';\nimport { CustomersService } from '../../services/customers.service';\nimport { OrdersService } from '../../services/orders.service';\nimport { Router } from '@angular/router';\n\ninterface CartItem {\n  product: string;\n  price: number;\n  quantity: number;\n  total: number;\n  image: string;\n}\n\n@Component({\n  selector: 'app-cart',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  templateUrl: './cart.component.html',\n  styleUrl: './cart.component.scss'\n})\nexport class CartComponent implements OnInit, AfterViewInit {\n\n  constructor(\n    private navigationService: NavigationService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private customersService: CustomersService,\n    private ordersService: OrdersService,\n    private router: Router) { }\n\n    ngOnInit(): void {\n      this.checkLoginState();\n      this.loadCart();\n    }\n  \n    checkLoginState(): void {\n      if (isPlatformBrowser(this.platformId)) {\n        if (this.customersService.checkLoginState()) {\n          // Ocultar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n          document.getElementById('loginMenu')!.style.display = 'none';\n          document.getElementById('registerMenu')!.style.display = 'none';\n          // Mostrar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n          document.getElementById('profileMenu')!.style.display = 'block';\n          document.getElementById('logoutMenu')!.style.display = 'block';\n        } else {\n          // Ocultar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n          document.getElementById('profileMenu')!.style.display = 'none';\n          document.getElementById('logoutMenu')!.style.display = 'none';\n          // Mostrar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n          document.getElementById('loginMenu')!.style.display = 'block';\n          document.getElementById('registerMenu')!.style.display = 'block';\n        }\n      }\n    }\n\n  ngAfterViewInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      const links = document.querySelectorAll('a');\n      links.forEach(link => {\n        link.addEventListener('click', (event: Event) => {\n          event.preventDefault();\n          const target = event.target as HTMLElement;\n          const href = target.getAttribute('href');\n          if (href) {\n            this.navigationService.navigateWithDelay(href);\n          }\n        });\n      });\n    }\n  }\n\n  cart: CartItem[] = [];\n  totalAmount: number = 0;\n\n  loadCart(): void {\n    if (this.customersService.isLocalStorageAvailable()) {\n      this.cart = JSON.parse(localStorage.getItem('carts') || '[]');\n    }\n    this.calculateTotal();\n  }\n\n  calculateTotal(): void {\n    this.totalAmount = this.cart.reduce((sum, item) => sum + item.price * item.quantity, 0);\n  }\n\n  removeFromCart(index: number): void {\n    this.cart.splice(index, 1);\n    this.ordersService.removeFromCart(index);\n    this.calculateTotal();\n  }\n\n  clearCart(): void {\n    this.cart = [];\n    this.ordersService.clearCart();\n    this.calculateTotal();\n  }\n\n  checkout(): void {\n    if (this.checkLoginStateCheckout()){\n      //Registrar orden\n      const email = this.customersService.getLoggedInClientEmail();\n      const total = this.totalAmount;\n      const id = this.ordersService.registerOrders(email, total);\n\n      //Registrar detalle de la orden\n      this.ordersService.registerOrderdetails(id);\n\n      //Limpiar carrito\n      this.clearCart();\n\n      alert('Pedido #' + id + ' registrado.');\n    }\n  }\n\n  checkLoginStateCheckout(): boolean {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.customersService.checkLoginState()) {\n        //Esta logueado, se permite checkout\n        console.log('Esta logueado, se permite checkout.');\n        return true;\n      } else {\n        //No esta logueado, mo se permite checkout y se redirige al login\n        console.log('No esta logueado, no se permite checkout y se redirige al login.');\n        this.router.navigate(['/login']);\n      }\n    }\n    return false;\n  }\n\n}\n\n    \n\n    \n            \n    \n        \n            \n                \n                    \n                    Puente Mágico\n                \n                    \n                \n                \n                    \n                        \n                            Home\n                        \n                        \n                            Ver Catalogo\n                        \n                        \n                            Contacto\n                        \n                        \n                            Iniciar Sesión\n                        \n                        \n                            Registro Cliente\n                        \n                        \n                            Perfil Cliente\n                        \n                        \n                            Cerrar Sesión\n                        \n                        \n                            Carro Compra\n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        Carro de Compra\n        \n             0; else emptyCart\">\n            \n                \n                \n                    Producto\n                    Precio\n                    Cantidad\n                    Total\n                    Acción\n                \n                \n                \n                \n                     {{ item.product }}\n                    ${{ item.price.toFixed(0) }}\n                    {{ item.quantity }}\n                    ${{ (item.price * item.quantity).toFixed(0) }}\n                    Quitar\n                \n                \n            \n            \n            \n            Tu carrito está vacío.\n            \n             0\">\n            Total a pagar: ${{ totalAmount.toFixed(0) }}\n            \n             0\">\n                Pagar\n                Vaciar Carrito\n            \n        \n    \n\n    \n    \n        \n            &copy; 2024 Puente Mágico. Reservados todos los derechos.\n        \n    \n    \n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Puente Mágico                                                                                                                                            Home                                                                            Ver Catalogo                                                                            Contacto                                                                            Iniciar Sesión                                                                            Registro Cliente                                                                            Perfil Cliente                                                                            Cerrar Sesión                                                                            Carro Compra                                                                                                    Carro de Compra                     0; else emptyCart\">                                                                Producto                    Precio                    Cantidad                    Total                    Acción                                                                                     {{ item.product }}                    ${{ item.price.toFixed(0) }}                    {{ item.quantity }}                    ${{ (item.price * item.quantity).toFixed(0) }}                    Quitar                                                                                Tu carrito está vacío.                         0\">            Total a pagar: ${{ totalAmount.toFixed(0) }}                         0\">                Pagar                Vaciar Carrito                                                    © 2024 Puente Mágico. Reservados todos los derechos.                                    '\n    var COMPONENTS = [{'name': 'AdminClientManagementComponent', 'selector': 'app-admin-client-management'},{'name': 'AdminContactManagementComponent', 'selector': 'app-admin-contact-management'},{'name': 'AdminLoginComponent', 'selector': 'app-admin-login'},{'name': 'AdminLogoutComponent', 'selector': 'app-admin-logout'},{'name': 'AdminOrderMonitoringComponent', 'selector': 'app-admin-order-monitoring'},{'name': 'AdminUserManagementComponent', 'selector': 'app-admin-user-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'ProductCatalogComponent', 'selector': 'app-product-catalog'},{'name': 'ProductDetailAluminioComponent', 'selector': 'app-product-detail-aluminio'},{'name': 'ProductDetailCroqueraComponent', 'selector': 'app-product-detail-croquera'},{'name': 'ProductDetailCuadernoComponent', 'selector': 'app-product-detail-cuaderno'},{'name': 'ProductDetailLibretaComponent', 'selector': 'app-product-detail-libreta'},{'name': 'ProductDetailPoleraComponent', 'selector': 'app-product-detail-polera'},{'name': 'ProductDetailTablaComponent', 'selector': 'app-product-detail-tabla'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CartItem.html":{"url":"interfaces/CartItem.html","title":"interface - CartItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CartItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/cart/cart.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            product\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                        \n                                            total\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        product\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        product:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, AfterViewInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NavigationService } from '../../services/navigation.service';\nimport { CustomersService } from '../../services/customers.service';\nimport { OrdersService } from '../../services/orders.service';\nimport { Router } from '@angular/router';\n\ninterface CartItem {\n  product: string;\n  price: number;\n  quantity: number;\n  total: number;\n  image: string;\n}\n\n@Component({\n  selector: 'app-cart',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  templateUrl: './cart.component.html',\n  styleUrl: './cart.component.scss'\n})\nexport class CartComponent implements OnInit, AfterViewInit {\n\n  constructor(\n    private navigationService: NavigationService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private customersService: CustomersService,\n    private ordersService: OrdersService,\n    private router: Router) { }\n\n    ngOnInit(): void {\n      this.checkLoginState();\n      this.loadCart();\n    }\n  \n    checkLoginState(): void {\n      if (isPlatformBrowser(this.platformId)) {\n        if (this.customersService.checkLoginState()) {\n          // Ocultar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n          document.getElementById('loginMenu')!.style.display = 'none';\n          document.getElementById('registerMenu')!.style.display = 'none';\n          // Mostrar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n          document.getElementById('profileMenu')!.style.display = 'block';\n          document.getElementById('logoutMenu')!.style.display = 'block';\n        } else {\n          // Ocultar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n          document.getElementById('profileMenu')!.style.display = 'none';\n          document.getElementById('logoutMenu')!.style.display = 'none';\n          // Mostrar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n          document.getElementById('loginMenu')!.style.display = 'block';\n          document.getElementById('registerMenu')!.style.display = 'block';\n        }\n      }\n    }\n\n  ngAfterViewInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      const links = document.querySelectorAll('a');\n      links.forEach(link => {\n        link.addEventListener('click', (event: Event) => {\n          event.preventDefault();\n          const target = event.target as HTMLElement;\n          const href = target.getAttribute('href');\n          if (href) {\n            this.navigationService.navigateWithDelay(href);\n          }\n        });\n      });\n    }\n  }\n\n  cart: CartItem[] = [];\n  totalAmount: number = 0;\n\n  loadCart(): void {\n    if (this.customersService.isLocalStorageAvailable()) {\n      this.cart = JSON.parse(localStorage.getItem('carts') || '[]');\n    }\n    this.calculateTotal();\n  }\n\n  calculateTotal(): void {\n    this.totalAmount = this.cart.reduce((sum, item) => sum + item.price * item.quantity, 0);\n  }\n\n  removeFromCart(index: number): void {\n    this.cart.splice(index, 1);\n    this.ordersService.removeFromCart(index);\n    this.calculateTotal();\n  }\n\n  clearCart(): void {\n    this.cart = [];\n    this.ordersService.clearCart();\n    this.calculateTotal();\n  }\n\n  checkout(): void {\n    if (this.checkLoginStateCheckout()){\n      //Registrar orden\n      const email = this.customersService.getLoggedInClientEmail();\n      const total = this.totalAmount;\n      const id = this.ordersService.registerOrders(email, total);\n\n      //Registrar detalle de la orden\n      this.ordersService.registerOrderdetails(id);\n\n      //Limpiar carrito\n      this.clearCart();\n\n      alert('Pedido #' + id + ' registrado.');\n    }\n  }\n\n  checkLoginStateCheckout(): boolean {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.customersService.checkLoginState()) {\n        //Esta logueado, se permite checkout\n        console.log('Esta logueado, se permite checkout.');\n        return true;\n      } else {\n        //No esta logueado, mo se permite checkout y se redirige al login\n        console.log('No esta logueado, no se permite checkout y se redirige al login.');\n        this.router.navigate(['/login']);\n      }\n    }\n    return false;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Contact.html":{"url":"interfaces/Contact.html","title":"interface - Contact","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Contact\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/contacts.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            estado\n                                        \n                                \n                                \n                                        \n                                            fecha\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            phone\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        estado\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        estado:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fecha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fecha:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ninterface Contact {\n  name: string;\n  email: string;\n  phone: string;\n  subject: string;\n  message: string;\n  fecha: Date;\n  estado: string;\n  id: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactsService {\n  private contacts: Contact[] = [];\n  private storageKey = 'contacts';\n\n  constructor() {\n    if (this.isLocalStorageAvailable()) {\n      const contactsSaved = localStorage.getItem('contacts');\n      this.contacts = contactsSaved ? JSON.parse(contactsSaved) : [];\n    } else {\n      this.contacts = [];\n    }\n  }\n\n  /**\n   * @description\n   * Registra un nuevo contacto en la lista y en localStorage.\n   * \n   * @param {string} name - El nombre del contacto.\n   * @param {string} email - El correo electrónico del contacto.\n   * @param {string} phone - El número de teléfono del contacto.\n   * @param {string} subject - El asunto del contacto.\n   * @param {string} message - El mensaje del contacto.\n   * @return {boolean} - Retorna true si el contacto fue registrado exitosamente, de lo contrario false.\n   */\n  registerContacts(name: string, email: string, phone: string, subject: string, message: string): boolean {\n    console.log('Intentando registrar contacto cliente:', { name, email, phone, subject, message });\n    const fecha = new Date();\n    const estado = 'Nuevo';\n    const id = this.contacts.length + 1;\n\n    const newConctact: Contact = { name, email, phone, subject, message, fecha, estado, id };\n    this.contacts.push(newConctact);\n    if (this.isLocalStorageAvailable()) {\n      localStorage.setItem('contacts', JSON.stringify(this.contacts));\n    }\n    this.mostrarAlerta('Contacto cliente registrado exitosamente.', 'success');\n    console.log('Contacto cliente registrado exitosamente:', newConctact);\n    return true;\n  }\n\n  /**\n   * @description\n   * Actualiza un contacto existente en la lista y en localStorage.\n   * \n   * @param {string} name - El nombre del contacto.\n   * @param {string} email - El correo electrónico del contacto.\n   * @param {string} phone - El número de teléfono del contacto.\n   * @param {string} subject - El asunto del contacto.\n   * @param {string} message - El mensaje del contacto.\n   * @param {number} id - El ID del contacto a actualizar.\n   * @return {boolean} - Retorna true si el contacto fue actualizado exitosamente, de lo contrario false.\n   */\n  updateContacts(name: string, email: string, phone: string, subject: string, message: string, id: number): boolean {\n    console.log('Intentando actualizar contacto cliente:', { name, email, phone, subject, message, id });\n    const contactExisting = this.contacts.find(contact => contact.id === id);\n    const fecha = new Date();\n    const estado = 'Procesado';\n    if (contactExisting) {\n      const contactIndex = this.contacts.findIndex(contact => contact.id === id);\n      if (contactIndex !== -1) {\n        console.log('Se actualiza estado contacto cliente');\n        this.contacts[contactIndex] = { name: name, email: email, phone: phone, subject: subject, message: message, fecha: fecha, estado : estado, id : id };\n        localStorage.setItem('contacts', JSON.stringify(this.contacts));\n\n        this.mostrarAlerta('Contacto cliente actualizado exitosamente.', 'success');\n        console.log('Contacto cliente actualizado exitosamente:', this.contacts[contactIndex]);\n        return true;\n      } else {\n          this.mostrarAlerta('Error al actualizar el contacto cliente.', 'danger');\n          console.log('Error al actualizar el contacto cliente:', email);\n          return false;\n      } \n    }\n\n    this.mostrarAlerta('Contacto cliente no actualizado.', 'danger');\n    console.log('Contacto cliente no actualizado:', email);\n    return false;\n  }\n\n  /**\n   * @description\n   * Muestra una alerta en la interfaz de usuario.\n   * \n   * @param {string} mensaje - El mensaje de la alerta.\n   * @param {string} tipo - El tipo de alerta (e.g., 'success', 'danger').\n   */\n  private mostrarAlerta(mensaje: string, tipo: string): void {\n    const alertaDiv = document.createElement('div');\n    alertaDiv.className = `alert alert-${tipo}`;\n    alertaDiv.appendChild(document.createTextNode(mensaje));\n    const container = document.querySelector('.container');\n    if (container) {\n      const firstChild = container.firstChild;\n      if (firstChild) {\n        container.insertBefore(alertaDiv, firstChild);\n      } else {\n        container.appendChild(alertaDiv);\n      }\n\n      setTimeout(() => {\n        const alerta = document.querySelector('.alert');\n        if (alerta) {\n          alerta.remove();\n        }\n      }, 6000);\n    }\n  }\n\n  /**\n   * @description\n   * Verifica si localStorage está disponible.\n   * \n   * @return {boolean} - Retorna true si localStorage está disponible, de lo contrario false.\n   */\n  isLocalStorageAvailable(): boolean {\n    try {\n      const test = '__test__';\n      localStorage.setItem(test, test);\n      localStorage.removeItem(test);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * @description\n   * Busca un contacto por ID.\n   * \n   * @param {number} id - El ID del contacto a buscar.\n   * @return {boolean} - Retorna true si el contacto fue encontrado, de lo contrario false.\n   */\n  findContact(id: number): boolean {\n    console.log('Buscando contacto cliente:', { id });\n    const contact = this.contacts.find(contact => contact.id === id);\n    if (contact) {\n      this.mostrarAlerta('Contacto cliente encontrado.', 'success');\n      console.log('Contacto cliente encontrado:', contact);\n      return true;\n    } else {\n      this.mostrarAlerta('Contacto cliente no encontrado.', 'danger');\n      console.log('Contacto cliente no encontrado.');\n      return false;\n    }\n  }\n\n  /**\n   * @description\n   * Formatea una fecha en formato YYYY-MM-DD a DD-MM-YYYY.\n   * \n   * @param {string} date - La fecha en formato YYYY-MM-DD.\n   * @return {string} - La fecha formateada en formato DD-MM-YYYY.\n   */\n  private formatToFormDate(date: string): string {\n    const [year, month, day] = date.split('-');\n    return `${day}-${month}-${year}`;\n  }\n\n  /**\n   * @description\n   * Formatea una fecha en formato DD-MM-YYYY a YYYY-MM-DD.\n   * \n   * @param {string} date - La fecha en formato DD-MM-YYYY.\n   * @return {string} - La fecha formateada en formato YYYY-MM-DD.\n   */\n  private formatToStorageDate(date: string): string {\n    const [day, month, year] = date.split('-');\n    return `${year}-${month}-${day}`;\n  }\n\n  /**\n   * @description\n   * Obtiene todos los contactos almacenados en localStorage.\n   * \n   * @return {Contact[]} - Retorna un arreglo de contactos.\n   */\n  getContacts(): Contact[] {\n    return JSON.parse(localStorage.getItem(this.storageKey) || '[]');\n  }\n\n  /**\n   * @description\n   * Agrega un nuevo contacto a la lista y a localStorage.\n   * \n   * @param {Contact} contact - El contacto a agregar.\n   */\n  addContact(contact: Contact): void {\n    const contacts = this.getContacts();\n    contacts.push(contact);\n    localStorage.setItem(this.storageKey, JSON.stringify(contacts));\n  }\n\n  /**\n   * @description\n   * Actualiza un contacto existente en la lista y en localStorage.\n   * \n   * @param {number} index - El índice del contacto a actualizar.\n   * @param {Contact} updatedContact - El contacto actualizado.\n   */\n  updateContact(index: number, updatedContact: Contact): void {\n    const contacts = this.getContacts();\n    contacts[index] = updatedContact;\n    localStorage.setItem(this.storageKey, JSON.stringify(contacts));\n  }\n\n  /**\n   * @description\n   * Elimina un contacto de la lista y de localStorage.\n   * \n   * @param {number} index - El índice del contacto a eliminar.\n   */\n  deleteContact(index: number): void {\n    const contacts = this.getContacts();\n    contacts.splice(index, 1);\n    localStorage.setItem(this.storageKey, JSON.stringify(contacts));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Contact-1.html":{"url":"interfaces/Contact-1.html","title":"interface - Contact-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Contact\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin-contact-management/admin-contact-management.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            estado\n                                        \n                                \n                                \n                                        \n                                            fecha\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            phone\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        estado\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        estado:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fecha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fecha:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, AfterViewInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NavigationService } from '../../services/navigation.service';\nimport { ContactsService } from '../../services/contacts.service';\ndeclare var bootstrap: any;\nimport { FormsModule } from '@angular/forms';\nimport { UsersService } from '../../services/users.service';\nimport { Router } from '@angular/router';\n\ninterface Contact {\n  name: string;\n  email: string;\n  phone: string;\n  subject: string;\n  message: string;\n  fecha: Date;\n  estado: string;\n  id: number;\n}\n\n@Component({\n  selector: 'app-admin-contact-management',\n  standalone: true,\n  imports: [CommonModule, RouterModule, FormsModule],\n  templateUrl: './admin-contact-management.component.html',\n  styleUrl: './admin-contact-management.component.scss'\n})\nexport class AdminContactManagementComponent implements OnInit, AfterViewInit {\n\n  constructor(\n    private navigationService: NavigationService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n\t  private contactService: ContactsService,\n    private usersService: UsersService,\n    private router: Router\n  ) { }\n\n  ngAfterViewInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      const links = document.querySelectorAll('a');\n      links.forEach(link => {\n        link.addEventListener('click', (event: Event) => {\n          event.preventDefault();\n          const target = event.target as HTMLElement;\n          const href = target.getAttribute('href');\n          if (href) {\n            this.navigationService.navigateWithDelay(href);\n          }\n        });\n      });\n    }\n  }\n  \n  contacts: Contact[] = [];\n\n  ngOnInit(): void {\n    if (this.contactService.isLocalStorageAvailable()) {\n      this.loadContacts();\n    }\n    this.checkLoginState();\n  }\n\n  loadContacts(): void {\n    this.contacts = this.contactService.getContacts();\n  }\n\n  toggleEstado(index: number): void {\n    const contact = this.contacts[index];\n    contact.estado = contact.estado === 'Nuevo' ? 'Procesado' : 'Nuevo';\n    this.contactService.updateContact(index, contact);\n    this.loadContacts();\n  }\n\n  deleteContact(index: number): void {\n    this.contactService.deleteContact(index);\n    this.loadContacts();\n  }\n\n  checkLoginState(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.usersService.checkLoginState()) {\n        // Redirigir al administrador\n        //this.router.navigate(['/admin-user-management']);\n        console.log('Usuario logueado.');\n      } else {\n        // Redirigir al administrador\n        this.router.navigate(['/admin-login']);\n        console.log('Usuario no logueado.');\n      }\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactComponent.html":{"url":"components/ContactComponent.html","title":"component - ContactComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContactComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contact/contact.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./contact.component.html\n            \n\n\n\n            \n                styleUrl\n                ./contact.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contactForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkLoginState\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onReset\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigationService: NavigationService, platformId: Object, fb: FormBuilder, customersService: CustomersService, contactsService: ContactsService, renderer: Renderer2, el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contact/contact.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customersService\n                                                  \n                                                        \n                                                                        CustomersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        contactsService\n                                                  \n                                                        \n                                                                        ContactsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkLoginState\n                        \n                    \n                \n            \n            \n                \ncheckLoginState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/contact/contact.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/contact/contact.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/contact/contact.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onReset\n                        \n                    \n                \n            \n            \n                \nonReset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/contact/contact.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/contact/contact.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contactForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/contact/contact.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NavigationService } from '../../services/navigation.service';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ContactsService } from '../../services/contacts.service';\nimport { Renderer2, ElementRef } from '@angular/core';\nimport { CustomersService } from '../../services/customers.service';\n\n@Component({\n  selector: 'app-contact',\n  standalone: true,\n  imports: [CommonModule, RouterModule, ReactiveFormsModule],\n  templateUrl: './contact.component.html',\n  styleUrl: './contact.component.scss'\n})\nexport class ContactComponent implements OnInit, AfterViewInit {\n  contactForm: FormGroup;\n\n  constructor(\n    private navigationService: NavigationService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private fb: FormBuilder,\n    private customersService: CustomersService,\n    private contactsService: ContactsService,\n    private renderer: Renderer2,\n    private el: ElementRef) {\n    this.contactForm = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      phone: [''],\n      subject: ['', Validators.required],\n      message: ['', Validators.required]\n    });\n  }\n\n  ngOnInit(): void {\n    this.checkLoginState();\n  }\n\n  ngAfterViewInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      const links = document.querySelectorAll('a');\n      links.forEach(link => {\n        link.addEventListener('click', (event: Event) => {\n          event.preventDefault();\n          const target = event.target as HTMLElement;\n          const href = target.getAttribute('href');\n          if (href) {\n            this.navigationService.navigateWithDelay(href);\n          }\n        });\n      });\n    }\n  }\n\n  onSubmit() {\n    if (this.contactForm.valid) {\n      console.log('Formulario enviado!', this.contactForm.value);\n      const name = this.contactForm.value.name;\n      const email = this.contactForm.value.email;\n      const phone = this.contactForm.value.phone;\n      const subject = this.contactForm.value.suject;\n      const message = this.contactForm.value.message;\n\n      const registroExitoso = this.contactsService.registerContacts(name, email, phone, subject, message);\n      if (registroExitoso) {\n        console.log('Registro exitoso:', { name, email, phone, subject, message });\n        alert('Su mensaje ha sido enviado!');\n        this.contactForm.reset();\n      } else {\n        console.log('Error en el registro.');\n      }\n    } else {\n      console.log('Formulario invalido');\n    }\n  }\n\n  onReset() {\n    this.contactForm.reset();\n  }\n\n  checkLoginState(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.customersService.checkLoginState()) {\n        // Ocultar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n        document.getElementById('loginMenu')!.style.display = 'none';\n        document.getElementById('registerMenu')!.style.display = 'none';\n        // Mostrar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n        document.getElementById('profileMenu')!.style.display = 'block';\n        document.getElementById('logoutMenu')!.style.display = 'block';\n      } else {\n        // Ocultar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n        document.getElementById('profileMenu')!.style.display = 'none';\n        document.getElementById('logoutMenu')!.style.display = 'none';\n        // Mostrar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n        document.getElementById('loginMenu')!.style.display = 'block';\n        document.getElementById('registerMenu')!.style.display = 'block';\n      }\n    }\n  }\n}\n\n    \n\n    \n            \n    \n        \n            \n                \n                    \n                    Puente Mágico\n                \n                    \n                \n                \n                    \n                        \n                        Home\n                        \n                        \n                            Ver Catalogo\n                        \n                        \n                            Contacto\n                        \n                        \n                            Iniciar Sesión\n                        \n                        \n                            Registro Cliente\n                        \n                        \n                            Perfil Cliente\n                        \n                        \n                            Cerrar Sesión\n                        \n                        \n                            Carro Compra\n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            \n                Contáctanos\n                \n                    \n                        Nombre\n                        \n                        \n                        Nombre es obligatorio.\n                        \n                    \n                    \n                        Correo Electrónico\n                        \n                        \n                            Correo Electrónico es obligatorio.\n                            Formato de correo electrónico incorrecto.\n                        \n                    \n                    \n                        Teléfono\n                        \n                    \n                    \n                        Asunto\n                        \n                        \n                        Asunto es obligatorio.\n                        \n                    \n                    \n                        Mensaje\n                        \n                        \n                        Mensaje es obligatorio.\n                        \n                    \n                    Enviar\n                    Limpiar\n                \n            \n        \n    \n\n    \n    \n        \n            &copy; 2024 Puente Mágico. Reservados todos los derechos.\n        \n    \n\n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Puente Mágico                                                                                                                                        Home                                                                            Ver Catalogo                                                                            Contacto                                                                            Iniciar Sesión                                                                            Registro Cliente                                                                            Perfil Cliente                                                                            Cerrar Sesión                                                                            Carro Compra                                                                                                                                Contáctanos                                                            Nombre                                                                        Nombre es obligatorio.                                                                                        Correo Electrónico                                                                            Correo Electrónico es obligatorio.                            Formato de correo electrónico incorrecto.                                                                                        Teléfono                                                                                        Asunto                                                                        Asunto es obligatorio.                                                                                        Mensaje                                                                        Mensaje es obligatorio.                                                                Enviar                    Limpiar                                                                    © 2024 Puente Mágico. Reservados todos los derechos.                                '\n    var COMPONENTS = [{'name': 'AdminClientManagementComponent', 'selector': 'app-admin-client-management'},{'name': 'AdminContactManagementComponent', 'selector': 'app-admin-contact-management'},{'name': 'AdminLoginComponent', 'selector': 'app-admin-login'},{'name': 'AdminLogoutComponent', 'selector': 'app-admin-logout'},{'name': 'AdminOrderMonitoringComponent', 'selector': 'app-admin-order-monitoring'},{'name': 'AdminUserManagementComponent', 'selector': 'app-admin-user-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'ProductCatalogComponent', 'selector': 'app-product-catalog'},{'name': 'ProductDetailAluminioComponent', 'selector': 'app-product-detail-aluminio'},{'name': 'ProductDetailCroqueraComponent', 'selector': 'app-product-detail-croquera'},{'name': 'ProductDetailCuadernoComponent', 'selector': 'app-product-detail-cuaderno'},{'name': 'ProductDetailLibretaComponent', 'selector': 'app-product-detail-libreta'},{'name': 'ProductDetailPoleraComponent', 'selector': 'app-product-detail-polera'},{'name': 'ProductDetailTablaComponent', 'selector': 'app-product-detail-tabla'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactsService.html":{"url":"injectables/ContactsService.html","title":"injectable - ContactsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/contacts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                contacts\n                            \n                            \n                                    Private\n                                storageKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addContact\n                            \n                            \n                                deleteContact\n                            \n                            \n                                findContact\n                            \n                            \n                                    Private\n                                formatToFormDate\n                            \n                            \n                                    Private\n                                formatToStorageDate\n                            \n                            \n                                getContacts\n                            \n                            \n                                isLocalStorageAvailable\n                            \n                            \n                                    Private\n                                mostrarAlerta\n                            \n                            \n                                registerContacts\n                            \n                            \n                                updateContact\n                            \n                            \n                                updateContacts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/contacts.service.ts:19\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addContact\n                        \n                    \n                \n            \n            \n                \naddContact(contact: Contact)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contacts.service.ts:203\n                        \n                    \n\n\n            \n                \n                        Agrega un nuevo contacto a la lista y a localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contact\n                                            \n                                                            Contact\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl contacto a agregar.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteContact\n                        \n                    \n                \n            \n            \n                \ndeleteContact(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contacts.service.ts:228\n                        \n                    \n\n\n            \n                \n                        Elimina un contacto de la lista y de localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl índice del contacto a eliminar.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findContact\n                        \n                    \n                \n            \n            \n                \nfindContact(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contacts.service.ts:149\n                        \n                    \n\n\n            \n                \n                        Busca un contacto por ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl ID del contacto a buscar.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nRetorna true si el contacto fue encontrado, de lo contrario false.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        formatToFormDate\n                        \n                    \n                \n            \n            \n                \n                        \n                    formatToFormDate(date: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contacts.service.ts:170\n                        \n                    \n\n\n            \n                \n                        Formatea una fecha en formato YYYY-MM-DD a DD-MM-YYYY.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLa fecha en formato YYYY-MM-DD.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \nLa fecha formateada en formato DD-MM-YYYY.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        formatToStorageDate\n                        \n                    \n                \n            \n            \n                \n                        \n                    formatToStorageDate(date: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contacts.service.ts:182\n                        \n                    \n\n\n            \n                \n                        Formatea una fecha en formato DD-MM-YYYY a YYYY-MM-DD.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLa fecha en formato DD-MM-YYYY.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \nLa fecha formateada en formato YYYY-MM-DD.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getContacts\n                        \n                    \n                \n            \n            \n                \ngetContacts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contacts.service.ts:193\n                        \n                    \n\n\n            \n                \n                        Obtiene todos los contactos almacenados en localStorage.\n\n\n                        \n                            Returns :     Contact[]\n\n                        \n                            \n                                \nRetorna un arreglo de contactos.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLocalStorageAvailable\n                        \n                    \n                \n            \n            \n                \nisLocalStorageAvailable()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contacts.service.ts:131\n                        \n                    \n\n\n            \n                \n                        Verifica si localStorage está disponible.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nRetorna true si localStorage está disponible, de lo contrario false.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mostrarAlerta\n                        \n                    \n                \n            \n            \n                \n                        \n                    mostrarAlerta(mensaje: string, tipo: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contacts.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Muestra una alerta en la interfaz de usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mensaje\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl mensaje de la alerta.\n\n\n                                            \n                                        \n                                        \n                                                tipo\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl tipo de alerta (e.g., 'success', 'danger').\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerContacts\n                        \n                    \n                \n            \n            \n                \nregisterContacts(name: string, email: string, phone: string, subject: string, message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contacts.service.ts:41\n                        \n                    \n\n\n            \n                \n                        Registra un nuevo contacto en la lista y en localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl nombre del contacto.\n\n\n                                            \n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl correo electrónico del contacto.\n\n\n                                            \n                                        \n                                        \n                                                phone\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl número de teléfono del contacto.\n\n\n                                            \n                                        \n                                        \n                                                subject\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl asunto del contacto.\n\n\n                                            \n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl mensaje del contacto.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nRetorna true si el contacto fue registrado exitosamente, de lo contrario false.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateContact\n                        \n                    \n                \n            \n            \n                \nupdateContact(index: number, updatedContact: Contact)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contacts.service.ts:216\n                        \n                    \n\n\n            \n                \n                        Actualiza un contacto existente en la lista y en localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl índice del contacto a actualizar.\n\n\n                                            \n                                        \n                                        \n                                                updatedContact\n                                            \n                                                            Contact\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl contacto actualizado.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateContacts\n                        \n                    \n                \n            \n            \n                \nupdateContacts(name: string, email: string, phone: string, subject: string, message: string, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contacts.service.ts:69\n                        \n                    \n\n\n            \n                \n                        Actualiza un contacto existente en la lista y en localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl nombre del contacto.\n\n\n                                            \n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl correo electrónico del contacto.\n\n\n                                            \n                                        \n                                        \n                                                phone\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl número de teléfono del contacto.\n\n\n                                            \n                                        \n                                        \n                                                subject\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl asunto del contacto.\n\n\n                                            \n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl mensaje del contacto.\n\n\n                                            \n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl ID del contacto a actualizar.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nRetorna true si el contacto fue actualizado exitosamente, de lo contrario false.\n\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        contacts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Contact[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/contacts.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        storageKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'contacts'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/contacts.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ninterface Contact {\n  name: string;\n  email: string;\n  phone: string;\n  subject: string;\n  message: string;\n  fecha: Date;\n  estado: string;\n  id: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactsService {\n  private contacts: Contact[] = [];\n  private storageKey = 'contacts';\n\n  constructor() {\n    if (this.isLocalStorageAvailable()) {\n      const contactsSaved = localStorage.getItem('contacts');\n      this.contacts = contactsSaved ? JSON.parse(contactsSaved) : [];\n    } else {\n      this.contacts = [];\n    }\n  }\n\n  /**\n   * @description\n   * Registra un nuevo contacto en la lista y en localStorage.\n   * \n   * @param {string} name - El nombre del contacto.\n   * @param {string} email - El correo electrónico del contacto.\n   * @param {string} phone - El número de teléfono del contacto.\n   * @param {string} subject - El asunto del contacto.\n   * @param {string} message - El mensaje del contacto.\n   * @return {boolean} - Retorna true si el contacto fue registrado exitosamente, de lo contrario false.\n   */\n  registerContacts(name: string, email: string, phone: string, subject: string, message: string): boolean {\n    console.log('Intentando registrar contacto cliente:', { name, email, phone, subject, message });\n    const fecha = new Date();\n    const estado = 'Nuevo';\n    const id = this.contacts.length + 1;\n\n    const newConctact: Contact = { name, email, phone, subject, message, fecha, estado, id };\n    this.contacts.push(newConctact);\n    if (this.isLocalStorageAvailable()) {\n      localStorage.setItem('contacts', JSON.stringify(this.contacts));\n    }\n    this.mostrarAlerta('Contacto cliente registrado exitosamente.', 'success');\n    console.log('Contacto cliente registrado exitosamente:', newConctact);\n    return true;\n  }\n\n  /**\n   * @description\n   * Actualiza un contacto existente en la lista y en localStorage.\n   * \n   * @param {string} name - El nombre del contacto.\n   * @param {string} email - El correo electrónico del contacto.\n   * @param {string} phone - El número de teléfono del contacto.\n   * @param {string} subject - El asunto del contacto.\n   * @param {string} message - El mensaje del contacto.\n   * @param {number} id - El ID del contacto a actualizar.\n   * @return {boolean} - Retorna true si el contacto fue actualizado exitosamente, de lo contrario false.\n   */\n  updateContacts(name: string, email: string, phone: string, subject: string, message: string, id: number): boolean {\n    console.log('Intentando actualizar contacto cliente:', { name, email, phone, subject, message, id });\n    const contactExisting = this.contacts.find(contact => contact.id === id);\n    const fecha = new Date();\n    const estado = 'Procesado';\n    if (contactExisting) {\n      const contactIndex = this.contacts.findIndex(contact => contact.id === id);\n      if (contactIndex !== -1) {\n        console.log('Se actualiza estado contacto cliente');\n        this.contacts[contactIndex] = { name: name, email: email, phone: phone, subject: subject, message: message, fecha: fecha, estado : estado, id : id };\n        localStorage.setItem('contacts', JSON.stringify(this.contacts));\n\n        this.mostrarAlerta('Contacto cliente actualizado exitosamente.', 'success');\n        console.log('Contacto cliente actualizado exitosamente:', this.contacts[contactIndex]);\n        return true;\n      } else {\n          this.mostrarAlerta('Error al actualizar el contacto cliente.', 'danger');\n          console.log('Error al actualizar el contacto cliente:', email);\n          return false;\n      } \n    }\n\n    this.mostrarAlerta('Contacto cliente no actualizado.', 'danger');\n    console.log('Contacto cliente no actualizado:', email);\n    return false;\n  }\n\n  /**\n   * @description\n   * Muestra una alerta en la interfaz de usuario.\n   * \n   * @param {string} mensaje - El mensaje de la alerta.\n   * @param {string} tipo - El tipo de alerta (e.g., 'success', 'danger').\n   */\n  private mostrarAlerta(mensaje: string, tipo: string): void {\n    const alertaDiv = document.createElement('div');\n    alertaDiv.className = `alert alert-${tipo}`;\n    alertaDiv.appendChild(document.createTextNode(mensaje));\n    const container = document.querySelector('.container');\n    if (container) {\n      const firstChild = container.firstChild;\n      if (firstChild) {\n        container.insertBefore(alertaDiv, firstChild);\n      } else {\n        container.appendChild(alertaDiv);\n      }\n\n      setTimeout(() => {\n        const alerta = document.querySelector('.alert');\n        if (alerta) {\n          alerta.remove();\n        }\n      }, 6000);\n    }\n  }\n\n  /**\n   * @description\n   * Verifica si localStorage está disponible.\n   * \n   * @return {boolean} - Retorna true si localStorage está disponible, de lo contrario false.\n   */\n  isLocalStorageAvailable(): boolean {\n    try {\n      const test = '__test__';\n      localStorage.setItem(test, test);\n      localStorage.removeItem(test);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * @description\n   * Busca un contacto por ID.\n   * \n   * @param {number} id - El ID del contacto a buscar.\n   * @return {boolean} - Retorna true si el contacto fue encontrado, de lo contrario false.\n   */\n  findContact(id: number): boolean {\n    console.log('Buscando contacto cliente:', { id });\n    const contact = this.contacts.find(contact => contact.id === id);\n    if (contact) {\n      this.mostrarAlerta('Contacto cliente encontrado.', 'success');\n      console.log('Contacto cliente encontrado:', contact);\n      return true;\n    } else {\n      this.mostrarAlerta('Contacto cliente no encontrado.', 'danger');\n      console.log('Contacto cliente no encontrado.');\n      return false;\n    }\n  }\n\n  /**\n   * @description\n   * Formatea una fecha en formato YYYY-MM-DD a DD-MM-YYYY.\n   * \n   * @param {string} date - La fecha en formato YYYY-MM-DD.\n   * @return {string} - La fecha formateada en formato DD-MM-YYYY.\n   */\n  private formatToFormDate(date: string): string {\n    const [year, month, day] = date.split('-');\n    return `${day}-${month}-${year}`;\n  }\n\n  /**\n   * @description\n   * Formatea una fecha en formato DD-MM-YYYY a YYYY-MM-DD.\n   * \n   * @param {string} date - La fecha en formato DD-MM-YYYY.\n   * @return {string} - La fecha formateada en formato YYYY-MM-DD.\n   */\n  private formatToStorageDate(date: string): string {\n    const [day, month, year] = date.split('-');\n    return `${year}-${month}-${day}`;\n  }\n\n  /**\n   * @description\n   * Obtiene todos los contactos almacenados en localStorage.\n   * \n   * @return {Contact[]} - Retorna un arreglo de contactos.\n   */\n  getContacts(): Contact[] {\n    return JSON.parse(localStorage.getItem(this.storageKey) || '[]');\n  }\n\n  /**\n   * @description\n   * Agrega un nuevo contacto a la lista y a localStorage.\n   * \n   * @param {Contact} contact - El contacto a agregar.\n   */\n  addContact(contact: Contact): void {\n    const contacts = this.getContacts();\n    contacts.push(contact);\n    localStorage.setItem(this.storageKey, JSON.stringify(contacts));\n  }\n\n  /**\n   * @description\n   * Actualiza un contacto existente en la lista y en localStorage.\n   * \n   * @param {number} index - El índice del contacto a actualizar.\n   * @param {Contact} updatedContact - El contacto actualizado.\n   */\n  updateContact(index: number, updatedContact: Contact): void {\n    const contacts = this.getContacts();\n    contacts[index] = updatedContact;\n    localStorage.setItem(this.storageKey, JSON.stringify(contacts));\n  }\n\n  /**\n   * @description\n   * Elimina un contacto de la lista y de localStorage.\n   * \n   * @param {number} index - El índice del contacto a eliminar.\n   */\n  deleteContact(index: number): void {\n    const contacts = this.getContacts();\n    contacts.splice(index, 1);\n    localStorage.setItem(this.storageKey, JSON.stringify(contacts));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CryptoService.html":{"url":"injectables/CryptoService.html","title":"injectable - CryptoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CryptoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/crypto.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                secretKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decrypt\n                            \n                            \n                                encrypt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/crypto.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decrypt\n                        \n                    \n                \n            \n            \n                \ndecrypt(data: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/crypto.service.ts:30\n                        \n                    \n\n\n            \n                \n                        Desencripta una cadena de texto encriptada utilizando AES.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLa cadena de texto encriptada a desencriptar.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \nLa cadena de texto desencriptada.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encrypt\n                        \n                    \n                \n            \n            \n                \nencrypt(data: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/crypto.service.ts:19\n                        \n                    \n\n\n            \n                \n                        Encripta una cadena de texto utilizando AES.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLa cadena de texto a encriptar.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \nLa cadena de texto encriptada.\n\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        secretKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Pu3nt3M4g1c0'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/crypto.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as CryptoJS from 'crypto-js';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CryptoService {\n  private secretKey: string = 'Pu3nt3M4g1c0';\n\n  constructor() { }\n\n  /**\n   * @description\n   * Encripta una cadena de texto utilizando AES.\n   * \n   * @param {string} data - La cadena de texto a encriptar.\n   * @return {string} - La cadena de texto encriptada.\n   */\n  encrypt(data: string): string {\n    return CryptoJS.AES.encrypt(data, this.secretKey).toString();\n  }\n\n  /**\n   * @description\n   * Desencripta una cadena de texto encriptada utilizando AES.\n   * \n   * @param {string} data - La cadena de texto encriptada a desencriptar.\n   * @return {string} - La cadena de texto desencriptada.\n   */\n  decrypt(data: string): string {\n    const bytes = CryptoJS.AES.decrypt(data, this.secretKey);\n    return bytes.toString(CryptoJS.enc.Utf8);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Customer.html":{"url":"interfaces/Customer.html","title":"interface - Customer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Customer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/customers.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            birthdate\n                                        \n                                \n                                \n                                        \n                                            clientName\n                                        \n                                \n                                \n                                        \n                                            clientSurname\n                                        \n                                \n                                \n                                        \n                                            dispatchAddress\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        birthdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthdate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clientName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientSurname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clientSurname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dispatchAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dispatchAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CryptoService } from './crypto.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nexport interface Customer {\n  id: number;\n  clientName: string;\n  clientSurname: string;\n  email: string;\n  password: string;\n  birthdate: string;\n  dispatchAddress: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomersService {\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer 54d1a9fa-d9cc-455c-8c64-a898aa7eb3a4'\n    })\n  }\n\n  private jsonUrl = 'https://firebasestorage.googleapis.com/v0/b/puentemagicojson.appspot.com/o/customers.json?alt=media&token=54d1a9fa-d9cc-455c-8c64-a898aa7eb3a4'; \n\n  //private storageKey = 'customers';\n  //private customers: Customer[] = [];\n\n  /**\n   * @description \n   * Constructor del servicio. Inicializa el servicio HTTP y el servicio de encriptación.\n   * \n   * @param {HttpClient} http - Servicio HTTP para realizar solicitudes.\n   * @param {CryptoService} cryptoService - Servicio de encriptación.\n   */\n  constructor(private http: HttpClient, private cryptoService: CryptoService) {}\n\n  /**\n   * @description \n   * Sobrescribe el archivo JSON con la lista de clientes proporcionada.\n   * \n   * @param {Customer[]} listaClientes - La lista de clientes a sobrescribir en el archivo JSON.\n   */\n  MetodoCliente(listaClientes: Customer[]): void {\n    console.log('listaClientes', listaClientes);\n    this.http.post(this.jsonUrl, listaClientes, this.httpOptions).subscribe(\n      response => {\n        console.log('Archivo JSON sobrescrito con éxito', response);\n      },\n      error => {\n        console.error('Error al sobrescribir el archivo JSON', error);\n      }\n    );\n  }\n\n  /**\n   * @description \n   * Obtiene la lista de clientes desde el archivo JSON.\n   * \n   * @return {Observable} - Un observable con la lista de clientes.\n   */\n  getCustomers(): Observable {\n    return this.http.get(this.jsonUrl).pipe(\n      catchError(error => {\n        console.error('Error al recuperar clientes:', error);\n        return throwError(error);\n      })\n    );\n  }\n\n  /**\n   * @description \n   * Valida si un correo electrónico ya está registrado.\n   * \n   * @param {string} email - El correo electrónico a validar.\n   * @return {Observable} - Un observable que retorna true si el correo electrónico ya está registrado, de lo contrario false.\n   */\n  validateEmail(email: string): Observable {\n    return this.getCustomers().pipe(\n      map(customers => customers.some(customer => customer.email === email))\n    );\n  }\n\n  /**\n   * @description \n   * Valida las credenciales de inicio de sesión del cliente.\n   * \n   * @param {string} email - El correo electrónico del cliente.\n   * @param {string} password - La contraseña del cliente.\n   * @return {Observable} - Un observable que retorna true si las credenciales son válidas, de lo contrario false.\n   */\n  validateLogin(email: string, password: string): Observable {\n    return this.getCustomers().pipe(\n      map((customers: Customer[]) => {\n        const customer = customers.find(c => c.email === email && this.cryptoService.decrypt(c.password) === password);\n        if (customer) {\n          this.setLoginState(customer);\n        }\n        return !!customer;\n      })\n    );\n  }\n\n  /**\n   * @description \n   * Obtiene un cliente por su correo electrónico.\n   * \n   * @param {string} email - El correo electrónico del cliente.\n   * @return {Observable} - Un observable que retorna el cliente si es encontrado, de lo contrario undefined.\n   */\n  getCustomerByEmail(email: string): Observable {\n    return this.getCustomers().pipe(\n      map(customers => customers.find(customer => customer.email === email))\n    );\n  }\n\n  /**\n   * @description \n   * Actualiza la información de un cliente existente.\n   * \n   * @param {Customer} updatedCustomer - Los datos actualizados del cliente.\n   * @return {Observable} - Un observable con la lista de clientes actualizada.\n   */\n  updateCustomer(updatedCustomer: Customer): Observable {\n    return this.getCustomers().pipe(\n      map(customers => {\n        const index = customers.findIndex(customer => customer.id === updatedCustomer.id);\n        if (index !== -1) {\n          customers[index] = updatedCustomer;\n          this.MetodoCliente(customers);\n        }\n        return customers;\n      })\n    );\n  }\n\n  /**\n   * @description \n   * Agrega un nuevo cliente a la lista.\n   * \n   * @param {Customer} newCustomer - Los datos del nuevo cliente.\n   * @return {Observable} - Un observable con la lista de clientes actualizada.\n   */\n  addCustomer(newCustomer: Customer): Observable {\n    return this.getCustomers().pipe(\n      map(customers => {\n        const customerExists = customers.some(customer => customer.email === newCustomer.email);\n        if (customerExists) {\n          throw new Error('El cliente ya existe.');\n        }\n        newCustomer.id = customers.length > 0 ? Math.max(...customers.map(c => c.id)) + 1 : 1;\n        customers.push(newCustomer);\n        this.MetodoCliente(customers);\n        return customers;\n      }),\n      catchError(error => {\n        console.error('Error al agregar cliente:', error);\n        return throwError(error);\n      })\n    );\n  }\n\n  /**\n   * @description \n   * Muestra una alerta en la interfaz de usuario.\n   * \n   * @param {string} mensaje - El mensaje de la alerta.\n   * @param {string} tipo - El tipo de alerta (e.g., 'success', 'danger').\n   */\n  mostrarAlerta(mensaje: string, tipo: string): void {\n    const alertaDiv = document.createElement('div');\n    alertaDiv.className = `alert alert-${tipo}`;\n    alertaDiv.appendChild(document.createTextNode(mensaje));\n    const container = document.querySelector('.container');\n    if (container) {\n      const firstChild = container.firstChild;\n      if (firstChild) {\n        container.insertBefore(alertaDiv, firstChild);\n      } else {\n        container.appendChild(alertaDiv);\n      }\n\n      setTimeout(() => {\n        const alerta = document.querySelector('.alert');\n        if (alerta) {\n          alerta.remove();\n        }\n      }, 6000);\n    }\n  }\n\n  /**\n   * @description \n   * Verifica si localStorage está disponible.\n   * \n   * @return {boolean} - Retorna true si localStorage está disponible, de lo contrario false.\n   */\n  isLocalStorageAvailable(): boolean {\n    try {\n      const test = '__test__';\n      localStorage.setItem(test, test);\n      localStorage.removeItem(test);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * @description \n   * Establece el estado de inicio de sesión del cliente.\n   * \n   * @param {Customer} customer - El cliente que ha iniciado sesión.\n   */\n  setLoginState(customer: Customer): void {\n    if (this.isLocalStorageAvailable()) {\n      localStorage.setItem('loggedInClient', JSON.stringify(customer));\n    }\n  }\n\n  /**\n   * @description \n   * Verifica el estado de inicio de sesión del cliente.\n   * \n   * @return {boolean} - Retorna true si el cliente ha iniciado sesión, de lo contrario false.\n   */\n  checkLoginState(): boolean {\n    if (this.isLocalStorageAvailable()) {\n      const loggedInClient = JSON.parse(localStorage.getItem('loggedInClient') || 'null');\n      return loggedInClient !== null;\n    }\n    return false;\n  }\n\n  /**\n   * @description \n   * Obtiene el correo electrónico del cliente logueado.\n   * \n   * @return {string} - Retorna el correo electrónico del cliente logueado.\n   */\n  getLoggedInClientEmail(): string {\n    if (this.isLocalStorageAvailable()) {\n      const loggedInUser = JSON.parse(localStorage.getItem('loggedInClient') || '');\n      return loggedInUser ? loggedInUser.email : '';\n    }\n    return '';\n  }\n\n  /**\n   * @description \n   * Cierra la sesión del cliente.\n   */\n  logout(): void {\n    if (this.isLocalStorageAvailable()) {\n      console.log('Logout cliente.');\n      localStorage.removeItem('loggedInClient');\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomersService.html":{"url":"injectables/CustomersService.html","title":"injectable - CustomersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/customers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                httpOptions\n                            \n                            \n                                    Private\n                                jsonUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCustomer\n                            \n                            \n                                checkLoginState\n                            \n                            \n                                getCustomerByEmail\n                            \n                            \n                                getCustomers\n                            \n                            \n                                getLoggedInClientEmail\n                            \n                            \n                                isLocalStorageAvailable\n                            \n                            \n                                logout\n                            \n                            \n                                MetodoCliente\n                            \n                            \n                                mostrarAlerta\n                            \n                            \n                                setLoginState\n                            \n                            \n                                updateCustomer\n                            \n                            \n                                validateEmail\n                            \n                            \n                                validateLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, cryptoService: CryptoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/customers.service.ts:28\n                            \n                        \n\n                \n                    \n                            Constructor del servicio. Inicializa el servicio HTTP y el servicio de encriptación.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio HTTP para realizar solicitudes.\n\n\n                                                        \n                                                \n                                                \n                                                        cryptoService\n                                                  \n                                                        \n                                                                        CryptoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de encriptación.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCustomer\n                        \n                    \n                \n            \n            \n                \naddCustomer(newCustomer: Customer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/customers.service.ts:148\n                        \n                    \n\n\n            \n                \n                        Agrega un nuevo cliente a la lista.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newCustomer\n                                            \n                                                            Customer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLos datos del nuevo cliente.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \nUn observable con la lista de clientes actualizada.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkLoginState\n                        \n                    \n                \n            \n            \n                \ncheckLoginState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/customers.service.ts:231\n                        \n                    \n\n\n            \n                \n                        Verifica el estado de inicio de sesión del cliente.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nRetorna true si el cliente ha iniciado sesión, de lo contrario false.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCustomerByEmail\n                        \n                    \n                \n            \n            \n                \ngetCustomerByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/customers.service.ts:115\n                        \n                    \n\n\n            \n                \n                        Obtiene un cliente por su correo electrónico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl correo electrónico del cliente.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \nUn observable que retorna el cliente si es encontrado, de lo contrario undefined.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCustomers\n                        \n                    \n                \n            \n            \n                \ngetCustomers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/customers.service.ts:66\n                        \n                    \n\n\n            \n                \n                        Obtiene la lista de clientes desde el archivo JSON.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \nUn observable con la lista de clientes.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoggedInClientEmail\n                        \n                    \n                \n            \n            \n                \ngetLoggedInClientEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/customers.service.ts:245\n                        \n                    \n\n\n            \n                \n                        Obtiene el correo electrónico del cliente logueado.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                \nRetorna el correo electrónico del cliente logueado.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLocalStorageAvailable\n                        \n                    \n                \n            \n            \n                \nisLocalStorageAvailable()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/customers.service.ts:202\n                        \n                    \n\n\n            \n                \n                        Verifica si localStorage está disponible.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nRetorna true si localStorage está disponible, de lo contrario false.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/customers.service.ts:257\n                        \n                    \n\n\n            \n                \n                        Cierra la sesión del cliente.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MetodoCliente\n                        \n                    \n                \n            \n            \n                \nMetodoCliente(listaClientes: Customer[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/customers.service.ts:48\n                        \n                    \n\n\n            \n                \n                        Sobrescribe el archivo JSON con la lista de clientes proporcionada.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                listaClientes\n                                            \n                                                            Customer[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLa lista de clientes a sobrescribir en el archivo JSON.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mostrarAlerta\n                        \n                    \n                \n            \n            \n                \nmostrarAlerta(mensaje: string, tipo: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/customers.service.ts:174\n                        \n                    \n\n\n            \n                \n                        Muestra una alerta en la interfaz de usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mensaje\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl mensaje de la alerta.\n\n\n                                            \n                                        \n                                        \n                                                tipo\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl tipo de alerta (e.g., 'success', 'danger').\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLoginState\n                        \n                    \n                \n            \n            \n                \nsetLoginState(customer: Customer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/customers.service.ts:219\n                        \n                    \n\n\n            \n                \n                        Establece el estado de inicio de sesión del cliente.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                customer\n                                            \n                                                            Customer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl cliente que ha iniciado sesión.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCustomer\n                        \n                    \n                \n            \n            \n                \nupdateCustomer(updatedCustomer: Customer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/customers.service.ts:128\n                        \n                    \n\n\n            \n                \n                        Actualiza la información de un cliente existente.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updatedCustomer\n                                            \n                                                            Customer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLos datos actualizados del cliente.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \nUn observable con la lista de clientes actualizada.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateEmail\n                        \n                    \n                \n            \n            \n                \nvalidateEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/customers.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Valida si un correo electrónico ya está registrado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl correo electrónico a validar.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nUn observable que retorna true si el correo electrónico ya está registrado, de lo contrario false.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateLogin\n                        \n                    \n                \n            \n            \n                \nvalidateLogin(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/customers.service.ts:96\n                        \n                    \n\n\n            \n                \n                        Valida las credenciales de inicio de sesión del cliente.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl correo electrónico del cliente.\n\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLa contraseña del cliente.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nUn observable que retorna true si las credenciales son válidas, de lo contrario false.\n\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer 54d1a9fa-d9cc-455c-8c64-a898aa7eb3a4'\n    })\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/customers.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jsonUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://firebasestorage.googleapis.com/v0/b/puentemagicojson.appspot.com/o/customers.json?alt=media&token=54d1a9fa-d9cc-455c-8c64-a898aa7eb3a4'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/customers.service.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CryptoService } from './crypto.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nexport interface Customer {\n  id: number;\n  clientName: string;\n  clientSurname: string;\n  email: string;\n  password: string;\n  birthdate: string;\n  dispatchAddress: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomersService {\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer 54d1a9fa-d9cc-455c-8c64-a898aa7eb3a4'\n    })\n  }\n\n  private jsonUrl = 'https://firebasestorage.googleapis.com/v0/b/puentemagicojson.appspot.com/o/customers.json?alt=media&token=54d1a9fa-d9cc-455c-8c64-a898aa7eb3a4'; \n\n  //private storageKey = 'customers';\n  //private customers: Customer[] = [];\n\n  /**\n   * @description \n   * Constructor del servicio. Inicializa el servicio HTTP y el servicio de encriptación.\n   * \n   * @param {HttpClient} http - Servicio HTTP para realizar solicitudes.\n   * @param {CryptoService} cryptoService - Servicio de encriptación.\n   */\n  constructor(private http: HttpClient, private cryptoService: CryptoService) {}\n\n  /**\n   * @description \n   * Sobrescribe el archivo JSON con la lista de clientes proporcionada.\n   * \n   * @param {Customer[]} listaClientes - La lista de clientes a sobrescribir en el archivo JSON.\n   */\n  MetodoCliente(listaClientes: Customer[]): void {\n    console.log('listaClientes', listaClientes);\n    this.http.post(this.jsonUrl, listaClientes, this.httpOptions).subscribe(\n      response => {\n        console.log('Archivo JSON sobrescrito con éxito', response);\n      },\n      error => {\n        console.error('Error al sobrescribir el archivo JSON', error);\n      }\n    );\n  }\n\n  /**\n   * @description \n   * Obtiene la lista de clientes desde el archivo JSON.\n   * \n   * @return {Observable} - Un observable con la lista de clientes.\n   */\n  getCustomers(): Observable {\n    return this.http.get(this.jsonUrl).pipe(\n      catchError(error => {\n        console.error('Error al recuperar clientes:', error);\n        return throwError(error);\n      })\n    );\n  }\n\n  /**\n   * @description \n   * Valida si un correo electrónico ya está registrado.\n   * \n   * @param {string} email - El correo electrónico a validar.\n   * @return {Observable} - Un observable que retorna true si el correo electrónico ya está registrado, de lo contrario false.\n   */\n  validateEmail(email: string): Observable {\n    return this.getCustomers().pipe(\n      map(customers => customers.some(customer => customer.email === email))\n    );\n  }\n\n  /**\n   * @description \n   * Valida las credenciales de inicio de sesión del cliente.\n   * \n   * @param {string} email - El correo electrónico del cliente.\n   * @param {string} password - La contraseña del cliente.\n   * @return {Observable} - Un observable que retorna true si las credenciales son válidas, de lo contrario false.\n   */\n  validateLogin(email: string, password: string): Observable {\n    return this.getCustomers().pipe(\n      map((customers: Customer[]) => {\n        const customer = customers.find(c => c.email === email && this.cryptoService.decrypt(c.password) === password);\n        if (customer) {\n          this.setLoginState(customer);\n        }\n        return !!customer;\n      })\n    );\n  }\n\n  /**\n   * @description \n   * Obtiene un cliente por su correo electrónico.\n   * \n   * @param {string} email - El correo electrónico del cliente.\n   * @return {Observable} - Un observable que retorna el cliente si es encontrado, de lo contrario undefined.\n   */\n  getCustomerByEmail(email: string): Observable {\n    return this.getCustomers().pipe(\n      map(customers => customers.find(customer => customer.email === email))\n    );\n  }\n\n  /**\n   * @description \n   * Actualiza la información de un cliente existente.\n   * \n   * @param {Customer} updatedCustomer - Los datos actualizados del cliente.\n   * @return {Observable} - Un observable con la lista de clientes actualizada.\n   */\n  updateCustomer(updatedCustomer: Customer): Observable {\n    return this.getCustomers().pipe(\n      map(customers => {\n        const index = customers.findIndex(customer => customer.id === updatedCustomer.id);\n        if (index !== -1) {\n          customers[index] = updatedCustomer;\n          this.MetodoCliente(customers);\n        }\n        return customers;\n      })\n    );\n  }\n\n  /**\n   * @description \n   * Agrega un nuevo cliente a la lista.\n   * \n   * @param {Customer} newCustomer - Los datos del nuevo cliente.\n   * @return {Observable} - Un observable con la lista de clientes actualizada.\n   */\n  addCustomer(newCustomer: Customer): Observable {\n    return this.getCustomers().pipe(\n      map(customers => {\n        const customerExists = customers.some(customer => customer.email === newCustomer.email);\n        if (customerExists) {\n          throw new Error('El cliente ya existe.');\n        }\n        newCustomer.id = customers.length > 0 ? Math.max(...customers.map(c => c.id)) + 1 : 1;\n        customers.push(newCustomer);\n        this.MetodoCliente(customers);\n        return customers;\n      }),\n      catchError(error => {\n        console.error('Error al agregar cliente:', error);\n        return throwError(error);\n      })\n    );\n  }\n\n  /**\n   * @description \n   * Muestra una alerta en la interfaz de usuario.\n   * \n   * @param {string} mensaje - El mensaje de la alerta.\n   * @param {string} tipo - El tipo de alerta (e.g., 'success', 'danger').\n   */\n  mostrarAlerta(mensaje: string, tipo: string): void {\n    const alertaDiv = document.createElement('div');\n    alertaDiv.className = `alert alert-${tipo}`;\n    alertaDiv.appendChild(document.createTextNode(mensaje));\n    const container = document.querySelector('.container');\n    if (container) {\n      const firstChild = container.firstChild;\n      if (firstChild) {\n        container.insertBefore(alertaDiv, firstChild);\n      } else {\n        container.appendChild(alertaDiv);\n      }\n\n      setTimeout(() => {\n        const alerta = document.querySelector('.alert');\n        if (alerta) {\n          alerta.remove();\n        }\n      }, 6000);\n    }\n  }\n\n  /**\n   * @description \n   * Verifica si localStorage está disponible.\n   * \n   * @return {boolean} - Retorna true si localStorage está disponible, de lo contrario false.\n   */\n  isLocalStorageAvailable(): boolean {\n    try {\n      const test = '__test__';\n      localStorage.setItem(test, test);\n      localStorage.removeItem(test);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * @description \n   * Establece el estado de inicio de sesión del cliente.\n   * \n   * @param {Customer} customer - El cliente que ha iniciado sesión.\n   */\n  setLoginState(customer: Customer): void {\n    if (this.isLocalStorageAvailable()) {\n      localStorage.setItem('loggedInClient', JSON.stringify(customer));\n    }\n  }\n\n  /**\n   * @description \n   * Verifica el estado de inicio de sesión del cliente.\n   * \n   * @return {boolean} - Retorna true si el cliente ha iniciado sesión, de lo contrario false.\n   */\n  checkLoginState(): boolean {\n    if (this.isLocalStorageAvailable()) {\n      const loggedInClient = JSON.parse(localStorage.getItem('loggedInClient') || 'null');\n      return loggedInClient !== null;\n    }\n    return false;\n  }\n\n  /**\n   * @description \n   * Obtiene el correo electrónico del cliente logueado.\n   * \n   * @return {string} - Retorna el correo electrónico del cliente logueado.\n   */\n  getLoggedInClientEmail(): string {\n    if (this.isLocalStorageAvailable()) {\n      const loggedInUser = JSON.parse(localStorage.getItem('loggedInClient') || '');\n      return loggedInUser ? loggedInUser.email : '';\n    }\n    return '';\n  }\n\n  /**\n   * @description \n   * Cierra la sesión del cliente.\n   */\n  logout(): void {\n    if (this.isLocalStorageAvailable()) {\n      console.log('Logout cliente.');\n      localStorage.removeItem('loggedInClient');\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkLoginState\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigationService: NavigationService, platformId: Object, customersService: CustomersService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/home/home.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customersService\n                                                  \n                                                        \n                                                                        CustomersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkLoginState\n                        \n                    \n                \n            \n            \n                \ncheckLoginState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NavigationService } from '../../services/navigation.service';\nimport { CustomersService } from '../../services/customers.service';\n\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.scss'\n})\nexport class HomeComponent implements OnInit, AfterViewInit {\n\n  constructor(\n    private navigationService: NavigationService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private customersService: CustomersService) { }\n\n    ngOnInit(): void {\n      this.checkLoginState();\n    }\n  \n    checkLoginState(): void {\n      if (isPlatformBrowser(this.platformId)) {\n        if (this.customersService.checkLoginState()) {\n          // Ocultar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n          document.getElementById('loginMenu')!.style.display = 'none';\n          document.getElementById('registerMenu')!.style.display = 'none';\n          // Mostrar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n          document.getElementById('profileMenu')!.style.display = 'block';\n          document.getElementById('logoutMenu')!.style.display = 'block';\n        } else {\n          // Ocultar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n          document.getElementById('profileMenu')!.style.display = 'none';\n          document.getElementById('logoutMenu')!.style.display = 'none';\n          // Mostrar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n          document.getElementById('loginMenu')!.style.display = 'block';\n          document.getElementById('registerMenu')!.style.display = 'block';\n        }\n      }\n    }\n\n    ngAfterViewInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      const links = document.querySelectorAll('a');\n      links.forEach(link => {\n        link.addEventListener('click', (event: Event) => {\n          event.preventDefault();\n          const target = event.target as HTMLElement;\n          const href = target.getAttribute('href');\n          if (href) {\n            this.navigationService.navigateWithDelay(href);\n          }\n        });\n      });\n    }\n  }\n}\n\n    \n\n    \n            \n    \n        \n            \n                \n                    \n                    Puente Mágico\n                \n                    \n                \n                \n                    \n                        \n                            Home\n                        \n                        \n                            Ver Catalogo\n                        \n                        \n                            Contacto\n                        \n                        \n                            Iniciar Sesión\n                        \n                        \n                            Registro Cliente\n                        \n                        \n                            Perfil Cliente\n                        \n                        \n                            Cerrar Sesión\n                        \n                        \n                            Carro Compra\n                        \n                    \n                \n            \n                \n    \n\n    \n    \n        \n            \n                Bienvenidos a Puente Mágico\n                Papeleria, impresión, sublimación, carpinteria, la tecnologia CNC router y láser se unen para hacer tus regalos, pedidos y proyectos, algo especial y personalizado.\n            \n        \n        \n            \n                \n                    \n                    \n                        Papelería\n                        Cuadernos, libretas, agendas, stickers.\n                        Ver Catalogo\n                    \n                \n            \n            \n                \n                    \n                    \n                        Estampado y sublimación\n                        Textiles, accesorios, laminas aluminio.\n                        Ver Catalogo\n                    \n                \n            \n            \n                \n                    \n                    \n                        Carpintería\n                        Tecnología router y láser.\n                        Ver Catalogo\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            &copy; 2024 Puente Mágico. Reservados todos los derechos.\n        \n    \n    \n    \n    \n        \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Puente Mágico                                                                                                                                            Home                                                                            Ver Catalogo                                                                            Contacto                                                                            Iniciar Sesión                                                                            Registro Cliente                                                                            Perfil Cliente                                                                            Cerrar Sesión                                                                            Carro Compra                                                                                                                                        Bienvenidos a Puente Mágico                Papeleria, impresión, sublimación, carpinteria, la tecnologia CNC router y láser se unen para hacer tus regalos, pedidos y proyectos, algo especial y personalizado.                                                                                                                        Papelería                        Cuadernos, libretas, agendas, stickers.                        Ver Catalogo                                                                                                                                            Estampado y sublimación                        Textiles, accesorios, laminas aluminio.                        Ver Catalogo                                                                                                                                            Carpintería                        Tecnología router y láser.                        Ver Catalogo                                                                                        © 2024 Puente Mágico. Reservados todos los derechos.                                    '\n    var COMPONENTS = [{'name': 'AdminClientManagementComponent', 'selector': 'app-admin-client-management'},{'name': 'AdminContactManagementComponent', 'selector': 'app-admin-contact-management'},{'name': 'AdminLoginComponent', 'selector': 'app-admin-login'},{'name': 'AdminLogoutComponent', 'selector': 'app-admin-logout'},{'name': 'AdminOrderMonitoringComponent', 'selector': 'app-admin-order-monitoring'},{'name': 'AdminUserManagementComponent', 'selector': 'app-admin-user-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'ProductCatalogComponent', 'selector': 'app-product-catalog'},{'name': 'ProductDetailAluminioComponent', 'selector': 'app-product-detail-aluminio'},{'name': 'ProductDetailCroqueraComponent', 'selector': 'app-product-detail-croquera'},{'name': 'ProductDetailCuadernoComponent', 'selector': 'app-product-detail-cuaderno'},{'name': 'ProductDetailLibretaComponent', 'selector': 'app-product-detail-libreta'},{'name': 'ProductDetailPoleraComponent', 'selector': 'app-product-detail-polera'},{'name': 'ProductDetailTablaComponent', 'selector': 'app-product-detail-tabla'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkLoginState\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigationService: NavigationService, platformId: Object, fb: FormBuilder, customersService: CustomersService, renderer: Renderer2, el: ElementRef, cryptoService: CryptoService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customersService\n                                                  \n                                                        \n                                                                        CustomersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cryptoService\n                                                  \n                                                        \n                                                                        CryptoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkLoginState\n                        \n                    \n                \n            \n            \n                \ncheckLoginState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NavigationService } from '../../services/navigation.service';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CustomersService } from '../../services/customers.service';\nimport { Renderer2, ElementRef } from '@angular/core';\nimport { CryptoService } from '../../services/crypto.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [CommonModule, RouterModule, ReactiveFormsModule],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss'\n})\nexport class LoginComponent implements OnInit, AfterViewInit {\n  loginForm: FormGroup;\n  \n  constructor(\n    private navigationService: NavigationService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n\t  private fb: FormBuilder,\n    private customersService: CustomersService,\n    private renderer: Renderer2,\n    private el: ElementRef,\n    private cryptoService: CryptoService,\n    private router: Router) { \n      this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]]});\n\t}\n\n  ngOnInit(): void {\n    this.checkLoginState();\n  }\n\n  ngAfterViewInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      const links = document.querySelectorAll('a');\n      links.forEach(link => {\n        link.addEventListener('click', (event: Event) => {\n          event.preventDefault();\n          const target = event.target as HTMLElement;\n          const href = target.getAttribute('href');\n          if (href) {\n            this.navigationService.navigateWithDelay(href);\n          }\n        });\n      });\n    }\n  }\n\n  onSubmit() {\n    if (this.loginForm.valid) {\n      const email = this.loginForm.value.email;\n      const password = this.loginForm.value.password;\n\n      this.customersService.validateLogin(email, password).subscribe(isValid => {\n        if (isValid) {\n          console.log('Inicio de sesión exitoso:', { email });\n          this.customersService.mostrarAlerta('Inicio de sesión exitoso.', 'success');\n          alert('Inicio de sesión exitoso!');\n          this.router.navigate(['/home']);\n        } else {\n          console.log('Email o contraseña incorrectos.');\n          this.customersService.mostrarAlerta('Email o contraseña incorrectos.', 'danger');\n        }\n      });\n    } else {\n      console.log('Formulario invalido');\n    }\n  }\n\n  checkLoginState(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.customersService.checkLoginState()) {\n        // Ocultar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n        document.getElementById('loginMenu')!.style.display = 'none';\n        document.getElementById('registerMenu')!.style.display = 'none';\n        // Mostrar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n        document.getElementById('profileMenu')!.style.display = 'block';\n        document.getElementById('logoutMenu')!.style.display = 'block';\n      } else {\n        // Ocultar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n        document.getElementById('profileMenu')!.style.display = 'none';\n        document.getElementById('logoutMenu')!.style.display = 'none';\n        // Mostrar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n        document.getElementById('loginMenu')!.style.display = 'block';\n        document.getElementById('registerMenu')!.style.display = 'block';\n      }\n    }\n  }\n}\n\n    \n\n    \n            \n    \n        \n            \n                \n                    \n                    Puente Mágico\n                \n                    \n                \n                \n                    \n                        \n                            Home\n                        \n                        \n                            Ver Catalogo\n                        \n                        \n                            Contacto\n                        \n                        \n                            Iniciar Sesión\n                        \n                        \n                            Registro Cliente\n                        \n                        \n                            Perfil Cliente\n                        \n                        \n                            Cerrar Sesión\n                        \n                        \n                            Carro Compra\n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            \n                Login\n                \n                    \n                        Correo Electrónico:\n                        \n                        \n                            Correo Electrónico es obligatorio.\n                            Formato de correo electrónico incorrecto.\n                        \n                    \n                    \n                        Contraseña:\n                        \n                        \n                            Contraseña es obligatoria.\n                        \n                    \n                    \n                    Iniciar Sesión\n                \n                \n                    ¿Olvidó su contraseña?\n                \n            \n        \n    \n\n    \n    \n        \n            &copy; 2024 Puente Mágico. Reservados todos los derechos.\n        \n    \n    \n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Puente Mágico                                                                                                                                            Home                                                                            Ver Catalogo                                                                            Contacto                                                                            Iniciar Sesión                                                                            Registro Cliente                                                                            Perfil Cliente                                                                            Cerrar Sesión                                                                            Carro Compra                                                                                                                                Login                                                            Correo Electrónico:                                                                            Correo Electrónico es obligatorio.                            Formato de correo electrónico incorrecto.                                                                                        Contraseña:                                                                            Contraseña es obligatoria.                                                                                    Iniciar Sesión                                                    ¿Olvidó su contraseña?                                                                    © 2024 Puente Mágico. Reservados todos los derechos.                                    '\n    var COMPONENTS = [{'name': 'AdminClientManagementComponent', 'selector': 'app-admin-client-management'},{'name': 'AdminContactManagementComponent', 'selector': 'app-admin-contact-management'},{'name': 'AdminLoginComponent', 'selector': 'app-admin-login'},{'name': 'AdminLogoutComponent', 'selector': 'app-admin-logout'},{'name': 'AdminOrderMonitoringComponent', 'selector': 'app-admin-order-monitoring'},{'name': 'AdminUserManagementComponent', 'selector': 'app-admin-user-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'ProductCatalogComponent', 'selector': 'app-product-catalog'},{'name': 'ProductDetailAluminioComponent', 'selector': 'app-product-detail-aluminio'},{'name': 'ProductDetailCroqueraComponent', 'selector': 'app-product-detail-croquera'},{'name': 'ProductDetailCuadernoComponent', 'selector': 'app-product-detail-cuaderno'},{'name': 'ProductDetailLibretaComponent', 'selector': 'app-product-detail-libreta'},{'name': 'ProductDetailPoleraComponent', 'selector': 'app-product-detail-polera'},{'name': 'ProductDetailTablaComponent', 'selector': 'app-product-detail-tabla'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogoutComponent.html":{"url":"components/LogoutComponent.html","title":"component - LogoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/logout/logout.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./logout.component.html\n            \n\n\n\n            \n                styleUrl\n                ./logout.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkLoginState\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigationService: NavigationService, platformId: Object, customersService: CustomersService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/logout/logout.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customersService\n                                                  \n                                                        \n                                                                        CustomersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkLoginState\n                        \n                    \n                \n            \n            \n                \ncheckLoginState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/logout/logout.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/logout/logout.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/logout/logout.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NavigationService } from '../../services/navigation.service';\nimport { CustomersService } from '../../services/customers.service';\n\n@Component({\n  selector: 'app-logout',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  templateUrl: './logout.component.html',\n  styleUrl: './logout.component.scss'\n})\nexport class LogoutComponent implements OnInit, AfterViewInit {\n\n  constructor(\n    private navigationService: NavigationService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private customersService: CustomersService\n  ) { }\n\n  ngOnInit(): void {\n    this.checkLoginState();\n  }\n\n  ngAfterViewInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      const links = document.querySelectorAll('a');\n      links.forEach(link => {\n        link.addEventListener('click', (event: Event) => {\n          event.preventDefault();\n          const target = event.target as HTMLElement;\n          const href = target.getAttribute('href');\n          if (href) {\n            this.navigationService.navigateWithDelay(href);\n          }\n        });\n      });\n    }\n    this.customersService.logout();\n    this.checkLoginState();\n  }\n\n  checkLoginState(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.customersService.checkLoginState()) {\n        // Ocultar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n        document.getElementById('loginMenu')!.style.display = 'none';\n        document.getElementById('registerMenu')!.style.display = 'none';\n        // Mostrar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n        document.getElementById('profileMenu')!.style.display = 'block';\n        document.getElementById('logoutMenu')!.style.display = 'block';\n      } else {\n        // Ocultar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n        document.getElementById('profileMenu')!.style.display = 'none';\n        document.getElementById('logoutMenu')!.style.display = 'none';\n        // Mostrar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n        document.getElementById('loginMenu')!.style.display = 'block';\n        document.getElementById('registerMenu')!.style.display = 'block';\n      }\n    }\n  }\n}\n\n    \n\n    \n            \n    \n        \n            \n                \n                    \n                    Puente Mágico\n                \n                    \n                \n                \n                    \n                        \n                            Home\n                        \n                        \n                            Ver Catalogo\n                        \n                        \n                            Contacto\n                        \n                        \n                            Iniciar Sesión\n                        \n                        \n                            Registro Cliente\n                        \n                        \n                            Perfil Cliente\n                        \n                        \n                            Cerrar Sesión\n                        \n                        \n                            Carro Compra\n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            \n                Cerrar sesión exitosamente\n                Has cerrado tu sesión correctamente.\n                Iniciar Sesión\n                \n                Ir a Home\n            \n        \n    \n\n    \n    \n        \n            &copy; 2024 Puente Mágico. Reservados todos los derechos.\n        \n    \n    \n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Puente Mágico                                                                                                                                            Home                                                                            Ver Catalogo                                                                            Contacto                                                                            Iniciar Sesión                                                                            Registro Cliente                                                                            Perfil Cliente                                                                            Cerrar Sesión                                                                            Carro Compra                                                                                                                                Cerrar sesión exitosamente                Has cerrado tu sesión correctamente.                Iniciar Sesión                                Ir a Home                                                    © 2024 Puente Mágico. Reservados todos los derechos.                                    '\n    var COMPONENTS = [{'name': 'AdminClientManagementComponent', 'selector': 'app-admin-client-management'},{'name': 'AdminContactManagementComponent', 'selector': 'app-admin-contact-management'},{'name': 'AdminLoginComponent', 'selector': 'app-admin-login'},{'name': 'AdminLogoutComponent', 'selector': 'app-admin-logout'},{'name': 'AdminOrderMonitoringComponent', 'selector': 'app-admin-order-monitoring'},{'name': 'AdminUserManagementComponent', 'selector': 'app-admin-user-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'ProductCatalogComponent', 'selector': 'app-product-catalog'},{'name': 'ProductDetailAluminioComponent', 'selector': 'app-product-detail-aluminio'},{'name': 'ProductDetailCroqueraComponent', 'selector': 'app-product-detail-croquera'},{'name': 'ProductDetailCuadernoComponent', 'selector': 'app-product-detail-cuaderno'},{'name': 'ProductDetailLibretaComponent', 'selector': 'app-product-detail-libreta'},{'name': 'ProductDetailPoleraComponent', 'selector': 'app-product-detail-polera'},{'name': 'ProductDetailTablaComponent', 'selector': 'app-product-detail-tabla'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NavigationService.html":{"url":"injectables/NavigationService.html","title":"injectable - NavigationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NavigationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/navigation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateWithDelay\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/navigation.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateWithDelay\n                        \n                    \n                \n            \n            \n                \nnavigateWithDelay(href: string, delay: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/navigation.service.ts:19\n                        \n                    \n\n\n            \n                \n                        Navega a una URL específica después de un retraso opcional, mostrando una pantalla de carga mientras tanto.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                href\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nLa URL a la que se debe navegar.\n\n\n                                            \n                                        \n                                        \n                                                delay\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1000\n                                            \n\n                                            \n                                                    \nEl retraso en milisegundos antes de navegar. El valor predeterminado es 1000 ms.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavigationService {\n\n  constructor(private router: Router) { }\n\n  /**\n   * @description \n   * Navega a una URL específica después de un retraso opcional, mostrando una pantalla de carga mientras tanto.\n   * \n   * @param {string} href - La URL a la que se debe navegar.\n   * @param {number} [delay=1000] - El retraso en milisegundos antes de navegar. El valor predeterminado es 1000 ms.\n   * @return {void}\n   */\n  navigateWithDelay(href: string, delay: number = 1000): void {\n    const loadingScreen = document.getElementById('loading-screen');\n    \n    if (loadingScreen) {\n      loadingScreen.classList.add('active');\n    }\n    \n    setTimeout(() => {\n      // Verificar si el href es una URL relativa que debe ser manejada por el router\n      if (href.startsWith('/')) {\n        this.router.navigateByUrl(href).then(() => {\n          if (loadingScreen) {\n            loadingScreen.classList.remove('active');\n          }\n        });\n      } else {\n        window.location.href = href;\n      }\n    }, delay);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Order.html":{"url":"interfaces/Order.html","title":"interface - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/orders.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            estado\n                                        \n                                \n                                \n                                        \n                                            fecha\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            total\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        estado\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        estado:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fecha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fecha:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ninterface Cart {\n  product: string;\n  image: string;\n  price: number;\n  quantity: number;\n  total: number;\n}\n\ninterface Order {\n  email: string;\n  id: number;\n  total: number;\n  fecha: Date;\n  estado: string;\n}\n\ninterface OrderDetail extends Cart {\n  id: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n  private carts: Cart[] = [];\n  private orders: Order[] = [];\n  private orderdetails: OrderDetail[] = [];\n  private orderStorageKey = 'orders';\n  private orderDetailsStorageKey = 'orderdetails';\n\n  /**\n   * @description \n   * Constructor del servicio. Carga los carros de compra, órdenes y detalles de órdenes desde localStorage.\n   * \n   */\n  constructor() {\n    if (this.isLocalStorageAvailable()) {\n      const cartsSaved = localStorage.getItem('carts');\n      this.carts = cartsSaved ? JSON.parse(cartsSaved) : [];\n      const ordersSaved = localStorage.getItem('orders');\n      this.orders = ordersSaved ? JSON.parse(ordersSaved) : [];\n      const orderdetailsSaved = localStorage.getItem('orderdetails');\n      this.orderdetails = orderdetailsSaved ? JSON.parse(orderdetailsSaved) : [];\n      this.loadOrdersFromLocalStorage();\n    } else {\n      this.carts = [];\n      this.orders = [];\n      this.orderdetails = [];\n    }\n  }\n\n  /**\n   * @description \n   * Registra un nuevo producto en el carro de compra.\n   * \n   * @param {string} product - El nombre del producto.\n   * @param {string} image - La URL de la imagen del producto.\n   * @param {number} price - El precio del producto.\n   * @param {number} quantity - La cantidad del producto.\n   * @param {number} total - El total del producto.\n   * @return {boolean} - Retorna true si el producto fue registrado exitosamente en el carro, de lo contrario false.\n   */\n  registerCarts(product: string, image: string, price: number, quantity: number, total: number): boolean {\n    console.log('Intentando registrar producto en carro compra:', { product, image, price, quantity, total });\n\n    const newCart: Cart = { product, image, price, quantity, total };\n    this.carts.push(newCart);\n    if (this.isLocalStorageAvailable()) {\n      localStorage.setItem('carts', JSON.stringify(this.carts));\n    }\n    this.mostrarAlerta('Producto registrado exitosamente en carro compra.', 'success');\n    console.log('Producto registrado exitosamente en carro compra:', newCart);\n    return true;\n  }\n\n  /**\n   * @description \n   * Limpia el carro de compra.\n   * \n   * @return {void}\n   */\n  clearCart(): void {\n    this.carts = [];\n    if (this.isLocalStorageAvailable()) {\n      localStorage.removeItem('carts');\n    }\n  }\n\n  /**\n   * @description \n   * Elimina un producto del carro de compra.\n   * \n   * @param {number} index - El índice del producto a eliminar.\n   * @return {void}\n   */\n  removeFromCart(index: number): void {\n    this.carts.splice(index, 1);\n    if (this.isLocalStorageAvailable()) {\n      localStorage.setItem('carts', JSON.stringify(this.carts));\n    }\n  }\n\n  /**\n   * @description \n   * Registra una nueva orden.\n   * \n   * @param {string} email - El correo electrónico del cliente.\n   * @param {number} total - El total de la orden.\n   * @return {number} - Retorna el ID de la nueva orden registrada.\n   */\n  registerOrders(email: string, total: number): number {\n    console.log('Intentando registrar orden cliente:', { email, total });\n    const fecha = new Date();\n    const estado = 'Pendiente';\n    const id = this.orders.length + 1;\n\n    const newOrder: Order = { email, id, total, fecha, estado };\n    this.orders.push(newOrder);\n    if (this.isLocalStorageAvailable()) {\n      localStorage.setItem('orders', JSON.stringify(this.orders));\n    }\n    console.log('Orden cliente registrado exitosamente:', newOrder);\n    return id;\n  }\n\n  /**\n   * @description \n   * Registra los detalles de una orden.\n   * \n   * @param {number} id - El ID de la orden.\n   * @return {boolean} - Retorna true si los detalles de la orden fueron registrados exitosamente, de lo contrario false.\n   */\n  registerOrderdetails(id: number): boolean {\n    if (this.isLocalStorageAvailable()) {\n      const cart = JSON.parse(localStorage.getItem('carts') || '[]');\n      const orderDetail = cart.map((item: any) => ({\n        ...item,\n        id: id\n      }));\n\n      const existingItems = JSON.parse(localStorage.getItem('orderdetails') || '[]');\n      const updatedItems = existingItems.concat(orderDetail);\n      \n      localStorage.setItem('orderdetails', JSON.stringify(updatedItems));\n\n      console.log('Detalle compra registrado exitosamente:', orderDetail);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @description \n   * Actualiza una orden existente.\n   * \n   * @param {string} email - El correo electrónico del cliente.\n   * @param {number} id - El ID de la orden.\n   * @param {number} total - El total de la orden.\n   * @param {string} estado - El estado de la orden.\n   * @return {boolean} - Retorna true si la orden fue actualizada exitosamente, de lo contrario false.\n   */\n  updateOrders(email: string, id: number, total: number, estado: string): boolean {\n    console.log('Intentando actualizar orden cliente:', { email, id });\n    const orderExisting = this.orders.find(order => order.id === id);\n    const fecha = new Date();\n\n    if (orderExisting) {\n      const orderIndex = this.orders.findIndex(contact => contact.id === id);\n      if (orderIndex !== -1) {\n        console.log('Se actualiza estado orden cliente');\n        this.orders[orderIndex] = { email: email, id: id, total: total, fecha: fecha, estado : estado };\n        localStorage.setItem('orders', JSON.stringify(this.orders));\n\n        console.log('Orden cliente actualizado exitosamente:', this.orders[orderIndex]);\n        return true;\n      } else {\n        console.log('Error al actualizar el orden cliente:', email);\n        return false;\n      } \n    }\n\n    this.mostrarAlerta('Orden cliente no actualizado.', 'danger');\n    console.log('Orden cliente no actualizado:', email);\n    return false;\n  }\n\n  /**\n   * @description \n   * Muestra una alerta en la interfaz de usuario.\n   * \n   * @param {string} mensaje - El mensaje de la alerta.\n   * @param {string} tipo - El tipo de alerta (e.g., 'success', 'danger').\n   * @return {void}\n   */\n  private mostrarAlerta(mensaje: string, tipo: string): void {\n    const alertaDiv = document.createElement('div');\n    alertaDiv.className = `alert alert-${tipo}`;\n    alertaDiv.appendChild(document.createTextNode(mensaje));\n    const container = document.querySelector('.container');\n    if (container) {\n      const firstChild = container.firstChild;\n      if (firstChild) {\n        container.insertBefore(alertaDiv, firstChild);\n      } else {\n        container.appendChild(alertaDiv);\n      }\n\n      setTimeout(() => {\n        const alerta = document.querySelector('.alert');\n        if (alerta) {\n          alerta.remove();\n        }\n      }, 6000);\n    }\n  }\n\n  /**\n   * @description \n   * Verifica si localStorage está disponible.\n   * \n   * @return {boolean} - Retorna true si localStorage está disponible, de lo contrario false.\n   */\n  private isLocalStorageAvailable(): boolean {\n    try {\n      const test = '__test__';\n      localStorage.setItem(test, test);\n      localStorage.removeItem(test);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * @description \n   * Busca una orden por su ID.\n   * \n   * @param {number} id - El ID de la orden.\n   * @return {boolean} - Retorna true si la orden fue encontrada, de lo contrario false.\n   */\n  findOrder(id: number): boolean {\n    console.log('Buscando orden cliente:', { id });\n    const order = this.orders.find(order => order.id === id);\n    if (order) {\n      this.mostrarAlerta('Orden cliente encontrado.', 'success');\n      console.log('Orden cliente encontrado:', order);\n      return true;\n    } else {\n      this.mostrarAlerta('Orden cliente no encontrado.', 'danger');\n      console.log('Orden cliente no encontrado.');\n      return false;\n    }\n  }\n\n  /**\n   * @description \n   * Formatea una fecha en formato YYYY-MM-DD a DD-MM-YYYY.\n   * \n   * @param {string} date - La fecha en formato YYYY-MM-DD.\n   * @return {string} - La fecha formateada en formato DD-MM-YYYY.\n   */\n  private formatToFormDate(date: string): string {\n    const [year, month, day] = date.split('-');\n    return `${day}-${month}-${year}`;\n  }\n\n  /**\n   * @description \n   * Formatea una fecha en formato DD-MM-YYYY a YYYY-MM-DD.\n   * \n   * @param {string} date - La fecha en formato DD-MM-YYYY.\n   * @return {string} - La fecha formateada en formato YYYY-MM-DD.\n   */\n  private formatToStorageDate(date: string): string {\n    const [day, month, year] = date.split('-');\n    return `${year}-${month}-${day}`;\n  }\n\n  /**\n   * @description \n   * Carga las órdenes y los detalles de las órdenes desde el localStorage.\n   * \n   * @return {void}\n   */\n  private loadOrdersFromLocalStorage(): void {\n    const ordersSaved = localStorage.getItem(this.orderStorageKey);\n    const orderDetailsSaved = localStorage.getItem(this.orderDetailsStorageKey);\n    this.orders = ordersSaved ? JSON.parse(ordersSaved) : [];\n    this.orderdetails = orderDetailsSaved ? JSON.parse(orderDetailsSaved) : [];\n  }\n\n  /**\n   * @description \n   * Obtiene todas las órdenes.\n   * \n   * @return {Order[]} Lista de órdenes.\n   */\n  getOrders(): Order[] {\n    return this.orders;\n  }\n\n  /**\n   * @description \n   * Obtiene los detalles de una orden específica.\n   * \n   * @param {number} orderId - El ID de la orden.\n   * @return {OrderDetail[]} Lista de detalles de la orden.\n   */\n  getOrderDetails(orderId: number): OrderDetail[] {\n    return this.orderdetails.filter(detail => detail.id === orderId);\n  }\n\n  /**\n   * @description \n   * Actualiza el estado de una orden.\n   * \n   * @param {number} orderId - El ID de la orden.\n   * @param {string} status - El nuevo estado de la orden.\n   * @return {void}\n   */\n  updateOrderStatus(orderId: number, status: string): void {\n    const order = this.orders.find(o => o.id === orderId);\n    if (order) {\n      order.estado = status;\n      this.saveOrdersToLocalStorage();\n    }\n  }\n\n  /**\n   * @description \n   * Guarda las órdenes en el localStorage.\n   * \n   * @return {void}\n   */\n  saveOrdersToLocalStorage(): void {\n    localStorage.setItem(this.orderStorageKey, JSON.stringify(this.orders));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Order-1.html":{"url":"interfaces/Order-1.html","title":"interface - Order-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin-order-monitoring/admin-order-monitoring.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            estado\n                                        \n                                \n                                \n                                        \n                                            fecha\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            total\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        estado\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        estado:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fecha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fecha:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, AfterViewInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NavigationService } from '../../services/navigation.service';\nimport { UsersService } from '../../services/users.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { OrdersService } from '../../services/orders.service';\n\ninterface Order {\n  email: string;\n  id: number;\n  total: number;\n  fecha: Date;\n  estado: string;\n}\n\ninterface Orderdetail {\n  id: number;\n  product: string;\n  image: string;\n  price: number;\n  quantity: number;\n  total: number;\n}\n\n@Component({\n  selector: 'app-admin-order-monitoring',\n  standalone: true,\n  imports: [CommonModule, RouterModule, ReactiveFormsModule],\n  templateUrl: './admin-order-monitoring.component.html',\n  styleUrl: './admin-order-monitoring.component.scss'\n})\nexport class AdminOrderMonitoringComponent implements OnInit, AfterViewInit {\n  orders: Order[] = [];\n  selectedOrderDetails: Orderdetail[] = [];\n  selectedOrderId: number | null = null;\n  editOrderForm: FormGroup;\n  \n  constructor(\n    private navigationService: NavigationService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private usersService: UsersService,\n    private router: Router,\n    private orderService: OrdersService,\n    private fb: FormBuilder\n  ) {\n    this.editOrderForm = this.fb.group({\n      clientName: ['', Validators.required],\n      productName: ['', Validators.required],\n      quantity: ['', Validators.required],\n      status: ['', Validators.required]\n    });\n  }\n\n  ngAfterViewInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      const links = document.querySelectorAll('a');\n      links.forEach(link => {\n        link.addEventListener('click', (event: Event) => {\n          event.preventDefault();\n          const target = event.target as HTMLElement;\n          const href = target.getAttribute('href');\n          if (href) {\n            this.navigationService.navigateWithDelay(href);\n          }\n        });\n      });\n    }\n  }\n\n  ngOnInit(): void {\n    this.checkLoginState();\n\tthis.orders = this.orderService.getOrders();\n  }\n\n  checkLoginState(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.usersService.checkLoginState()) {\n        // Redirigir al administrador\n        //this.router.navigate(['/admin-user-management']);\n        console.log('Usuario logueado.');\n      } else {\n        // Redirigir al administrador\n        this.router.navigate(['/admin-login']);\n        console.log('Usuario no logueado.');\n      }\n    }\n  }\n\n  selectOrder(orderId: number): void {\n    this.selectedOrderId = orderId;\n    this.selectedOrderDetails = this.orderService.getOrderDetails(orderId);\n    const order = this.orders.find(o => o.id === orderId);\n    if (order) {\n      this.editOrderForm.patchValue({\n        clientName: order.email,\n        productName: this.selectedOrderDetails.map(detail => detail.product).join(', '),\n        quantity: this.selectedOrderDetails.reduce((acc, detail) => acc + detail.quantity, 0),\n        status: order.estado\n      });\n    }\n  }\n\n  getOrderProducts(orderId: number): string {\n    const products = this.orderService.getOrderDetails(orderId).map(detail => detail.product);\n    return products.join(', ');\n  }\n\n  getOrderQuantity(orderId: number): number {\n    const quantity = this.orderService.getOrderDetails(orderId).reduce((acc, detail) => acc + detail.quantity, 0);\n    return quantity;\n  }\n\n  updateOrderStatus(): void {\n    if (this.selectedOrderId !== null) {\n      const newStatus = this.editOrderForm.value.status;\n      this.orderService.updateOrderStatus(this.selectedOrderId, newStatus);\n      this.orders = this.orderService.getOrders();\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderDetail.html":{"url":"interfaces/OrderDetail.html","title":"interface - OrderDetail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrderDetail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/orders.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Cart\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ninterface Cart {\n  product: string;\n  image: string;\n  price: number;\n  quantity: number;\n  total: number;\n}\n\ninterface Order {\n  email: string;\n  id: number;\n  total: number;\n  fecha: Date;\n  estado: string;\n}\n\ninterface OrderDetail extends Cart {\n  id: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n  private carts: Cart[] = [];\n  private orders: Order[] = [];\n  private orderdetails: OrderDetail[] = [];\n  private orderStorageKey = 'orders';\n  private orderDetailsStorageKey = 'orderdetails';\n\n  /**\n   * @description \n   * Constructor del servicio. Carga los carros de compra, órdenes y detalles de órdenes desde localStorage.\n   * \n   */\n  constructor() {\n    if (this.isLocalStorageAvailable()) {\n      const cartsSaved = localStorage.getItem('carts');\n      this.carts = cartsSaved ? JSON.parse(cartsSaved) : [];\n      const ordersSaved = localStorage.getItem('orders');\n      this.orders = ordersSaved ? JSON.parse(ordersSaved) : [];\n      const orderdetailsSaved = localStorage.getItem('orderdetails');\n      this.orderdetails = orderdetailsSaved ? JSON.parse(orderdetailsSaved) : [];\n      this.loadOrdersFromLocalStorage();\n    } else {\n      this.carts = [];\n      this.orders = [];\n      this.orderdetails = [];\n    }\n  }\n\n  /**\n   * @description \n   * Registra un nuevo producto en el carro de compra.\n   * \n   * @param {string} product - El nombre del producto.\n   * @param {string} image - La URL de la imagen del producto.\n   * @param {number} price - El precio del producto.\n   * @param {number} quantity - La cantidad del producto.\n   * @param {number} total - El total del producto.\n   * @return {boolean} - Retorna true si el producto fue registrado exitosamente en el carro, de lo contrario false.\n   */\n  registerCarts(product: string, image: string, price: number, quantity: number, total: number): boolean {\n    console.log('Intentando registrar producto en carro compra:', { product, image, price, quantity, total });\n\n    const newCart: Cart = { product, image, price, quantity, total };\n    this.carts.push(newCart);\n    if (this.isLocalStorageAvailable()) {\n      localStorage.setItem('carts', JSON.stringify(this.carts));\n    }\n    this.mostrarAlerta('Producto registrado exitosamente en carro compra.', 'success');\n    console.log('Producto registrado exitosamente en carro compra:', newCart);\n    return true;\n  }\n\n  /**\n   * @description \n   * Limpia el carro de compra.\n   * \n   * @return {void}\n   */\n  clearCart(): void {\n    this.carts = [];\n    if (this.isLocalStorageAvailable()) {\n      localStorage.removeItem('carts');\n    }\n  }\n\n  /**\n   * @description \n   * Elimina un producto del carro de compra.\n   * \n   * @param {number} index - El índice del producto a eliminar.\n   * @return {void}\n   */\n  removeFromCart(index: number): void {\n    this.carts.splice(index, 1);\n    if (this.isLocalStorageAvailable()) {\n      localStorage.setItem('carts', JSON.stringify(this.carts));\n    }\n  }\n\n  /**\n   * @description \n   * Registra una nueva orden.\n   * \n   * @param {string} email - El correo electrónico del cliente.\n   * @param {number} total - El total de la orden.\n   * @return {number} - Retorna el ID de la nueva orden registrada.\n   */\n  registerOrders(email: string, total: number): number {\n    console.log('Intentando registrar orden cliente:', { email, total });\n    const fecha = new Date();\n    const estado = 'Pendiente';\n    const id = this.orders.length + 1;\n\n    const newOrder: Order = { email, id, total, fecha, estado };\n    this.orders.push(newOrder);\n    if (this.isLocalStorageAvailable()) {\n      localStorage.setItem('orders', JSON.stringify(this.orders));\n    }\n    console.log('Orden cliente registrado exitosamente:', newOrder);\n    return id;\n  }\n\n  /**\n   * @description \n   * Registra los detalles de una orden.\n   * \n   * @param {number} id - El ID de la orden.\n   * @return {boolean} - Retorna true si los detalles de la orden fueron registrados exitosamente, de lo contrario false.\n   */\n  registerOrderdetails(id: number): boolean {\n    if (this.isLocalStorageAvailable()) {\n      const cart = JSON.parse(localStorage.getItem('carts') || '[]');\n      const orderDetail = cart.map((item: any) => ({\n        ...item,\n        id: id\n      }));\n\n      const existingItems = JSON.parse(localStorage.getItem('orderdetails') || '[]');\n      const updatedItems = existingItems.concat(orderDetail);\n      \n      localStorage.setItem('orderdetails', JSON.stringify(updatedItems));\n\n      console.log('Detalle compra registrado exitosamente:', orderDetail);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @description \n   * Actualiza una orden existente.\n   * \n   * @param {string} email - El correo electrónico del cliente.\n   * @param {number} id - El ID de la orden.\n   * @param {number} total - El total de la orden.\n   * @param {string} estado - El estado de la orden.\n   * @return {boolean} - Retorna true si la orden fue actualizada exitosamente, de lo contrario false.\n   */\n  updateOrders(email: string, id: number, total: number, estado: string): boolean {\n    console.log('Intentando actualizar orden cliente:', { email, id });\n    const orderExisting = this.orders.find(order => order.id === id);\n    const fecha = new Date();\n\n    if (orderExisting) {\n      const orderIndex = this.orders.findIndex(contact => contact.id === id);\n      if (orderIndex !== -1) {\n        console.log('Se actualiza estado orden cliente');\n        this.orders[orderIndex] = { email: email, id: id, total: total, fecha: fecha, estado : estado };\n        localStorage.setItem('orders', JSON.stringify(this.orders));\n\n        console.log('Orden cliente actualizado exitosamente:', this.orders[orderIndex]);\n        return true;\n      } else {\n        console.log('Error al actualizar el orden cliente:', email);\n        return false;\n      } \n    }\n\n    this.mostrarAlerta('Orden cliente no actualizado.', 'danger');\n    console.log('Orden cliente no actualizado:', email);\n    return false;\n  }\n\n  /**\n   * @description \n   * Muestra una alerta en la interfaz de usuario.\n   * \n   * @param {string} mensaje - El mensaje de la alerta.\n   * @param {string} tipo - El tipo de alerta (e.g., 'success', 'danger').\n   * @return {void}\n   */\n  private mostrarAlerta(mensaje: string, tipo: string): void {\n    const alertaDiv = document.createElement('div');\n    alertaDiv.className = `alert alert-${tipo}`;\n    alertaDiv.appendChild(document.createTextNode(mensaje));\n    const container = document.querySelector('.container');\n    if (container) {\n      const firstChild = container.firstChild;\n      if (firstChild) {\n        container.insertBefore(alertaDiv, firstChild);\n      } else {\n        container.appendChild(alertaDiv);\n      }\n\n      setTimeout(() => {\n        const alerta = document.querySelector('.alert');\n        if (alerta) {\n          alerta.remove();\n        }\n      }, 6000);\n    }\n  }\n\n  /**\n   * @description \n   * Verifica si localStorage está disponible.\n   * \n   * @return {boolean} - Retorna true si localStorage está disponible, de lo contrario false.\n   */\n  private isLocalStorageAvailable(): boolean {\n    try {\n      const test = '__test__';\n      localStorage.setItem(test, test);\n      localStorage.removeItem(test);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * @description \n   * Busca una orden por su ID.\n   * \n   * @param {number} id - El ID de la orden.\n   * @return {boolean} - Retorna true si la orden fue encontrada, de lo contrario false.\n   */\n  findOrder(id: number): boolean {\n    console.log('Buscando orden cliente:', { id });\n    const order = this.orders.find(order => order.id === id);\n    if (order) {\n      this.mostrarAlerta('Orden cliente encontrado.', 'success');\n      console.log('Orden cliente encontrado:', order);\n      return true;\n    } else {\n      this.mostrarAlerta('Orden cliente no encontrado.', 'danger');\n      console.log('Orden cliente no encontrado.');\n      return false;\n    }\n  }\n\n  /**\n   * @description \n   * Formatea una fecha en formato YYYY-MM-DD a DD-MM-YYYY.\n   * \n   * @param {string} date - La fecha en formato YYYY-MM-DD.\n   * @return {string} - La fecha formateada en formato DD-MM-YYYY.\n   */\n  private formatToFormDate(date: string): string {\n    const [year, month, day] = date.split('-');\n    return `${day}-${month}-${year}`;\n  }\n\n  /**\n   * @description \n   * Formatea una fecha en formato DD-MM-YYYY a YYYY-MM-DD.\n   * \n   * @param {string} date - La fecha en formato DD-MM-YYYY.\n   * @return {string} - La fecha formateada en formato YYYY-MM-DD.\n   */\n  private formatToStorageDate(date: string): string {\n    const [day, month, year] = date.split('-');\n    return `${year}-${month}-${day}`;\n  }\n\n  /**\n   * @description \n   * Carga las órdenes y los detalles de las órdenes desde el localStorage.\n   * \n   * @return {void}\n   */\n  private loadOrdersFromLocalStorage(): void {\n    const ordersSaved = localStorage.getItem(this.orderStorageKey);\n    const orderDetailsSaved = localStorage.getItem(this.orderDetailsStorageKey);\n    this.orders = ordersSaved ? JSON.parse(ordersSaved) : [];\n    this.orderdetails = orderDetailsSaved ? JSON.parse(orderDetailsSaved) : [];\n  }\n\n  /**\n   * @description \n   * Obtiene todas las órdenes.\n   * \n   * @return {Order[]} Lista de órdenes.\n   */\n  getOrders(): Order[] {\n    return this.orders;\n  }\n\n  /**\n   * @description \n   * Obtiene los detalles de una orden específica.\n   * \n   * @param {number} orderId - El ID de la orden.\n   * @return {OrderDetail[]} Lista de detalles de la orden.\n   */\n  getOrderDetails(orderId: number): OrderDetail[] {\n    return this.orderdetails.filter(detail => detail.id === orderId);\n  }\n\n  /**\n   * @description \n   * Actualiza el estado de una orden.\n   * \n   * @param {number} orderId - El ID de la orden.\n   * @param {string} status - El nuevo estado de la orden.\n   * @return {void}\n   */\n  updateOrderStatus(orderId: number, status: string): void {\n    const order = this.orders.find(o => o.id === orderId);\n    if (order) {\n      order.estado = status;\n      this.saveOrdersToLocalStorage();\n    }\n  }\n\n  /**\n   * @description \n   * Guarda las órdenes en el localStorage.\n   * \n   * @return {void}\n   */\n  saveOrdersToLocalStorage(): void {\n    localStorage.setItem(this.orderStorageKey, JSON.stringify(this.orders));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Orderdetail.html":{"url":"interfaces/Orderdetail.html","title":"interface - Orderdetail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Orderdetail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin-order-monitoring/admin-order-monitoring.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            product\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                        \n                                            total\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        product\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        product:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, AfterViewInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NavigationService } from '../../services/navigation.service';\nimport { UsersService } from '../../services/users.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { OrdersService } from '../../services/orders.service';\n\ninterface Order {\n  email: string;\n  id: number;\n  total: number;\n  fecha: Date;\n  estado: string;\n}\n\ninterface Orderdetail {\n  id: number;\n  product: string;\n  image: string;\n  price: number;\n  quantity: number;\n  total: number;\n}\n\n@Component({\n  selector: 'app-admin-order-monitoring',\n  standalone: true,\n  imports: [CommonModule, RouterModule, ReactiveFormsModule],\n  templateUrl: './admin-order-monitoring.component.html',\n  styleUrl: './admin-order-monitoring.component.scss'\n})\nexport class AdminOrderMonitoringComponent implements OnInit, AfterViewInit {\n  orders: Order[] = [];\n  selectedOrderDetails: Orderdetail[] = [];\n  selectedOrderId: number | null = null;\n  editOrderForm: FormGroup;\n  \n  constructor(\n    private navigationService: NavigationService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private usersService: UsersService,\n    private router: Router,\n    private orderService: OrdersService,\n    private fb: FormBuilder\n  ) {\n    this.editOrderForm = this.fb.group({\n      clientName: ['', Validators.required],\n      productName: ['', Validators.required],\n      quantity: ['', Validators.required],\n      status: ['', Validators.required]\n    });\n  }\n\n  ngAfterViewInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      const links = document.querySelectorAll('a');\n      links.forEach(link => {\n        link.addEventListener('click', (event: Event) => {\n          event.preventDefault();\n          const target = event.target as HTMLElement;\n          const href = target.getAttribute('href');\n          if (href) {\n            this.navigationService.navigateWithDelay(href);\n          }\n        });\n      });\n    }\n  }\n\n  ngOnInit(): void {\n    this.checkLoginState();\n\tthis.orders = this.orderService.getOrders();\n  }\n\n  checkLoginState(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.usersService.checkLoginState()) {\n        // Redirigir al administrador\n        //this.router.navigate(['/admin-user-management']);\n        console.log('Usuario logueado.');\n      } else {\n        // Redirigir al administrador\n        this.router.navigate(['/admin-login']);\n        console.log('Usuario no logueado.');\n      }\n    }\n  }\n\n  selectOrder(orderId: number): void {\n    this.selectedOrderId = orderId;\n    this.selectedOrderDetails = this.orderService.getOrderDetails(orderId);\n    const order = this.orders.find(o => o.id === orderId);\n    if (order) {\n      this.editOrderForm.patchValue({\n        clientName: order.email,\n        productName: this.selectedOrderDetails.map(detail => detail.product).join(', '),\n        quantity: this.selectedOrderDetails.reduce((acc, detail) => acc + detail.quantity, 0),\n        status: order.estado\n      });\n    }\n  }\n\n  getOrderProducts(orderId: number): string {\n    const products = this.orderService.getOrderDetails(orderId).map(detail => detail.product);\n    return products.join(', ');\n  }\n\n  getOrderQuantity(orderId: number): number {\n    const quantity = this.orderService.getOrderDetails(orderId).reduce((acc, detail) => acc + detail.quantity, 0);\n    return quantity;\n  }\n\n  updateOrderStatus(): void {\n    if (this.selectedOrderId !== null) {\n      const newStatus = this.editOrderForm.value.status;\n      this.orderService.updateOrderStatus(this.selectedOrderId, newStatus);\n      this.orders = this.orderService.getOrders();\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordRecoveryComponent.html":{"url":"components/PasswordRecoveryComponent.html","title":"component - PasswordRecoveryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PasswordRecoveryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/password-recovery/password-recovery.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password-recovery\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./password-recovery.component.html\n            \n\n\n\n            \n                styleUrl\n                ./password-recovery.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                passwordRecoveryForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkLoginState\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigationService: NavigationService, platformId: Object, fb: FormBuilder, customersService: CustomersService, renderer: Renderer2, el: ElementRef, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/password-recovery/password-recovery.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customersService\n                                                  \n                                                        \n                                                                        CustomersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkLoginState\n                        \n                    \n                \n            \n            \n                \ncheckLoginState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/password-recovery/password-recovery.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/password-recovery/password-recovery.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/password-recovery/password-recovery.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/password-recovery/password-recovery.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        passwordRecoveryForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/password-recovery/password-recovery.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NavigationService } from '../../services/navigation.service';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CustomersService } from '../../services/customers.service';\nimport { Renderer2, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-password-recovery',\n  standalone: true,\n  imports: [CommonModule, RouterModule, ReactiveFormsModule],\n  templateUrl: './password-recovery.component.html',\n  styleUrl: './password-recovery.component.scss'\n})\nexport class PasswordRecoveryComponent implements OnInit, AfterViewInit {\n  passwordRecoveryForm: FormGroup;\n\n  constructor(\n    private navigationService: NavigationService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n\t  private fb: FormBuilder,\n    private customersService: CustomersService,\n    private renderer: Renderer2,\n    private el: ElementRef,\n    private router: Router) { \n      this.passwordRecoveryForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]]});\n\t}\n\n  ngOnInit(): void {\n    this.checkLoginState();\n  }\n\n  ngAfterViewInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      const links = document.querySelectorAll('a');\n      links.forEach(link => {\n        link.addEventListener('click', (event: Event) => {\n          event.preventDefault();\n          const target = event.target as HTMLElement;\n          const href = target.getAttribute('href');\n          if (href) {\n            this.navigationService.navigateWithDelay(href);\n          }\n        });\n      });\n    }\n  }\n\n  onSubmit() {\n    if (this.passwordRecoveryForm.valid) {\n      const email = this.passwordRecoveryForm.value.email;\n\n      this.customersService.validateEmail(email).subscribe(\n        emailExists => {\n          if (emailExists) {\n            console.log('Cliente encontrado:', { email });\n            this.customersService.mostrarAlerta('Cliente encontrado.', 'success');\n            alert('Se ha enviado un enlace de recuperación de contraseña a su correo electrónico.!');\n            // Redirigir al perfil del usuario\n            this.router.navigate(['/login']);\n          } else {\n            console.log('Error cliente no encontrado.');\n            this.customersService.mostrarAlerta('Cliente no encontrado.', 'danger');\n          }\n        },\n        error => {\n          console.error('Error al validar el correo electrónico:', error);\n        }\n      );\n    } else {\n      console.log('Formulario invalido');\n    }\n  }\n\n  checkLoginState(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.customersService.checkLoginState()) {\n        // Ocultar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n        document.getElementById('loginMenu')!.style.display = 'none';\n        document.getElementById('registerMenu')!.style.display = 'none';\n        // Mostrar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n        document.getElementById('profileMenu')!.style.display = 'block';\n        document.getElementById('logoutMenu')!.style.display = 'block';\n      } else {\n        // Ocultar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n        document.getElementById('profileMenu')!.style.display = 'none';\n        document.getElementById('logoutMenu')!.style.display = 'none';\n        // Mostrar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n        document.getElementById('loginMenu')!.style.display = 'block';\n        document.getElementById('registerMenu')!.style.display = 'block';\n      }\n    }\n  }\n}\n\n    \n\n    \n            \n    \n        \n            \n                \n                    \n                    Puente Mágico\n                \n                    \n                \n                \n                    \n                        \n                            Home\n                        \n                        \n                            Ver Catalogo\n                        \n                        \n                            Contacto\n                        \n                        \n                            Iniciar Sesión\n                        \n                        \n                            Registro Cliente\n                        \n                        \n                            Perfil Cliente\n                        \n                        \n                            Cerrar Sesión\n                        \n                        \n                            Carro Compra\n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            \n                Recuperar Contraseña\n                \n                    \n                        Correo Electrónico:\n                        \n                        \n                            Correo Electrónico es obligatorio.\n                            Formato de correo electrónico incorrecto.\n                        \n                    \n                    \n                    Recuperar Contraseña\n                \n\n            \n        \n    \n\n    \n    \n        \n            &copy; 2024 Puente Mágico. Reservados todos los derechos.\n        \n    \n    \n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Puente Mágico                                                                                                                                            Home                                                                            Ver Catalogo                                                                            Contacto                                                                            Iniciar Sesión                                                                            Registro Cliente                                                                            Perfil Cliente                                                                            Cerrar Sesión                                                                            Carro Compra                                                                                                                                Recuperar Contraseña                                                            Correo Electrónico:                                                                            Correo Electrónico es obligatorio.                            Formato de correo electrónico incorrecto.                                                                                    Recuperar Contraseña                                                                    © 2024 Puente Mágico. Reservados todos los derechos.                                    '\n    var COMPONENTS = [{'name': 'AdminClientManagementComponent', 'selector': 'app-admin-client-management'},{'name': 'AdminContactManagementComponent', 'selector': 'app-admin-contact-management'},{'name': 'AdminLoginComponent', 'selector': 'app-admin-login'},{'name': 'AdminLogoutComponent', 'selector': 'app-admin-logout'},{'name': 'AdminOrderMonitoringComponent', 'selector': 'app-admin-order-monitoring'},{'name': 'AdminUserManagementComponent', 'selector': 'app-admin-user-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'ProductCatalogComponent', 'selector': 'app-product-catalog'},{'name': 'ProductDetailAluminioComponent', 'selector': 'app-product-detail-aluminio'},{'name': 'ProductDetailCroqueraComponent', 'selector': 'app-product-detail-croquera'},{'name': 'ProductDetailCuadernoComponent', 'selector': 'app-product-detail-cuaderno'},{'name': 'ProductDetailLibretaComponent', 'selector': 'app-product-detail-libreta'},{'name': 'ProductDetailPoleraComponent', 'selector': 'app-product-detail-polera'},{'name': 'ProductDetailTablaComponent', 'selector': 'app-product-detail-tabla'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordRecoveryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductCatalogComponent.html":{"url":"components/ProductCatalogComponent.html","title":"component - ProductCatalogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductCatalogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/product-catalog/product-catalog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-product-catalog\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./product-catalog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./product-catalog.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkLoginState\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigationService: NavigationService, platformId: Object, customersService: CustomersService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/product-catalog/product-catalog.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customersService\n                                                  \n                                                        \n                                                                        CustomersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkLoginState\n                        \n                    \n                \n            \n            \n                \ncheckLoginState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-catalog/product-catalog.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-catalog/product-catalog.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-catalog/product-catalog.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NavigationService } from '../../services/navigation.service';\nimport { CustomersService } from '../../services/customers.service';\n\n@Component({\n  selector: 'app-product-catalog',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  templateUrl: './product-catalog.component.html',\n  styleUrl: './product-catalog.component.scss'\n})\nexport class ProductCatalogComponent implements OnInit, AfterViewInit {\n\n  constructor(\n    private navigationService: NavigationService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private customersService: CustomersService) { }\n\n  ngOnInit(): void {\n    this.checkLoginState();\n  }\n\n  checkLoginState(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.customersService.checkLoginState()) {\n        // Ocultar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n        document.getElementById('loginMenu')!.style.display = 'none';\n        document.getElementById('registerMenu')!.style.display = 'none';\n        // Mostrar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n        document.getElementById('profileMenu')!.style.display = 'block';\n        document.getElementById('logoutMenu')!.style.display = 'block';\n      } else {\n        // Ocultar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n        document.getElementById('profileMenu')!.style.display = 'none';\n        document.getElementById('logoutMenu')!.style.display = 'none';\n        // Mostrar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n        document.getElementById('loginMenu')!.style.display = 'block';\n        document.getElementById('registerMenu')!.style.display = 'block';\n      }\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      const links = document.querySelectorAll('a');\n      links.forEach(link => {\n        link.addEventListener('click', (event: Event) => {\n          event.preventDefault();\n          const target = event.target as HTMLElement;\n          const href = target.getAttribute('href');\n          if (href) {\n            this.navigationService.navigateWithDelay(href);\n          }\n        });\n      });\n    }\n  }\n}\n\n    \n\n    \n            \n    \n        \n            \n                \n                    \n                    Puente Mágico\n                \n                    \n                \n                \n                    \n                        \n                            Home\n                        \n                        \n                            Ver Catalogo\n                        \n                        \n                            Contacto\n                        \n                        \n                            Iniciar Sesión\n                        \n                        \n                            Registro Cliente\n                        \n                        \n                            Perfil Cliente\n                        \n                        \n                            Cerrar Sesión\n                        \n                        \n                            Carro Compra\n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        Catalogo Productos\n        \n            \n            \n                \n                    \n                    \n                        Cuadernos personalizados\n                        $ 9.000\n                        Ver Detalles\n                    \n                \n            \n            \n                \n                    \n                    \n                        Libretas personalizadas\n                        $ 4.500\n                        Ver Detalles\n                    \n                \n            \n            \n                \n                    \n                    \n                        Croqueras personalizadas\n                        $ 7.000\n                        Ver Detalles\n                    \n                \n            \n            \n                \n                    \n                    \n                        Poleras personalizadas\n                        $ 15.000\n                        Ver Detalles\n                    \n                \n            \n            \n                \n                    \n                    \n                        Lamina Aluminio\n                        $ 10.000\n                        Ver Detalles\n                    \n                \n            \n            \n                \n                    \n                    \n                        Tabla de Madera\n                        $ 30.000\n                        Ver Detalles\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            &copy; 2024 Puente Mágico. Reservados todos los derechos.\n        \n    \n\n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Puente Mágico                                                                                                                                            Home                                                                            Ver Catalogo                                                                            Contacto                                                                            Iniciar Sesión                                                                            Registro Cliente                                                                            Perfil Cliente                                                                            Cerrar Sesión                                                                            Carro Compra                                                                                                    Catalogo Productos                                                                                                                Cuadernos personalizados                        $ 9.000                        Ver Detalles                                                                                                                                            Libretas personalizadas                        $ 4.500                        Ver Detalles                                                                                                                                            Croqueras personalizadas                        $ 7.000                        Ver Detalles                                                                                                                                            Poleras personalizadas                        $ 15.000                        Ver Detalles                                                                                                                                            Lamina Aluminio                        $ 10.000                        Ver Detalles                                                                                                                                            Tabla de Madera                        $ 30.000                        Ver Detalles                                                                                        © 2024 Puente Mágico. Reservados todos los derechos.                                '\n    var COMPONENTS = [{'name': 'AdminClientManagementComponent', 'selector': 'app-admin-client-management'},{'name': 'AdminContactManagementComponent', 'selector': 'app-admin-contact-management'},{'name': 'AdminLoginComponent', 'selector': 'app-admin-login'},{'name': 'AdminLogoutComponent', 'selector': 'app-admin-logout'},{'name': 'AdminOrderMonitoringComponent', 'selector': 'app-admin-order-monitoring'},{'name': 'AdminUserManagementComponent', 'selector': 'app-admin-user-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'ProductCatalogComponent', 'selector': 'app-product-catalog'},{'name': 'ProductDetailAluminioComponent', 'selector': 'app-product-detail-aluminio'},{'name': 'ProductDetailCroqueraComponent', 'selector': 'app-product-detail-croquera'},{'name': 'ProductDetailCuadernoComponent', 'selector': 'app-product-detail-cuaderno'},{'name': 'ProductDetailLibretaComponent', 'selector': 'app-product-detail-libreta'},{'name': 'ProductDetailPoleraComponent', 'selector': 'app-product-detail-polera'},{'name': 'ProductDetailTablaComponent', 'selector': 'app-product-detail-tabla'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductCatalogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductDetailAluminioComponent.html":{"url":"components/ProductDetailAluminioComponent.html","title":"component - ProductDetailAluminioComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductDetailAluminioComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/product-detail-aluminio/product-detail-aluminio.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-product-detail-aluminio\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./product-detail-aluminio.component.html\n            \n\n\n\n            \n                styleUrl\n                ./product-detail-aluminio.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addToCartForm\n                            \n                            \n                                maxQuantity\n                            \n                            \n                                minQuantity\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                checkLoginState\n                            \n                            \n                                goBack\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigationService: NavigationService, platformId: Object, customersService: CustomersService, router: Router, ordersService: OrdersService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/product-detail-aluminio/product-detail-aluminio.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customersService\n                                                  \n                                                        \n                                                                        CustomersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ordersService\n                                                  \n                                                        \n                                                                        OrdersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail-aluminio/product-detail-aluminio.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkLoginState\n                        \n                    \n                \n            \n            \n                \ncheckLoginState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail-aluminio/product-detail-aluminio.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail-aluminio/product-detail-aluminio.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail-aluminio/product-detail-aluminio.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail-aluminio/product-detail-aluminio.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCartForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-detail-aluminio/product-detail-aluminio.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxQuantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-detail-aluminio/product-detail-aluminio.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minQuantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-detail-aluminio/product-detail-aluminio.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-detail-aluminio/product-detail-aluminio.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NavigationService } from '../../services/navigation.service';\ndeclare var bootstrap: any;\nimport { CustomersService } from '../../services/customers.service';\nimport { Router } from '@angular/router';\nimport { OrdersService } from '../../services/orders.service';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-product-detail-aluminio',\n  standalone: true,\n  imports: [CommonModule, RouterModule, ReactiveFormsModule],\n  templateUrl: './product-detail-aluminio.component.html',\n  styleUrl: './product-detail-aluminio.component.scss'\n})\nexport class ProductDetailAluminioComponent implements OnInit, AfterViewInit {\n  addToCartForm: FormGroup;\n  quantity: number = 1;\n  minQuantity: number = 1;\n  maxQuantity: number = 10;\n\n  constructor(\n    private navigationService: NavigationService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private customersService: CustomersService,\n    private router: Router,\n    private ordersService: OrdersService,\n\t  private fb: FormBuilder) {\n      this.addToCartForm = this.fb.group({\n      quantity: ['', [Validators.required]]}); \n  }\n\n  ngOnInit(): void {\n    this.checkLoginState();\n  }\n\n  checkLoginState(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.customersService.checkLoginState()) {\n        // Ocultar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n        document.getElementById('loginMenu')!.style.display = 'none';\n        document.getElementById('registerMenu')!.style.display = 'none';\n        // Mostrar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n        document.getElementById('profileMenu')!.style.display = 'block';\n        document.getElementById('logoutMenu')!.style.display = 'block';\n      } else {\n        // Ocultar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n        document.getElementById('profileMenu')!.style.display = 'none';\n        document.getElementById('logoutMenu')!.style.display = 'none';\n        // Mostrar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n        document.getElementById('loginMenu')!.style.display = 'block';\n        document.getElementById('registerMenu')!.style.display = 'block';\n      }\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      const links = document.querySelectorAll('a');\n      links.forEach(link => {\n        link.addEventListener('click', (event: Event) => {\n          event.preventDefault();\n          const target = event.target as HTMLElement;\n          const href = target.getAttribute('href');\n          if (href) {\n            this.navigationService.navigateWithDelay(href);\n          }\n        });\n      });\n      //Inicializar Carousel() de imagenes\n      if (typeof document !== 'undefined') {\n        const carouselElement = document.querySelector('#productCarousel') as HTMLElement;\n        if (carouselElement) {\n          const carousel = new bootstrap.Carousel(carouselElement, {\n            interval: 3000, // Cambia de imagen cada 2 segundos\n            ride: 'carousel'\n          });\n        }\n      }\n    }\n  }\n\n  goBack(): void {\n    this.router.navigate(['/product-catalog']);\n  }\n\n  addToCart(): void {\n    let quantity: number = 1;\n    if (this.addToCartForm.valid) {\n      quantity = this.addToCartForm.value.quantity;\n    }\n\n    const price: number = 10000;\n    const total = quantity * price;\n    const product = 'Lamina alumnio';\n    const image = 'assets/images/lamina_aluminio1.png';\n    const registroExitoso = this.ordersService.registerCarts(product, image, price, quantity, total);\n    if (registroExitoso) {\n      console.log('Registro exitoso:', { product, image, price, quantity, total });\n    } else {\n      console.log('Error en el registro.');\n    }\n  }\n}\n\n    \n\n    \n            \n    \n        \n            \n                \n                    \n                    Puente Mágico\n                \n                    \n                \n                \n                    \n                        \n                            Home\n                        \n                        \n                            Ver Catalogo\n                        \n                        \n                            Contacto\n                        \n                        \n                            Iniciar Sesión\n                        \n                        \n                            Registro Cliente\n                        \n                        \n                            Perfil Cliente\n                        \n                        \n                            Cerrar Sesión\n                        \n                        \n                            Carro Compra\n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            \n\n                \n                \n                    \n                        \n                            \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                        Anterior\n                    \n                    \n                        \n                        Siguiente\n                    \n                \n            \n            \n                Lamina Aluminio\n                Categoria: Estampado y sublimación\n                Precio: $ 10.000\n                Contactanos y conversemos sobre la elección de tu motivo.\n                Cuadro de Lamina Aluminio Estampada\n                Medidas 20x30 cm\n                Precio lamina sin caja $10.000\n                Precio lamina incluye caja de regalo $12.000\n                \n                    \n                        Cantidad:\n                        \n                        \n                            Cantidad es obligatoria.\n                        \n                    \n                    \n                    Agregar al Carro\n                \n            \n        \n        \n        Volver\n    \n\n    \n    \n        \n            &copy; 2024 Puente Mágico. Reservados todos los derechos.\n        \n    \n\n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Puente Mágico                                                                                                                                            Home                                                                            Ver Catalogo                                                                            Contacto                                                                            Iniciar Sesión                                                                            Registro Cliente                                                                            Perfil Cliente                                                                            Cerrar Sesión                                                                            Carro Compra                                                                                                                                                                                                                                                                                                                                                                                                                    Anterior                                                                                        Siguiente                                                                            Lamina Aluminio                Categoria: Estampado y sublimación                Precio: $ 10.000                Contactanos y conversemos sobre la elección de tu motivo.                Cuadro de Lamina Aluminio Estampada                Medidas 20x30 cm                Precio lamina sin caja $10.000                Precio lamina incluye caja de regalo $12.000                                                            Cantidad:                                                                            Cantidad es obligatoria.                                                                                    Agregar al Carro                                                    Volver                                © 2024 Puente Mágico. Reservados todos los derechos.                                '\n    var COMPONENTS = [{'name': 'AdminClientManagementComponent', 'selector': 'app-admin-client-management'},{'name': 'AdminContactManagementComponent', 'selector': 'app-admin-contact-management'},{'name': 'AdminLoginComponent', 'selector': 'app-admin-login'},{'name': 'AdminLogoutComponent', 'selector': 'app-admin-logout'},{'name': 'AdminOrderMonitoringComponent', 'selector': 'app-admin-order-monitoring'},{'name': 'AdminUserManagementComponent', 'selector': 'app-admin-user-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'ProductCatalogComponent', 'selector': 'app-product-catalog'},{'name': 'ProductDetailAluminioComponent', 'selector': 'app-product-detail-aluminio'},{'name': 'ProductDetailCroqueraComponent', 'selector': 'app-product-detail-croquera'},{'name': 'ProductDetailCuadernoComponent', 'selector': 'app-product-detail-cuaderno'},{'name': 'ProductDetailLibretaComponent', 'selector': 'app-product-detail-libreta'},{'name': 'ProductDetailPoleraComponent', 'selector': 'app-product-detail-polera'},{'name': 'ProductDetailTablaComponent', 'selector': 'app-product-detail-tabla'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductDetailAluminioComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductDetailCroqueraComponent.html":{"url":"components/ProductDetailCroqueraComponent.html","title":"component - ProductDetailCroqueraComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductDetailCroqueraComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/product-detail-croquera/product-detail-croquera.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-product-detail-croquera\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./product-detail-croquera.component.html\n            \n\n\n\n            \n                styleUrl\n                ./product-detail-croquera.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addToCartForm\n                            \n                            \n                                maxQuantity\n                            \n                            \n                                minQuantity\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                checkLoginState\n                            \n                            \n                                goBack\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigationService: NavigationService, platformId: Object, customersService: CustomersService, router: Router, ordersService: OrdersService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/product-detail-croquera/product-detail-croquera.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customersService\n                                                  \n                                                        \n                                                                        CustomersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ordersService\n                                                  \n                                                        \n                                                                        OrdersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail-croquera/product-detail-croquera.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkLoginState\n                        \n                    \n                \n            \n            \n                \ncheckLoginState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail-croquera/product-detail-croquera.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail-croquera/product-detail-croquera.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail-croquera/product-detail-croquera.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail-croquera/product-detail-croquera.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCartForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-detail-croquera/product-detail-croquera.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxQuantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-detail-croquera/product-detail-croquera.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minQuantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-detail-croquera/product-detail-croquera.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-detail-croquera/product-detail-croquera.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NavigationService } from '../../services/navigation.service';\ndeclare var bootstrap: any;\nimport { CustomersService } from '../../services/customers.service';\nimport { Router } from '@angular/router';\nimport { OrdersService } from '../../services/orders.service';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-product-detail-croquera',\n  standalone: true,\n  imports: [CommonModule, RouterModule, ReactiveFormsModule],\n  templateUrl: './product-detail-croquera.component.html',\n  styleUrl: './product-detail-croquera.component.scss'\n})\nexport class ProductDetailCroqueraComponent implements OnInit, AfterViewInit {\n  addToCartForm: FormGroup;\n  quantity: number = 1;\n  minQuantity: number = 1;\n  maxQuantity: number = 10;\n\n  constructor(\n    private navigationService: NavigationService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private customersService: CustomersService,\n    private router: Router,\n    private ordersService: OrdersService,\n\t  private fb: FormBuilder) {\n      this.addToCartForm = this.fb.group({\n      quantity: ['', [Validators.required]]}); \n  }\n  ngOnInit(): void {\n    this.checkLoginState();\n  }\n\n  checkLoginState(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.customersService.checkLoginState()) {\n        // Ocultar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n        document.getElementById('loginMenu')!.style.display = 'none';\n        document.getElementById('registerMenu')!.style.display = 'none';\n        // Mostrar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n        document.getElementById('profileMenu')!.style.display = 'block';\n        document.getElementById('logoutMenu')!.style.display = 'block';\n      } else {\n        // Ocultar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n        document.getElementById('profileMenu')!.style.display = 'none';\n        document.getElementById('logoutMenu')!.style.display = 'none';\n        // Mostrar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n        document.getElementById('loginMenu')!.style.display = 'block';\n        document.getElementById('registerMenu')!.style.display = 'block';\n      }\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      const links = document.querySelectorAll('a');\n      links.forEach(link => {\n        link.addEventListener('click', (event: Event) => {\n          event.preventDefault();\n          const target = event.target as HTMLElement;\n          const href = target.getAttribute('href');\n          if (href) {\n            this.navigationService.navigateWithDelay(href);\n          }\n        });\n      });\n      //Inicializar Carousel() de imagenes\n      if (typeof document !== 'undefined') {\n        const carouselElement = document.querySelector('#productCarousel') as HTMLElement;\n        if (carouselElement) {\n          const carousel = new bootstrap.Carousel(carouselElement, {\n            interval: 3000, // Cambia de imagen cada 2 segundos\n            ride: 'carousel'\n          });\n        }\n      }\n    }\n  }\n\n  goBack(): void {\n    this.router.navigate(['/product-catalog']);\n  }\n\n  addToCart(): void {\n    let quantity: number = 1;\n    if (this.addToCartForm.valid) {\n      quantity = this.addToCartForm.value.quantity;\n    }\n\n    const price: number = 7000;\n    const total = quantity * price;\n    const product = 'Croquera personalizado';\n    const image = 'assets/images/croquera1.png';\n    const registroExitoso = this.ordersService.registerCarts(product, image, price, quantity, total);\n    if (registroExitoso) {\n      console.log('Registro exitoso:', { product, image, price, quantity, total });\n    } else {\n      console.log('Error en el registro.');\n    }\n  }\n}\n\n    \n\n    \n            \n    \n        \n            \n                \n                    \n                    Puente Mágico\n                \n                    \n                \n                \n                    \n                        \n                            Home\n                        \n                        \n                            Ver Catalogo\n                        \n                        \n                            Contacto\n                        \n                        \n                            Iniciar Sesión\n                        \n                        \n                            Registro Cliente\n                        \n                        \n                            Perfil Cliente\n                        \n                        \n                            Cerrar Sesión\n                        \n                        \n                            Carro Compra\n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            \n\n                \n                \n                    \n                        \n                            \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                        Anterior\n                    \n                    \n                        \n                        Siguiente\n                    \n                \n            \n            \n                Croquera personalizada\n                Categoria: Papelería\n                Precio: $ 7.000\n                Personaliza tu croquera, contactanos y conversemos sobre la elección de tu motivo.\n                Croquera Dibujos\n                Tapa Dura Laminada\n                Tamaño B5 18,1x25,5cm\n                Anillado Metálico\n                80 hojas 140grs\n                Hojas blancas\n                \n                    \n                        Cantidad:\n                        \n                        \n                            Cantidad es obligatoria.\n                        \n                    \n                    \n                    Agregar al Carro\n                \n            \n        \n        \n        Volver\n    \n\n    \n    \n        \n            &copy; 2024 Puente Mágico. Reservados todos los derechos.\n        \n    \n\n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Puente Mágico                                                                                                                                            Home                                                                            Ver Catalogo                                                                            Contacto                                                                            Iniciar Sesión                                                                            Registro Cliente                                                                            Perfil Cliente                                                                            Cerrar Sesión                                                                            Carro Compra                                                                                                                                                                                                                                                                                                                                                                                                                    Anterior                                                                                        Siguiente                                                                            Croquera personalizada                Categoria: Papelería                Precio: $ 7.000                Personaliza tu croquera, contactanos y conversemos sobre la elección de tu motivo.                Croquera Dibujos                Tapa Dura Laminada                Tamaño B5 18,1x25,5cm                Anillado Metálico                80 hojas 140grs                Hojas blancas                                                            Cantidad:                                                                            Cantidad es obligatoria.                                                                                    Agregar al Carro                                                    Volver                                © 2024 Puente Mágico. Reservados todos los derechos.                                '\n    var COMPONENTS = [{'name': 'AdminClientManagementComponent', 'selector': 'app-admin-client-management'},{'name': 'AdminContactManagementComponent', 'selector': 'app-admin-contact-management'},{'name': 'AdminLoginComponent', 'selector': 'app-admin-login'},{'name': 'AdminLogoutComponent', 'selector': 'app-admin-logout'},{'name': 'AdminOrderMonitoringComponent', 'selector': 'app-admin-order-monitoring'},{'name': 'AdminUserManagementComponent', 'selector': 'app-admin-user-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'ProductCatalogComponent', 'selector': 'app-product-catalog'},{'name': 'ProductDetailAluminioComponent', 'selector': 'app-product-detail-aluminio'},{'name': 'ProductDetailCroqueraComponent', 'selector': 'app-product-detail-croquera'},{'name': 'ProductDetailCuadernoComponent', 'selector': 'app-product-detail-cuaderno'},{'name': 'ProductDetailLibretaComponent', 'selector': 'app-product-detail-libreta'},{'name': 'ProductDetailPoleraComponent', 'selector': 'app-product-detail-polera'},{'name': 'ProductDetailTablaComponent', 'selector': 'app-product-detail-tabla'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductDetailCroqueraComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductDetailCuadernoComponent.html":{"url":"components/ProductDetailCuadernoComponent.html","title":"component - ProductDetailCuadernoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductDetailCuadernoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/product-detail-cuaderno/product-detail-cuaderno.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-product-detail-cuaderno\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./product-detail-cuaderno.component.html\n            \n\n\n\n            \n                styleUrl\n                ./product-detail-cuaderno.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addToCartForm\n                            \n                            \n                                maxQuantity\n                            \n                            \n                                minQuantity\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                checkLoginState\n                            \n                            \n                                goBack\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigationService: NavigationService, platformId: Object, customersService: CustomersService, router: Router, ordersService: OrdersService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/product-detail-cuaderno/product-detail-cuaderno.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customersService\n                                                  \n                                                        \n                                                                        CustomersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ordersService\n                                                  \n                                                        \n                                                                        OrdersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail-cuaderno/product-detail-cuaderno.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkLoginState\n                        \n                    \n                \n            \n            \n                \ncheckLoginState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail-cuaderno/product-detail-cuaderno.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail-cuaderno/product-detail-cuaderno.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail-cuaderno/product-detail-cuaderno.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail-cuaderno/product-detail-cuaderno.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCartForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-detail-cuaderno/product-detail-cuaderno.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxQuantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-detail-cuaderno/product-detail-cuaderno.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minQuantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-detail-cuaderno/product-detail-cuaderno.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-detail-cuaderno/product-detail-cuaderno.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NavigationService } from '../../services/navigation.service';\ndeclare var bootstrap: any;\nimport { CustomersService } from '../../services/customers.service';\nimport { Router } from '@angular/router';\nimport { OrdersService } from '../../services/orders.service';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-product-detail-cuaderno',\n  standalone: true,\n  imports: [CommonModule, RouterModule, ReactiveFormsModule],\n  templateUrl: './product-detail-cuaderno.component.html',\n  styleUrl: './product-detail-cuaderno.component.scss'\n})\nexport class ProductDetailCuadernoComponent implements OnInit, AfterViewInit {\n  addToCartForm: FormGroup;\n  quantity: number = 1;\n  minQuantity: number = 1;\n  maxQuantity: number = 10;\n\n  constructor(\n    private navigationService: NavigationService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private customersService: CustomersService,\n    private router: Router,\n    private ordersService: OrdersService,\n\t  private fb: FormBuilder) {\n      this.addToCartForm = this.fb.group({\n      quantity: ['', [Validators.required]]}); \n  }\n\n  ngOnInit(): void {\n    this.checkLoginState();\n  }\n\n  checkLoginState(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.customersService.checkLoginState()) {\n        // Ocultar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n        document.getElementById('loginMenu')!.style.display = 'none';\n        document.getElementById('registerMenu')!.style.display = 'none';\n        // Mostrar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n        document.getElementById('profileMenu')!.style.display = 'block';\n        document.getElementById('logoutMenu')!.style.display = 'block';\n      } else {\n        // Ocultar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n        document.getElementById('profileMenu')!.style.display = 'none';\n        document.getElementById('logoutMenu')!.style.display = 'none';\n        // Mostrar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n        document.getElementById('loginMenu')!.style.display = 'block';\n        document.getElementById('registerMenu')!.style.display = 'block';\n      }\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      const links = document.querySelectorAll('a');\n      links.forEach(link => {\n        link.addEventListener('click', (event: Event) => {\n          event.preventDefault();\n          const target = event.target as HTMLElement;\n          const href = target.getAttribute('href');\n          if (href) {\n            this.navigationService.navigateWithDelay(href);\n          }\n        });\n      });\n      //Inicializar Carousel() de imagenes\n      if (typeof document !== 'undefined') {\n        const carouselElement = document.querySelector('#productCarousel') as HTMLElement;\n        if (carouselElement) {\n          const carousel = new bootstrap.Carousel(carouselElement, {\n            interval: 3000, // Cambia de imagen cada 2 segundos\n            ride: 'carousel'\n          });\n        }\n      }\n    }\n  }\n\n  goBack(): void {\n    this.router.navigate(['/product-catalog']);\n  }\n\n  addToCart(): void {\n    let quantity: number = 1;\n    if (this.addToCartForm.valid) {\n      quantity = this.addToCartForm.value.quantity;\n    }\n\n    const price: number = 9000;\n    const total = quantity * price;\n    const product = 'Cuaderno personalizado';\n    const image = 'assets/images/cuaderno1.png';\n    const registroExitoso = this.ordersService.registerCarts(product, image, price, quantity, total);\n    if (registroExitoso) {\n      console.log('Registro exitoso:', { product, image, price, quantity, total });\n    } else {\n      console.log('Error en el registro.');\n    }\n  }\n}\n\n    \n\n    \n            \n    \n        \n            \n                \n                    \n                    Puente Mágico\n                \n                    \n                \n                \n                    \n                        \n                            Home\n                        \n                        \n                            Ver Catalogo\n                        \n                        \n                            Contacto\n                        \n                        \n                            Iniciar Sesión\n                        \n                        \n                            Registro Cliente\n                        \n                        \n                            Perfil Cliente\n                        \n                        \n                            Cerrar Sesión\n                        \n                        \n                            Carro Compra\n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            \n                \n                \n                    \n                        \n                            \n                        \n                        \n                            \n                        \n                        \n                            \n                        \n                        \n                            \n                        \n                        \n                            \n                        \n                        \n                            \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                        Anterior\n                    \n                    \n                        \n                        Siguiente\n                    \n                \n            \n            \n                Cuadernos personalizados\n                Categoria: Papelería\n                Precio: $ 9.000\n                Personaliza tu cuaderno, contactanos y conversemos sobre la elección de tu motivo.\n                Cuaderno 100 hojas\n                Tamaño A5\n                Tapas duras laminadas\n                Espiral Metálico\n                Hoja con stickers\n                Hojas cuadriculadas-lineas-puntos-blancas\n                \n                    \n                        Cantidad:\n                        \n                        \n                            Cantidad es obligatoria.\n                        \n                    \n                    \n                    Agregar al Carro\n                \n            \n        \n        \n        Volver\n    \n\n    \n    \n        \n            &copy; 2024 Puente Mágico. Reservados todos los derechos.\n        \n    \n\n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Puente Mágico                                                                                                                                            Home                                                                            Ver Catalogo                                                                            Contacto                                                                            Iniciar Sesión                                                                            Registro Cliente                                                                            Perfil Cliente                                                                            Cerrar Sesión                                                                            Carro Compranterior                                                                                        Siguiente                                                                            Cuadernos personalizados                Categoria: Papelería                Precio: $ 9.000                Personaliza tu cuaderno, contactanos y conversemos sobre la elección de tu motivo.                Cuaderno 100 hojas                Tamaño A5                Tapas duras laminadas                Espiral Metálico                Hoja con stickers                Hojas cuadriculadas-lineas-puntos-blancas                                                            Cantidad:                                                                            Cantidad es obligatoria.                                                                                    Agregar al Carro                                                    Volver                                © 2024 Puente Mágico. Reservados todos los derechos.                                '\n    var COMPONENTS = [{'name': 'AdminClientManagementComponent', 'selector': 'app-admin-client-management'},{'name': 'AdminContactManagementComponent', 'selector': 'app-admin-contact-management'},{'name': 'AdminLoginComponent', 'selector': 'app-admin-login'},{'name': 'AdminLogoutComponent', 'selector': 'app-admin-logout'},{'name': 'AdminOrderMonitoringComponent', 'selector': 'app-admin-order-monitoring'},{'name': 'AdminUserManagementComponent', 'selector': 'app-admin-user-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'ProductCatalogComponent', 'selector': 'app-product-catalog'},{'name': 'ProductDetailAluminioComponent', 'selector': 'app-product-detail-aluminio'},{'name': 'ProductDetailCroqueraComponent', 'selector': 'app-product-detail-croquera'},{'name': 'ProductDetailCuadernoComponent', 'selector': 'app-product-detail-cuaderno'},{'name': 'ProductDetailLibretaComponent', 'selector': 'app-product-detail-libreta'},{'name': 'ProductDetailPoleraComponent', 'selector': 'app-product-detail-polera'},{'name': 'ProductDetailTablaComponent', 'selector': 'app-product-detail-tabla'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductDetailCuadernoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductDetailLibretaComponent.html":{"url":"components/ProductDetailLibretaComponent.html","title":"component - ProductDetailLibretaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductDetailLibretaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/product-detail-libreta/product-detail-libreta.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-product-detail-libreta\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./product-detail-libreta.component.html\n            \n\n\n\n            \n                styleUrl\n                ./product-detail-libreta.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addToCartForm\n                            \n                            \n                                maxQuantity\n                            \n                            \n                                minQuantity\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                checkLoginState\n                            \n                            \n                                goBack\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigationService: NavigationService, platformId: Object, customersService: CustomersService, router: Router, ordersService: OrdersService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/product-detail-libreta/product-detail-libreta.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customersService\n                                                  \n                                                        \n                                                                        CustomersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ordersService\n                                                  \n                                                        \n                                                                        OrdersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail-libreta/product-detail-libreta.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkLoginState\n                        \n                    \n                \n            \n            \n                \ncheckLoginState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail-libreta/product-detail-libreta.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail-libreta/product-detail-libreta.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail-libreta/product-detail-libreta.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail-libreta/product-detail-libreta.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCartForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-detail-libreta/product-detail-libreta.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxQuantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-detail-libreta/product-detail-libreta.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minQuantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-detail-libreta/product-detail-libreta.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-detail-libreta/product-detail-libreta.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NavigationService } from '../../services/navigation.service';\ndeclare var bootstrap: any;\nimport { CustomersService } from '../../services/customers.service';\nimport { Router } from '@angular/router';\nimport { OrdersService } from '../../services/orders.service';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-product-detail-libreta',\n  standalone: true,\n  imports: [CommonModule, RouterModule, ReactiveFormsModule],\n  templateUrl: './product-detail-libreta.component.html',\n  styleUrl: './product-detail-libreta.component.scss'\n})\nexport class ProductDetailLibretaComponent implements OnInit, AfterViewInit {\n  addToCartForm: FormGroup;\n  quantity: number = 1;\n  minQuantity: number = 1;\n  maxQuantity: number = 10;\n\n  constructor(\n    private navigationService: NavigationService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private customersService: CustomersService,\n    private router: Router,\n    private ordersService: OrdersService,\n\t  private fb: FormBuilder) {\n      this.addToCartForm = this.fb.group({\n      quantity: ['', [Validators.required]]}); \n  }\n\n    ngOnInit(): void {\n      this.checkLoginState();\n    }\n  \n    checkLoginState(): void {\n      if (isPlatformBrowser(this.platformId)) {\n        if (this.customersService.checkLoginState()) {\n          // Ocultar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n          document.getElementById('loginMenu')!.style.display = 'none';\n          document.getElementById('registerMenu')!.style.display = 'none';\n          // Mostrar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n          document.getElementById('profileMenu')!.style.display = 'block';\n          document.getElementById('logoutMenu')!.style.display = 'block';\n        } else {\n          // Ocultar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n          document.getElementById('profileMenu')!.style.display = 'none';\n          document.getElementById('logoutMenu')!.style.display = 'none';\n          // Mostrar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n          document.getElementById('loginMenu')!.style.display = 'block';\n          document.getElementById('registerMenu')!.style.display = 'block';\n        }\n      }\n    }\n\n  ngAfterViewInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      const links = document.querySelectorAll('a');\n      links.forEach(link => {\n        link.addEventListener('click', (event: Event) => {\n          event.preventDefault();\n          const target = event.target as HTMLElement;\n          const href = target.getAttribute('href');\n          if (href) {\n            this.navigationService.navigateWithDelay(href);\n          }\n        });\n      });\n      //Inicializar Carousel() de imagenes\n      if (typeof document !== 'undefined') {\n        const carouselElement = document.querySelector('#productCarousel') as HTMLElement;\n        if (carouselElement) {\n          const carousel = new bootstrap.Carousel(carouselElement, {\n            interval: 3000, // Cambia de imagen cada 2 segundos\n            ride: 'carousel'\n          });\n        }\n      }\n    }\n  }\n\n  goBack(): void {\n    this.router.navigate(['/product-catalog']);\n  }\n\n  addToCart(): void {\n    let quantity: number = 1;\n    if (this.addToCartForm.valid) {\n      quantity = this.addToCartForm.value.quantity;\n    }\n\n    const price: number = 4500;\n    const total = quantity * price;\n    const product = 'Libreta personalizada';\n    const image = 'assets/images/libreta1.png';\n    const registroExitoso = this.ordersService.registerCarts(product, image, price, quantity, total);\n    if (registroExitoso) {\n      console.log('Registro exitoso:', { product, image, price, quantity, total });\n    } else {\n      console.log('Error en el registro.');\n    }\n  }\n}\n\n    \n\n    \n            \n    \n        \n            \n                \n                    \n                    Puente Mágico\n                \n                    \n                \n                \n                    \n                        \n                            Home\n                        \n                        \n                            Ver Catalogo\n                        \n                        \n                            Contacto\n                        \n                        \n                            Iniciar Sesión\n                        \n                        \n                            Registro Cliente\n                        \n                        \n                            Perfil Cliente\n                        \n                        \n                            Cerrar Sesión\n                        \n                        \n                            Carro Compra\n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            \n\n                \n                \n                    \n                        \n                            \n                        \n                        \n                            \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                        Anterior\n                    \n                    \n                        \n                        Siguiente\n                    \n                \n            \n            \n                Libreta personalizada\n                Categoria: Papelería\n                Precio: $ 4.500\n                Personaliza tu libreta, contactanos y conversemos sobre la elección de tu motivo.\n                Libreta Tapa Dura Laminada\n                Tamaño A6 11x15,3cm\n                Anillado Metálico\n                80 hojas 105grs\n                Hojas cuadriculadas-lineas-puntos-blancas\n                \n                    \n                        Cantidad:\n                        \n                        \n                            Cantidad es obligatoria.\n                        \n                    \n                    \n                    Agregar al Carro\n                \n            \n        \n        \n        Volver\n    \n\n    \n    \n        \n            &copy; 2024 Puente Mágico. Reservados todos los derechos.\n        \n    \n\n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Puente Mágico                                                                                                                                            Home                                                                            Ver Catalogo                                                                            Contacto                                                                            Iniciar Sesión                                                                            Registro Cliente                                                                            Perfil Cliente                                                                            Cerrar Sesión                                                                            Carro Compra                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Anterior                                                                                        Siguiente                                                                            Libreta personalizada                Categoria: Papelería                Precio: $ 4.500                Personaliza tu libreta, contactanos y conversemos sobre la elección de tu motivo.                Libreta Tapa Dura Laminada                Tamaño A6 11x15,3cm                Anillado Metálico                80 hojas 105grs                Hojas cuadriculadas-lineas-puntos-blancas                                                            Cantidad:                                                                            Cantidad es obligatoria.                                                                                    Agregar al Carro                                                    Volver                                © 2024 Puente Mágico. Reservados todos los derechos.                                '\n    var COMPONENTS = [{'name': 'AdminClientManagementComponent', 'selector': 'app-admin-client-management'},{'name': 'AdminContactManagementComponent', 'selector': 'app-admin-contact-management'},{'name': 'AdminLoginComponent', 'selector': 'app-admin-login'},{'name': 'AdminLogoutComponent', 'selector': 'app-admin-logout'},{'name': 'AdminOrderMonitoringComponent', 'selector': 'app-admin-order-monitoring'},{'name': 'AdminUserManagementComponent', 'selector': 'app-admin-user-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'ProductCatalogComponent', 'selector': 'app-product-catalog'},{'name': 'ProductDetailAluminioComponent', 'selector': 'app-product-detail-aluminio'},{'name': 'ProductDetailCroqueraComponent', 'selector': 'app-product-detail-croquera'},{'name': 'ProductDetailCuadernoComponent', 'selector': 'app-product-detail-cuaderno'},{'name': 'ProductDetailLibretaComponent', 'selector': 'app-product-detail-libreta'},{'name': 'ProductDetailPoleraComponent', 'selector': 'app-product-detail-polera'},{'name': 'ProductDetailTablaComponent', 'selector': 'app-product-detail-tabla'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductDetailLibretaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductDetailPoleraComponent.html":{"url":"components/ProductDetailPoleraComponent.html","title":"component - ProductDetailPoleraComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductDetailPoleraComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/product-detail-polera/product-detail-polera.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-product-detail-polera\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./product-detail-polera.component.html\n            \n\n\n\n            \n                styleUrl\n                ./product-detail-polera.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addToCartForm\n                            \n                            \n                                maxQuantity\n                            \n                            \n                                minQuantity\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                checkLoginState\n                            \n                            \n                                goBack\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigationService: NavigationService, platformId: Object, customersService: CustomersService, router: Router, ordersService: OrdersService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/product-detail-polera/product-detail-polera.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customersService\n                                                  \n                                                        \n                                                                        CustomersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ordersService\n                                                  \n                                                        \n                                                                        OrdersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail-polera/product-detail-polera.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkLoginState\n                        \n                    \n                \n            \n            \n                \ncheckLoginState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail-polera/product-detail-polera.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail-polera/product-detail-polera.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail-polera/product-detail-polera.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail-polera/product-detail-polera.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCartForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-detail-polera/product-detail-polera.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxQuantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-detail-polera/product-detail-polera.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minQuantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-detail-polera/product-detail-polera.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-detail-polera/product-detail-polera.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NavigationService } from '../../services/navigation.service';\ndeclare var bootstrap: any;\nimport { CustomersService } from '../../services/customers.service';\nimport { Router } from '@angular/router';\nimport { OrdersService } from '../../services/orders.service';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-product-detail-polera',\n  standalone: true,\n  imports: [CommonModule, RouterModule, ReactiveFormsModule],\n  templateUrl: './product-detail-polera.component.html',\n  styleUrl: './product-detail-polera.component.scss'\n})\nexport class ProductDetailPoleraComponent implements OnInit, AfterViewInit {\n  addToCartForm: FormGroup;\n  quantity: number = 1;\n  minQuantity: number = 1;\n  maxQuantity: number = 10;\n\n  constructor(\n    private navigationService: NavigationService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private customersService: CustomersService,\n    private router: Router,\n    private ordersService: OrdersService,\n\t  private fb: FormBuilder) {\n      this.addToCartForm = this.fb.group({\n      quantity: ['', [Validators.required]]}); \n  }\n\n    ngOnInit(): void {\n      this.checkLoginState();\n    }\n  \n    checkLoginState(): void {\n      if (isPlatformBrowser(this.platformId)) {\n        if (this.customersService.checkLoginState()) {\n          // Ocultar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n          document.getElementById('loginMenu')!.style.display = 'none';\n          document.getElementById('registerMenu')!.style.display = 'none';\n          // Mostrar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n          document.getElementById('profileMenu')!.style.display = 'block';\n          document.getElementById('logoutMenu')!.style.display = 'block';\n        } else {\n          // Ocultar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n          document.getElementById('profileMenu')!.style.display = 'none';\n          document.getElementById('logoutMenu')!.style.display = 'none';\n          // Mostrar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n          document.getElementById('loginMenu')!.style.display = 'block';\n          document.getElementById('registerMenu')!.style.display = 'block';\n        }\n      }\n    }\n\n  ngAfterViewInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      const links = document.querySelectorAll('a');\n      links.forEach(link => {\n        link.addEventListener('click', (event: Event) => {\n          event.preventDefault();\n          const target = event.target as HTMLElement;\n          const href = target.getAttribute('href');\n          if (href) {\n            this.navigationService.navigateWithDelay(href);\n          }\n        });\n      });\n      //Inicializar Carousel() de imagenes\n      if (typeof document !== 'undefined') {\n        const carouselElement = document.querySelector('#productCarousel') as HTMLElement;\n        if (carouselElement) {\n          const carousel = new bootstrap.Carousel(carouselElement, {\n            interval: 3000, // Cambia de imagen cada 2 segundos\n            ride: 'carousel'\n          });\n        }\n      }\n    }\n  }\n\n  goBack(): void {\n    this.router.navigate(['/product-catalog']);\n  }\n\n  addToCart(): void {\n    let quantity: number = 1;\n    if (this.addToCartForm.valid) {\n      quantity = this.addToCartForm.value.quantity;\n    }\n\n    const price: number = 15000;\n    const total = quantity * price;\n    const product = 'Polera personalizada';\n    const image = 'assets/images/polera1.png';\n    const registroExitoso = this.ordersService.registerCarts(product, image, price, quantity, total);\n    if (registroExitoso) {\n      console.log('Registro exitoso:', { product, image, price, quantity, total });\n    } else {\n      console.log('Error en el registro.');\n    }\n  }\n}\n\n    \n\n    \n            \n    \n        \n            \n                \n                    \n                    Puente Mágico\n                \n                    \n                \n                \n                    \n                        \n                            Home\n                        \n                        \n                            Ver Catalogo\n                        \n                        \n                            Contacto\n                        \n                        \n                            Iniciar Sesión\n                        \n                        \n                            Registro Cliente\n                        \n                        \n                            Perfil Cliente\n                        \n                        \n                            Cerrar Sesión\n                        \n                        \n                            Carro Compra\n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            \n\n                \n                \n                    \n                        \n                            \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                        Anterior\n                    \n                    \n                        \n                        Siguiente\n                    \n                \n            \n            \n                Polera personalizada\n                Categoria: Estampado y sublimación\n                Precio: $ 15.000\n                Personaliza tu polera, contactanos y conversemos sobre la elección de tu motivo.\n                \n                    \n                        Cantidad:\n                        \n                        \n                            Cantidad es obligatoria.\n                        \n                    \n                    \n                    Agregar al Carro\n                \n            \n        \n        \n        Volver\n    \n\n    \n    \n        \n            &copy; 2024 Puente Mágico. Reservados todos los derechos.\n        \n    \n\n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Puente Mágico                                                                                                                                            Home                                                                            Ver Catalogo                                                                            Contacto                                                                            Iniciar Sesión                                                                            Registro Cliente                                                                            Perfil Cliente                                                                            Cerrar Sesión                                                                            Carro Compra                                                                                                                                                                                                                                                                                                                                                                                                                    Anterior                                                                                        Siguiente                                                                            Polera personalizada                Categoria: Estampado y sublimación                Precio: $ 15.000                Personaliza tu polera, contactanos y conversemos sobre la elección de tu motivo.                                                            Cantidad:                                                                            Cantidad es obligatoria.                                                                                    Agregar al Carro                                                    Volver                                © 2024 Puente Mágico. Reservados todos los derechos.                                '\n    var COMPONENTS = [{'name': 'AdminClientManagementComponent', 'selector': 'app-admin-client-management'},{'name': 'AdminContactManagementComponent', 'selector': 'app-admin-contact-management'},{'name': 'AdminLoginComponent', 'selector': 'app-admin-login'},{'name': 'AdminLogoutComponent', 'selector': 'app-admin-logout'},{'name': 'AdminOrderMonitoringComponent', 'selector': 'app-admin-order-monitoring'},{'name': 'AdminUserManagementComponent', 'selector': 'app-admin-user-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'ProductCatalogComponent', 'selector': 'app-product-catalog'},{'name': 'ProductDetailAluminioComponent', 'selector': 'app-product-detail-aluminio'},{'name': 'ProductDetailCroqueraComponent', 'selector': 'app-product-detail-croquera'},{'name': 'ProductDetailCuadernoComponent', 'selector': 'app-product-detail-cuaderno'},{'name': 'ProductDetailLibretaComponent', 'selector': 'app-product-detail-libreta'},{'name': 'ProductDetailPoleraComponent', 'selector': 'app-product-detail-polera'},{'name': 'ProductDetailTablaComponent', 'selector': 'app-product-detail-tabla'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductDetailPoleraComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductDetailTablaComponent.html":{"url":"components/ProductDetailTablaComponent.html","title":"component - ProductDetailTablaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductDetailTablaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/product-detail-tabla/product-detail-tabla.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-product-detail-tabla\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./product-detail-tabla.component.html\n            \n\n\n\n            \n                styleUrl\n                ./product-detail-tabla.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addToCartForm\n                            \n                            \n                                maxQuantity\n                            \n                            \n                                minQuantity\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                checkLoginState\n                            \n                            \n                                goBack\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigationService: NavigationService, platformId: Object, customersService: CustomersService, router: Router, ordersService: OrdersService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/product-detail-tabla/product-detail-tabla.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customersService\n                                                  \n                                                        \n                                                                        CustomersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ordersService\n                                                  \n                                                        \n                                                                        OrdersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail-tabla/product-detail-tabla.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkLoginState\n                        \n                    \n                \n            \n            \n                \ncheckLoginState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail-tabla/product-detail-tabla.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail-tabla/product-detail-tabla.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail-tabla/product-detail-tabla.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail-tabla/product-detail-tabla.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCartForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-detail-tabla/product-detail-tabla.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxQuantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-detail-tabla/product-detail-tabla.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minQuantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-detail-tabla/product-detail-tabla.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-detail-tabla/product-detail-tabla.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NavigationService } from '../../services/navigation.service';\ndeclare var bootstrap: any;\nimport { CustomersService } from '../../services/customers.service';\nimport { Router } from '@angular/router';\nimport { OrdersService } from '../../services/orders.service';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-product-detail-tabla',\n  standalone: true,\n  imports: [CommonModule, RouterModule, ReactiveFormsModule],\n  templateUrl: './product-detail-tabla.component.html',\n  styleUrl: './product-detail-tabla.component.scss'\n})\nexport class ProductDetailTablaComponent implements OnInit, AfterViewInit {\n  addToCartForm: FormGroup;\n  quantity: number = 1;\n  minQuantity: number = 1;\n  maxQuantity: number = 10;\n\n  constructor(\n    private navigationService: NavigationService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private customersService: CustomersService,\n    private router: Router,\n    private ordersService: OrdersService,\n\t  private fb: FormBuilder) {\n      this.addToCartForm = this.fb.group({\n      quantity: ['', [Validators.required]]}); \n  }\n\n    ngOnInit(): void {\n      this.checkLoginState();\n    }\n  \n    checkLoginState(): void {\n      if (isPlatformBrowser(this.platformId)) {\n        if (this.customersService.checkLoginState()) {\n          // Ocultar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n          document.getElementById('loginMenu')!.style.display = 'none';\n          document.getElementById('registerMenu')!.style.display = 'none';\n          // Mostrar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n          document.getElementById('profileMenu')!.style.display = 'block';\n          document.getElementById('logoutMenu')!.style.display = 'block';\n        } else {\n          // Ocultar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n          document.getElementById('profileMenu')!.style.display = 'none';\n          document.getElementById('logoutMenu')!.style.display = 'none';\n          // Mostrar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n          document.getElementById('loginMenu')!.style.display = 'block';\n          document.getElementById('registerMenu')!.style.display = 'block';\n        }\n      }\n    }\n\n  ngAfterViewInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      const links = document.querySelectorAll('a');\n      links.forEach(link => {\n        link.addEventListener('click', (event: Event) => {\n          event.preventDefault();\n          const target = event.target as HTMLElement;\n          const href = target.getAttribute('href');\n          if (href) {\n            this.navigationService.navigateWithDelay(href);\n          }\n        });\n      });\n      //Inicializar Carousel() de imagenes\n      if (typeof document !== 'undefined') {\n        const carouselElement = document.querySelector('#productCarousel') as HTMLElement;\n        if (carouselElement) {\n          const carousel = new bootstrap.Carousel(carouselElement, {\n            interval: 3000, // Cambia de imagen cada 2 segundos\n            ride: 'carousel'\n          });\n        }\n      }\n    }\n  }\n\n  goBack(): void {\n    this.router.navigate(['/product-catalog']);\n  }\n\n  addToCart(): void {\n    let quantity: number = 1;\n    if (this.addToCartForm.valid) {\n      quantity = this.addToCartForm.value.quantity;\n    }\n\n    const price: number = 30000;\n    const total = quantity * price;\n    const product = 'Tabla personalizada';\n    const image = 'assets/images/carpinteria1.png';\n    const registroExitoso = this.ordersService.registerCarts(product, image, price, quantity, total);\n    if (registroExitoso) {\n      console.log('Registro exitoso:', { product, image, price, quantity, total });\n    } else {\n      console.log('Error en el registro.');\n    }\n  }\n}\n\n    \n\n    \n            \n    \n        \n            \n                \n                    \n                    Puente Mágico\n                \n                    \n                \n                \n                    \n                        \n                            Home\n                        \n                        \n                            Ver Catalogo\n                        \n                        \n                            Contacto\n                        \n                        \n                            Iniciar Sesión\n                        \n                        \n                            Registro Cliente\n                        \n                        \n                            Perfil Cliente\n                        \n                        \n                            Cerrar Sesión\n                        \n                        \n                            Carro Compra\n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            \n\n                \n                \n                    \n                        \n                            \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                        Anterior\n                    \n                    \n                        \n                        Siguiente\n                    \n                \n            \n            \n                Tabla Madera\n                Categoria: Carpinteria\n                Precio: $ 30.000\n                Contactanos y conversemos sobre la elección de tu motivo.\n                Tabla Madera Nativa de Roble\n                50cm largo - 30cm ancho - 03cm espesor \n                \n                    \n                        Cantidad:\n                        \n                        \n                            Cantidad es obligatoria.\n                        \n                    \n                    \n                    Agregar al Carro\n                \n            \n        \n        \n        Volver\n    \n\n    \n    \n        \n            &copy; 2024 Puente Mágico. Reservados todos los derechos.\n        \n    \n\n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Puente Mágico                                                                                                                                            Home                                                                            Ver Catalogo                                                                            Contacto                                                                            Iniciar Sesión                                                                            Registro Cliente                                                                            Perfil Cliente                                                                            Cerrar Sesión                                                                            Carro Compra                                                                                                                                                                                                                                                                                                                                                                                                                    Anterior                                                                                        Siguiente                                                                            Tabla Madera                Categoria: Carpinteria                Precio: $ 30.000                Contactanos y conversemos sobre la elección de tu motivo.                Tabla Madera Nativa de Roble                50cm largo - 30cm ancho - 03cm espesor                                                             Cantidad:                                                                            Cantidad es obligatoria.                                                                                    Agregar al Carro                                                    Volver                                © 2024 Puente Mágico. Reservados todos los derechos.                                '\n    var COMPONENTS = [{'name': 'AdminClientManagementComponent', 'selector': 'app-admin-client-management'},{'name': 'AdminContactManagementComponent', 'selector': 'app-admin-contact-management'},{'name': 'AdminLoginComponent', 'selector': 'app-admin-login'},{'name': 'AdminLogoutComponent', 'selector': 'app-admin-logout'},{'name': 'AdminOrderMonitoringComponent', 'selector': 'app-admin-order-monitoring'},{'name': 'AdminUserManagementComponent', 'selector': 'app-admin-user-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'ProductCatalogComponent', 'selector': 'app-product-catalog'},{'name': 'ProductDetailAluminioComponent', 'selector': 'app-product-detail-aluminio'},{'name': 'ProductDetailCroqueraComponent', 'selector': 'app-product-detail-croquera'},{'name': 'ProductDetailCuadernoComponent', 'selector': 'app-product-detail-cuaderno'},{'name': 'ProductDetailLibretaComponent', 'selector': 'app-product-detail-libreta'},{'name': 'ProductDetailPoleraComponent', 'selector': 'app-product-detail-polera'},{'name': 'ProductDetailTablaComponent', 'selector': 'app-product-detail-tabla'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductDetailTablaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Profile.html":{"url":"interfaces/Profile.html","title":"interface - Profile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/users.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CryptoService } from './crypto.service';\n\ninterface Users {\n  name: string;\n  email: string;\n  password: string;\n  profile: string;\n}\n\ninterface Profile {\n  id: number;\n  name: string;\n}\n\ninterface User {\n  name: string;\n  email: string;\n  password: string;\n  profile: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  private users: Users[] = [];\n  private profiles: Profile[] = [];\n  private storageKey = 'users';\n\n  /**\n   * @description \n   * Constructor del servicio. Carga los perfiles y usuarios desde localStorage.\n   * \n   * @param {CryptoService} cryptoService - Servicio para encriptar y desencriptar datos.\n   */\n  constructor(private cryptoService: CryptoService) {\n    if (this.isLocalStorageAvailable()) {\n      const profilesSaved = localStorage.getItem('profiles');\n      this.profiles = profilesSaved ? JSON.parse(profilesSaved) : [];\n      const usersSaved = localStorage.getItem('users');\n      this.users = usersSaved ? JSON.parse(usersSaved) : [];\n    } else {\n      this.users = [];\n      this.profiles = [];\n    }\n  }\n\n  /**\n   * @description \n   * Registra un nuevo perfil de usuario.\n   * \n   * @param {number} id - El ID del perfil.\n   * @param {string} name - El nombre del perfil.\n   * @return {boolean} - Retorna true si el perfil fue registrado exitosamente, de lo contrario false.\n   */\n  registerProfile(id: number, name: string): boolean {\n    console.log('Intentando registrar perfil de usuario:', { id, name });\n    const profileExisting = this.profiles.find(profile => profile.id === id);\n    if (profileExisting) {\n      this.mostrarAlerta('El perfil de usuario ya existe.', 'danger');\n      console.log('El perfil de usuario ya existe.');\n      return false;\n    }\n\n    const newProfile: Profile = { id, name };\n    this.profiles.push(newProfile);\n    if (this.isLocalStorageAvailable()) {\n      localStorage.setItem('profiles', JSON.stringify(this.profiles));\n    }\n    this.mostrarAlerta('Perfil de usuario registrado exitosamente.', 'success');\n    console.log('Perfil de usuario registrado exitosamente:', newProfile);\n    return true;\n  }\n\n  /**\n   * @description \n   * Registra un nuevo usuario.\n   * \n   * @param {string} name - El nombre del usuario.\n   * @param {string} email - El correo electrónico del usuario.\n   * @param {string} password - La contraseña del usuario.\n   * @param {string} profile - El perfil del usuario.\n   * @return {boolean} - Retorna true si el usuario fue registrado exitosamente, de lo contrario false.\n   */\n  registerUser(name: string, email: string, password: string, profile: string): boolean {\n    console.log('Intentando registrar usuario:', { name, email, profile });\n    const userExisting = this.users.find(user => user.email === email);\n    if (userExisting) {\n      this.mostrarAlerta('El usuario ya existe.', 'danger');\n      console.log('El usuario ya existe.');\n      return false;\n    }\n\n    const newUser: Users = { name, email, password, profile };\n    this.users.push(newUser);\n    if (this.isLocalStorageAvailable()) {\n      localStorage.setItem('users', JSON.stringify(this.users));\n    }\n    this.mostrarAlerta('Usuario registrado exitosamente.', 'success');\n    console.log('Usuario registrado exitosamente:', newUser);\n    return true;\n  }\n\n  /**\n   * @description \n   * Actualiza un usuario existente.\n   * \n   * @param {string} name - El nombre del usuario.\n   * @param {string} email - El correo electrónico del usuario.\n   * @param {string} password - La contraseña del usuario.\n   * @param {string} profile - El perfil del usuario.\n   * @return {boolean} - Retorna true si el usuario fue actualizado exitosamente, de lo contrario false.\n   */\n  updatedUser(name: string, email: string, password: string, profile: string): boolean {\n    console.log('Intentando actualizar usuario:', { name, email, password, profile });\n    const userExisting = this.users.find(user => user.email === email);\n    if (userExisting) {\n      const userIndex = this.users.findIndex(user => user.email === email);\n      if (userIndex !== -1) {\n        password = this.cryptoService.encrypt(password);\n        this.users[userIndex] = { name: name, email: email, password: password, profile: profile };\n        localStorage.setItem('users', JSON.stringify(this.users));\n\n        this.mostrarAlerta('Usuario actualizado exitosamente.', 'success');\n        console.log('Usuario actualizado exitosamente:', this.users[userIndex]);\n        return true;\n      } else {\n        this.mostrarAlerta('Error al actualizar el usuario.', 'danger');\n        console.log('Error al actualizar el usuario:', email);\n        return false;\n      }\n    }\n\n    this.mostrarAlerta('Usuario no actualizado.', 'danger');\n    console.log('Usuario no actualizado:', email);\n    return false;\n  }\n\n  /**\n   * @description \n   * Inicia sesión de un usuario.\n   * \n   * @param {string} email - El correo electrónico del usuario.\n   * @param {string} password - La contraseña del usuario.\n   * @return {boolean} - Retorna true si el inicio de sesión fue exitoso, de lo contrario false.\n   */\n  iniciarSesion(email: string, password: string): boolean {\n    console.log('Intentando iniciar sesión:', { email, password });\n    // const user = this.users.find(user => user.email === email && this.cryptoService.decrypt(user.password) === password);\n    const user = this.users.find(user => user.email.trim() === email.trim() && user.password.trim() === password.trim());\n    console.log('Estado sesión:', user);\n    if (user) {\n      this.mostrarAlerta('Inicio de sesión exitoso.', 'success');\n      console.log('Inicio de sesión exitoso:', user);\n      this.setLoginState(user);\n      return true;\n    } else {\n      this.mostrarAlerta('Email o contraseña incorrectos.', 'danger');\n      console.log('Email o contraseña incorrectos.');\n      return false;\n    }\n  }\n\n  /**\n   * @description \n   * Muestra una alerta en la interfaz de usuario.\n   * \n   * @param {string} mensaje - El mensaje de la alerta.\n   * @param {string} tipo - El tipo de alerta (e.g., 'success', 'danger').\n   */\n  private mostrarAlerta(mensaje: string, tipo: string): void {\n    const alertaDiv = document.createElement('div');\n    alertaDiv.className = `alert alert-${tipo}`;\n    alertaDiv.appendChild(document.createTextNode(mensaje));\n    const container = document.querySelector('.container');\n    if (container) {\n      const firstChild = container.firstChild;\n      if (firstChild) {\n        container.insertBefore(alertaDiv, firstChild);\n      } else {\n        container.appendChild(alertaDiv);\n      }\n\n      setTimeout(() => {\n        const alerta = document.querySelector('.alert');\n        if (alerta) {\n          alerta.remove();\n        }\n      }, 6000);\n    }\n  }\n\n  /**\n   * @description \n   * Verifica si localStorage está disponible.\n   * \n   * @return {boolean} - Retorna true si localStorage está disponible, de lo contrario false.\n   */\n  isLocalStorageAvailable(): boolean {\n    try {\n      const test = '__test__';\n      localStorage.setItem(test, test);\n      localStorage.removeItem(test);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * @description \n   * Establece el estado de inicio de sesión del usuario.\n   * \n   * @param {any} user - El usuario que ha iniciado sesión.\n   */\n  setLoginState(user: any): void {\n    if (this.isLocalStorageAvailable()) {\n      localStorage.setItem('loggedInUser', JSON.stringify(user));\n    }\n  }\n\n  /**\n   * @description \n   * Verifica el estado de inicio de sesión del usuario.\n   * \n   * @return {boolean} - Retorna true si el usuario ha iniciado sesión, de lo contrario false.\n   */\n  checkLoginState(): boolean {\n    if (this.isLocalStorageAvailable()) {\n      const loggedInUser = JSON.parse(localStorage.getItem('loggedInUser') || 'null');\n      return loggedInUser !== null;\n    }\n    return false;\n  }\n\n  /**\n   * @description Cierra la sesión del usuario.\n   */\n  logout(): void {\n    if (this.isLocalStorageAvailable()) {\n      console.log('Logout usuario.');\n      localStorage.removeItem('loggedInUser');\n    }\n  }\n\n  /**\n   * @description \n   * Busca un usuario por su correo electrónico.\n   * \n   * @param {string} email - El correo electrónico del usuario.\n   * @return {boolean} - Retorna true si el usuario fue encontrado, de lo contrario false.\n   */\n  findUser(email: string): boolean {\n    console.log('Buscando usuario:', { email });\n    const user = this.users.find(user => user.email === email);\n    if (user) {\n      this.mostrarAlerta('Usuario encontrado.', 'success');\n      console.log('Usuario encontrado:', user);\n      return true;\n    } else {\n      this.mostrarAlerta('Usuario no encontrado.', 'danger');\n      console.log('Usuario no encontrado.');\n      return false;\n    }\n  }\n\n  /**\n   * @description \n   * Obtiene la lista de todos los usuarios.\n   * \n   * @return {User[]} - Un array de objetos User.\n   */\n  getUsers(): User[] {\n    return JSON.parse(localStorage.getItem(this.storageKey) || '[]');\n  }\n\n  /**\n   * @description \n   * Agrega un nuevo usuario a la lista y guarda en localStorage.\n   * \n   * @param {User} user - El usuario a agregar.\n   * @return {void}\n   */\n  addUser(user: User): void {\n    const users = this.getUsers();\n    users.push(user);\n    localStorage.setItem(this.storageKey, JSON.stringify(users));\n  }\n\n  /**\n   * @description \n   * Actualiza un usuario existente.\n   * \n   * @param {number} index - El índice del usuario a actualizar.\n   * @param {User} updatedUser - Los datos actualizados del usuario.\n   * @return {void}\n   */\n  updateUser(index: number, updatedUser: User): void {\n    const users = this.getUsers();\n    users[index] = updatedUser;\n    localStorage.setItem(this.storageKey, JSON.stringify(users));\n  }\n\n  /**\n   * @description \n   * Elimina un usuario de la lista y de localStorage.\n   * \n   * @param {number} index - El índice del usuario a eliminar.\n   * @return {void}\n   */\n  deleteUser(index: number): void {\n    const users = this.getUsers();\n    users.splice(index, 1);\n    localStorage.setItem(this.storageKey, JSON.stringify(users));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/profile/profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n            \n                styleUrl\n                ./profile.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                customer\n                            \n                            \n                                profileForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateAge\n                            \n                            \n                                checkLoginState\n                            \n                            \n                                formatToFormDate\n                            \n                            \n                                formatToStorageDate\n                            \n                            \n                                loadCustomerData\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onReset\n                            \n                            \n                                onSubmit\n                            \n                            \n                                passwordMatchValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigationService: NavigationService, platformId: Object, fb: FormBuilder, customersService: CustomersService, renderer: Renderer2, el: ElementRef, cryptoService: CryptoService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/profile/profile.component.ts:21\n                            \n                        \n\n                \n                    \n                            Constructor del componente ProfileComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de navegación.\n\n\n                                                        \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nIdentificador de la plataforma.\n\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nConstructor de formularios reactivos.\n\n\n                                                        \n                                                \n                                                \n                                                        customersService\n                                                  \n                                                        \n                                                                        CustomersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de clientes.\n\n\n                                                        \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de renderizado.\n\n\n                                                        \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nReferencia al elemento HTML.\n\n\n                                                        \n                                                \n                                                \n                                                        cryptoService\n                                                  \n                                                        \n                                                                        CryptoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de encriptación.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de enrutamiento.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calculateAge\n                        \n                    \n                \n            \n            \n                \ncalculateAge(birthdate: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:110\n                        \n                    \n\n\n            \n                \n                        Calcula la edad del cliente basado en su fecha de nacimiento.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                birthdate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLa fecha de nacimiento del cliente.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \nLa edad del cliente.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkLoginState\n                        \n                    \n                \n            \n            \n                \ncheckLoginState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:187\n                        \n                    \n\n\n            \n                \n                        Verifica el estado de inicio de sesión del cliente y actualiza la interfaz de usuario en consecuencia.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatToFormDate\n                        \n                    \n                \n            \n            \n                \nformatToFormDate(date: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:245\n                        \n                    \n\n\n            \n                \n                        Formatea una fecha de almacenamiento en el formato DD-MM-YYYY.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLa fecha en formato YYYY-MM-DD.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \nLa fecha formateada en el formato DD-MM-YYYY.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatToStorageDate\n                        \n                    \n                \n            \n            \n                \nformatToStorageDate(date: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:257\n                        \n                    \n\n\n            \n                \n                        Formatea una fecha de formulario en el formato YYYY-MM-DD.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLa fecha en formatoDD-MM-YYYY.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \nLa fecha formateada en el formato YYYY-MM-DD.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCustomerData\n                        \n                    \n                \n            \n            \n                \nloadCustomerData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:215\n                        \n                    \n\n\n            \n                \n                        Carga los datos del cliente logueado desde el archivo JSON y actualiza el formulario.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Hook que se ejecuta después de que la vista ha sido inicializada. Configura la navegación con retardo para los enlaces.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Hook de inicialización del componente. Verifica el estado de inicio de sesión y carga los datos del cliente.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onReset\n                        \n                    \n                \n            \n            \n                \nonReset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:169\n                        \n                    \n\n\n            \n                \n                        Restablece el formulario de perfil.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:127\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario de perfil. Realiza las validaciones y actualiza al cliente.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator(form: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Valida que las contraseñas coincidan si se proporcionan.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl formulario de perfil.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { mismatch: boolean; }\n\n                        \n                            \n                                \nRetorna null si las contraseñas coinciden o no se proporcionan, de lo contrario un objeto con el error.\n\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        customer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Customer | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile/profile.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile/profile.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NavigationService } from '../../services/navigation.service';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CustomersService, Customer } from '../../services/customers.service';\nimport { Renderer2, ElementRef } from '@angular/core';\nimport { CryptoService } from '../../services/crypto.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  standalone: true,\n  imports: [CommonModule, RouterModule, ReactiveFormsModule],\n  templateUrl: './profile.component.html',\n  styleUrl: './profile.component.scss'\n})\nexport class ProfileComponent implements OnInit, AfterViewInit {\n  profileForm: FormGroup;\n  customer: Customer | undefined;\n\n  /**\n   * @description \n   * Constructor del componente ProfileComponent.\n   * \n   * @param {NavigationService} navigationService - Servicio de navegación.\n   * @param {Object} platformId - Identificador de la plataforma.\n   * @param {FormBuilder} fb - Constructor de formularios reactivos.\n   * @param {CustomersService} customersService - Servicio de clientes.\n   * @param {Renderer2} renderer - Servicio de renderizado.\n   * @param {ElementRef} el - Referencia al elemento HTML.\n   * @param {CryptoService} cryptoService - Servicio de encriptación.\n   * @param {Router} router - Servicio de enrutamiento.\n   */\n  constructor(\n    private navigationService: NavigationService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private fb: FormBuilder,\n    private customersService: CustomersService,\n    private renderer: Renderer2,\n    private el: ElementRef,\n    private cryptoService: CryptoService,\n    private router: Router) { \n      this.profileForm = this.fb.group({\n      clientName: ['', Validators.required],\n      clientSurname: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.pattern('(?=.*[A-Z])(?=.*\\\\d)[A-Za-z\\\\d]{6,18}$')]],\n      confirmPassword: [''],\n      birthdate: ['', Validators.required],\n      dispatchAddress: ['']\n      }, { validator: this.passwordMatchValidator });\n  }\n\n  /**\n   * @description \n   * Hook de inicialización del componente. Verifica el estado de inicio de sesión y carga los datos del cliente.\n   * \n   * @return {void}\n   */\n  ngOnInit(): void {\n    this.checkLoginState();\n    this.loadCustomerData();\n  }\n\n  /**\n   * @description \n   * Hook que se ejecuta después de que la vista ha sido inicializada. Configura la navegación con retardo para los enlaces.\n   * \n   * @return {void}\n   */\n  ngAfterViewInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      const links = document.querySelectorAll('a');\n      links.forEach(link => {\n        link.addEventListener('click', (event: Event) => {\n          event.preventDefault();\n          const target = event.target as HTMLElement;\n          const href = target.getAttribute('href');\n          if (href) {\n            this.navigationService.navigateWithDelay(href);\n          }\n        });\n      });\n    }\n  }\n\n  /**\n   * @description \n   * Valida que las contraseñas coincidan si se proporcionan.\n   * \n   * @param {FormGroup} form - El formulario de perfil.\n   * @return {null | Object} - Retorna null si las contraseñas coinciden o no se proporcionan, de lo contrario un objeto con el error.\n   */\n  passwordMatchValidator(form: FormGroup) {\n    if (!(form.get('password')?.value === '')) {\n      return form.get('password')?.value === form.get('confirmPassword')?.value ? null : { mismatch: true };\n    }\n    return null;\n  }\n\n  /**\n   * @description \n   * Calcula la edad del cliente basado en su fecha de nacimiento.\n   * \n   * @param {string} birthdate - La fecha de nacimiento del cliente.\n   * @return {number} - La edad del cliente.\n   */\n  calculateAge(birthdate: string): number {\n    const today = new Date();\n    const birth = new Date(birthdate);\n    let age = today.getFullYear() - birth.getFullYear();\n    const monthDiff = today.getMonth() - birth.getMonth();\n    if (monthDiff  {\n          alert('Actualización exitosa!');\n          this.customersService.mostrarAlerta('Cliente actualizado exitosamente.', 'success');\n          // Actualizar los datos del cliente logueado en localStorage\n          localStorage.setItem('loggedInClient', JSON.stringify(updatedCustomer));\n        },\n        error => {\n          console.error('Error al actualizar el perfil cliente:', error);\n        }\n      );\n    } else {\n      console.log('Formulario inválido');\n    }\n  }\n\n  /**\n   * @description \n   * Restablece el formulario de perfil.\n   * \n   * @return {void}\n   */\n  onReset(): void {\n    this.profileForm.reset({\n      clientName: '',\n      clientSurname: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      birthdate: '',\n      dispatchAddress: ''\n    });\n  }\n\n  /**\n   * @description \n   * Verifica el estado de inicio de sesión del cliente y actualiza la interfaz de usuario en consecuencia.\n   * \n   * @return {void}\n   */\n  checkLoginState(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.customersService.checkLoginState()) {\n        // Ocultar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n        document.getElementById('loginMenu')!.style.display = 'none';\n        document.getElementById('registerMenu')!.style.display = 'none';\n        // Mostrar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n        document.getElementById('profileMenu')!.style.display = 'block';\n        document.getElementById('logoutMenu')!.style.display = 'block';\n      } else {\n        // Ocultar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n        document.getElementById('profileMenu')!.style.display = 'none';\n        document.getElementById('logoutMenu')!.style.display = 'none';\n        // Mostrar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n        document.getElementById('loginMenu')!.style.display = 'block';\n        document.getElementById('registerMenu')!.style.display = 'block';\n        // Redirigir al registrar del cliente\n        this.router.navigate(['/register']);\n      }\n    }\n  }\n\n  /**\n   * @description \n   * Carga los datos del cliente logueado desde el archivo JSON y actualiza el formulario.\n   * \n   * @return {void}\n   */\n  loadCustomerData(): void {\n    const loggedInClientEmail = this.customersService.getLoggedInClientEmail();\n    if (loggedInClientEmail) {\n      this.customersService.getCustomerByEmail(loggedInClientEmail).subscribe(\n        customer => {\n          if (customer) {\n            this.customer = customer;\n            this.profileForm.patchValue({\n              clientName: customer.clientName,\n              clientSurname: customer.clientSurname,\n              email: customer.email,\n              birthdate: this.formatToFormDate(customer.birthdate),\n              dispatchAddress: customer.dispatchAddress\n            });\n          }\n        },\n        error => {\n          console.error('Error al cargar los datos del cliente:', error);\n        }\n      );\n    }\n  }\n\n  /**\n   * @description \n   * Formatea una fecha de almacenamiento en el formato DD-MM-YYYY.\n   * \n   * @param {string} date - La fecha en formato YYYY-MM-DD.\n   * @return {string} - La fecha formateada en el formato DD-MM-YYYY.\n   */\n  formatToFormDate(date: string): string {\n    const [year, month, day] = date.split('-');\n    return `${day}-${month}-${year}`;\n  }\n\n  /**\n   * @description \n   * Formatea una fecha de formulario en el formato YYYY-MM-DD.\n   * \n   * @param {string} date - La fecha en formatoDD-MM-YYYY.\n\t * @return {string} - La fecha formateada en el formato YYYY-MM-DD.\n   */\n  formatToStorageDate(date: string): string {\n    const [day, month, year] = date.split('-');\n    return `${year}-${month}-${day}`;\n  }\n}\n    \n\n    \n            \n    \n        \n            \n                \n                    \n                    Puente Mágico\n                \n                    \n                \n                \n                    \n                        \n                            Home\n                        \n                        \n                            Ver Catalogo\n                        \n                        \n                            Contacto\n                        \n                        \n                            Iniciar Sesión\n                        \n                        \n                            Registro Cliente\n                        \n                        \n                            Perfil Cliente\n                        \n                        \n                            Cerrar Sesión\n                        \n                        \n                            Carro Compra\n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            \n                Perfil Cliente\n\t\t\t\t\n                    \n                        Nombre:\n                        \n                        \n                         Nombre es obligatorio.\n                        \n                    \n                    \n                        Apellidos:\n                        \n                        \n                         Apellidos es obligatorio.\n                        \n                    \n                    \n                        Correo Electrónico:\n                        \n                        \n                            Correo Electrónico es obligatorio.\n                            Formato de correo electrónico incorrecto.\n                        \n                    \n                    \n                        Contraseña:\n                        \n                        Déjelo en blanco si no desea cambiar la contraseña\n                        \n                            La contraseña debe tener entre 6 y 18 caracteres, al menos un número y una letra mayúscula.\n                        \n                    \n                    \n                        Confirmar Contraseña:\n                        \n                        \n                         Las contraseñas no coinciden.\n                        \n                    \n                    \n                        Fecha de Nacimiento:\n                        \n                        \n                         Fecha de Nacimiento es obligatoria.\n                        \n                    \n                    \n                        Dirección de Despacho:\n                        \n                    \n\t\t\t\t\t\n                    Actualizar Perfil\n                    Limpiar\n                \n            \n        \n    \n\n    \n    \n        \n            &copy; 2024 Puente Mágico. Reservados todos los derechos.\n        \n    \n\n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Puente Mágico                                                                                                                                            Home                                                                            Ver Catalogo                                                                            Contacto                                                                            Iniciar Sesión                                                                            Registro Cliente                                                                            Perfil Cliente                                                                            Cerrar Sesión                                                                            Carro Compra                                                                                                                                Perfil Cliente\t\t\t\t                                            Nombre:                                                                         Nombre es obligatorio.                                                                                        Apellidos:                                                                         Apellidos es obligatorio.                                                                                        Correo Electrónico:                                                                            Correo Electrónico es obligatorio.                            Formato de correo electrónico incorrecto.                                                                                        Contraseña:                                                Déjelo en blanco si no desea cambiar la contraseña                                                    La contraseña debe tener entre 6 y 18 caracteres, al menos un número y una letra mayúscula.                                                                                        Confirmar Contraseña:                                                                         Las contraseñas no coinciden.                                                                                        Fecha de Nacimiento:                                                                         Fecha de Nacimiento es obligatoria.                                                                                        Dirección de Despacho:                                            \t\t\t\t\t                    Actualizar Perfil                    Limpiar                                                                    © 2024 Puente Mágico. Reservados todos los derechos.                                '\n    var COMPONENTS = [{'name': 'AdminClientManagementComponent', 'selector': 'app-admin-client-management'},{'name': 'AdminContactManagementComponent', 'selector': 'app-admin-contact-management'},{'name': 'AdminLoginComponent', 'selector': 'app-admin-login'},{'name': 'AdminLogoutComponent', 'selector': 'app-admin-logout'},{'name': 'AdminOrderMonitoringComponent', 'selector': 'app-admin-order-monitoring'},{'name': 'AdminUserManagementComponent', 'selector': 'app-admin-user-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'ProductCatalogComponent', 'selector': 'app-product-catalog'},{'name': 'ProductDetailAluminioComponent', 'selector': 'app-product-detail-aluminio'},{'name': 'ProductDetailCroqueraComponent', 'selector': 'app-product-detail-croquera'},{'name': 'ProductDetailCuadernoComponent', 'selector': 'app-product-detail-cuaderno'},{'name': 'ProductDetailLibretaComponent', 'selector': 'app-product-detail-libreta'},{'name': 'ProductDetailPoleraComponent', 'selector': 'app-product-detail-polera'},{'name': 'ProductDetailTablaComponent', 'selector': 'app-product-detail-tabla'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/register/register.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                CustomersService\n                \n            \n\n\n            \n                selector\n                app-register\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                            ReactiveFormsModule\n                            HttpClientModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n            \n                styleUrl\n                ./register.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registerForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateAge\n                            \n                            \n                                checkLoginState\n                            \n                            \n                                formatToFormDate\n                            \n                            \n                                formatToStorageDate\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onReset\n                            \n                            \n                                onSubmit\n                            \n                            \n                                passwordMatchValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigationService: NavigationService, platformId: Object, fb: FormBuilder, customersService: CustomersService, renderer: Renderer2, el: ElementRef, cryptoService: CryptoService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/register/register.component.ts:22\n                            \n                        \n\n                \n                    \n                            Constructor del componente RegisterComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de navegación.\n\n\n                                                        \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nIdentificador de la plataforma.\n\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nConstructor de formularios reactivos.\n\n\n                                                        \n                                                \n                                                \n                                                        customersService\n                                                  \n                                                        \n                                                                        CustomersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de clientes.\n\n\n                                                        \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de renderizado.\n\n\n                                                        \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nReferencia al elemento HTML.\n\n\n                                                        \n                                                \n                                                \n                                                        cryptoService\n                                                  \n                                                        \n                                                                        CryptoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de encriptación.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de enrutamiento.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calculateAge\n                        \n                    \n                \n            \n            \n                \ncalculateAge(birthdate: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:107\n                        \n                    \n\n\n            \n                \n                        Calcula la edad del cliente basado en su fecha de nacimiento.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                birthdate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLa fecha de nacimiento del cliente.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \nLa edad del cliente.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkLoginState\n                        \n                    \n                \n            \n            \n                \ncheckLoginState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:180\n                        \n                    \n\n\n            \n                \n                        Verifica el estado de inicio de sesión del cliente y actualiza la interfaz de usuario en consecuencia.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatToFormDate\n                        \n                    \n                \n            \n            \n                \nformatToFormDate(date: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:209\n                        \n                    \n\n\n            \n                \n                        Formatea una fecha de almacenamiento en el formato DD-MM-YYYY.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLa fecha en formato YYYY-MM-DD.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \nLa fecha formateada en el formato DD-MM-YYYY.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatToStorageDate\n                        \n                    \n                \n            \n            \n                \nformatToStorageDate(date: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:221\n                        \n                    \n\n\n            \n                \n                        Formatea una fecha de formulario en el formato YYYY-MM-DD.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLa fecha en formato DD-MM-YYYY.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \nLa fecha formateada en el formato YYYY-MM-DD.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Hook que se ejecuta después de que la vista ha sido inicializada. Configura la navegación con retardo para los enlaces.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:63\n                        \n                    \n\n\n            \n                \n                        Hook de inicialización del componente. Verifica el estado de inicio de sesión.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onReset\n                        \n                    \n                \n            \n            \n                \nonReset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:162\n                        \n                    \n\n\n            \n                \n                        Restablece el formulario de registro.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:124\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario de registro. Realiza las validaciones y registra al cliente.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator(form: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Valida que las contraseñas coincidan.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl formulario de registro.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { mismatch: boolean; }\n\n                        \n                            \n                                \nRetorna null si las contraseñas coinciden, de lo contrario un objeto con el error.\n\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NavigationService } from '../../services/navigation.service';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CustomersService, Customer } from '../../services/customers.service';\nimport { Renderer2, ElementRef } from '@angular/core';\nimport { CryptoService } from '../../services/crypto.service';\nimport { Router } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\n@Component({\n  selector: 'app-register',\n  standalone: true,\n  imports: [CommonModule, RouterModule, ReactiveFormsModule, HttpClientModule],\n  templateUrl: './register.component.html',\n  styleUrl: './register.component.scss',\n  providers: [CustomersService]\n})\nexport class RegisterComponent implements OnInit, AfterViewInit {\n  registerForm: FormGroup;\n\n  /**\n   * @description \n   * Constructor del componente RegisterComponent.\n   * \n   * @param {NavigationService} navigationService - Servicio de navegación.\n   * @param {Object} platformId - Identificador de la plataforma.\n   * @param {FormBuilder} fb - Constructor de formularios reactivos.\n   * @param {CustomersService} customersService - Servicio de clientes.\n   * @param {Renderer2} renderer - Servicio de renderizado.\n   * @param {ElementRef} el - Referencia al elemento HTML.\n   * @param {CryptoService} cryptoService - Servicio de encriptación.\n   * @param {Router} router - Servicio de enrutamiento.\n   */\n  constructor(\n    private navigationService: NavigationService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private fb: FormBuilder,\n    private customersService: CustomersService,\n    private renderer: Renderer2,\n    private el: ElementRef,\n    private cryptoService: CryptoService,\n    private router: Router) { \n      this.registerForm = this.fb.group({\n      clientName: ['', Validators.required],\n      clientSurname: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.pattern('(?=.*[A-Z])(?=.*\\\\d)[A-Za-z\\\\d]{6,18}$')]],\n      confirmPassword: ['', Validators.required],\n      birthdate: ['', Validators.required],\n      dispatchAddress: ['']\n      }, { validator: this.passwordMatchValidator });\n  }\n\n  /**\n   * @description \n   * Hook de inicialización del componente. Verifica el estado de inicio de sesión.\n   * \n   * @return {void}\n   */\n  ngOnInit(): void {\n    this.checkLoginState();\n  }\n\n  /**\n   * @description \n   * Hook que se ejecuta después de que la vista ha sido inicializada. Configura la navegación con retardo para los enlaces.\n   * \n   * @return {void}\n   */\n  ngAfterViewInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      const links = document.querySelectorAll('a');\n      links.forEach(link => {\n        link.addEventListener('click', (event: Event) => {\n          event.preventDefault();\n          const target = event.target as HTMLElement;\n          const href = target.getAttribute('href');\n          if (href) {\n            this.navigationService.navigateWithDelay(href);\n          }\n        });\n      });\n    }\n  }\n\n  /**\n   * @description \n   * Valida que las contraseñas coincidan.\n   * \n   * @param {FormGroup} form - El formulario de registro.\n   * @return {null | Object} - Retorna null si las contraseñas coinciden, de lo contrario un objeto con el error.\n   */\n  passwordMatchValidator(form: FormGroup) {\n    return form.get('password')?.value === form.get('confirmPassword')?.value ? null : { mismatch: true };\n  }\n\n  /**\n   * @description \n   * Calcula la edad del cliente basado en su fecha de nacimiento.\n   * \n   * @param {string} birthdate - La fecha de nacimiento del cliente.\n   * @return {number} - La edad del cliente.\n   */\n  calculateAge(birthdate: string): number {\n    const today = new Date();\n    const birth = new Date(birthdate);\n    let age = today.getFullYear() - birth.getFullYear();\n    const monthDiff = today.getMonth() - birth.getMonth();\n    if (monthDiff  {\n          alert('Registro exitoso!');\n          this.registerForm.reset();\n        },\n        error => {\n          alert('Error: ' + error.message);\n        }\n      );\n    } else {\n      console.log('Formulario inválido');\n    }\n  }\n\n  /**\n   * @description \n   * Restablece el formulario de registro.\n   * \n   * @return {void}\n   */\n  onReset(): void {\n    this.registerForm.reset({\n      clientName: '',\n      clientSurname: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      birthdate: '',\n      dispatchAddress: ''\n    });\n  }\n\n  /**\n   * @description \n   * Verifica el estado de inicio de sesión del cliente y actualiza la interfaz de usuario en consecuencia.\n   * \n   * @return {void}\n   */\n  checkLoginState(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.customersService.checkLoginState()) {\n        // Ocultar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n        document.getElementById('loginMenu')!.style.display = 'none';\n        document.getElementById('registerMenu')!.style.display = 'none';\n        // Mostrar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n        document.getElementById('profileMenu')!.style.display = 'block';\n        document.getElementById('logoutMenu')!.style.display = 'block';\n        // Redirigir al perfil del cliente\n        this.router.navigate(['/profile']);\n      } else {\n        // Ocultar el menú \"Perfil Cliente\" y \"Cerrar Sesión\"\n        document.getElementById('profileMenu')!.style.display = 'none';\n        document.getElementById('logoutMenu')!.style.display = 'none';\n        // Mostrar el menú \"Iniciar Sesión\" y \"Registro Cliente\"\n        document.getElementById('loginMenu')!.style.display = 'block';\n        document.getElementById('registerMenu')!.style.display = 'block';\n      }\n    }\n  }\n\n  /**\n   * @description \n   * Formatea una fecha de almacenamiento en el formato DD-MM-YYYY.\n   * \n   * @param {string} date - La fecha en formato YYYY-MM-DD.\n   * @return {string} - La fecha formateada en el formato DD-MM-YYYY.\n   */\n  formatToFormDate(date: string): string {\n    const [year, month, day] = date.split('-');\n    return `${day}-${month}-${year}`;\n  }\n\n  /**\n   * @description \n   * Formatea una fecha de formulario en el formato YYYY-MM-DD.\n   * \n   * @param {string} date - La fecha en formato DD-MM-YYYY.\n   * @return {string} - La fecha formateada en el formato YYYY-MM-DD.\n   */\n  formatToStorageDate(date: string): string {\n    const [day, month, year] = date.split('-');\n    return `${year}-${month}-${day}`;\n  }\n}\n    \n\n    \n            \n    \n        \n            \n                \n                    \n                    Puente Mágico\n                \n                    \n                \n                \n                    \n                        \n                            Home\n                        \n                        \n                            Ver Catalogo\n                        \n                        \n                            Contacto\n                        \n                        \n                            Iniciar Sesión\n                        \n                        \n                            Registro Cliente\n                        \n                        \n                            Perfil Cliente\n                        \n                        \n                            Cerrar Sesión\n                        \n                        \n                            Carro Compra\n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            \n                Registro Cliente\n                \n                    \n                        Nombre:\n                        \n                        \n                         Nombre es obligatorio.\n                        \n                    \n                    \n                        Apellidos:\n                        \n                        \n                         Apellidos es obligatorio.\n                        \n                    \n                    \n                        Correo Electrónico:\n                        \n                        \n                            Correo Electrónico es obligatorio.\n                            Formato de correo electrónico incorrecto.\n                        \n                    \n                    \n                        Contraseña:\n                        \n                        \n                            Contraseña es obligatoria.\n                            La contraseña debe tener entre 6 y 18 caracteres, al menos un número y una letra mayúscula.\n                        \n                    \n                    \n                        Confirmar Contraseña:\n                        \n                        \n                         Las contraseñas no coinciden.\n                        \n                    \n                    \n                        Fecha de Nacimiento:\n                        \n                        \n                         Fecha de Nacimiento es obligatoria.\n                        \n                    \n                    \n                        Dirección de Despacho:\n                        \n                    \n\t\t\t\t\t\n                    Registrar\n                    Limpiar\n                \n            \n        \n    \n\n    \n    \n        \n            &copy; 2024 Puente Mágico. Reservados todos los derechos.\n        \n    \n\n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Puente Mágico                                                                                                                                            Home                                                                            Ver Catalogo                                                                            Contacto                                                                            Iniciar Sesión                                                                            Registro Cliente                                                                            Perfil Cliente                                                                            Cerrar Sesión                                                                            Carro Compra                                                                                                                                Registro Cliente                                                            Nombre:                                                                         Nombre es obligatorio.                                                                                        Apellidos:                                                                         Apellidos es obligatorio.                                                                                        Correo Electrónico:                                                                            Correo Electrónico es obligatorio.                            Formato de correo electrónico incorrecto.                                                                                        Contraseña:                                                                            Contraseña es obligatoria.                            La contraseña debe tener entre 6 y 18 caracteres, al menos un número y una letra mayúscula.                                                                                        Confirmar Contraseña:                                                                         Las contraseñas no coinciden.                                                                                        Fecha de Nacimiento:                                                                         Fecha de Nacimiento es obligatoria.                                                                                        Dirección de Despacho:                                            \t\t\t\t\t                    Registrar                    Limpiar                                                                    © 2024 Puente Mágico. Reservados todos los derechos.                                '\n    var COMPONENTS = [{'name': 'AdminClientManagementComponent', 'selector': 'app-admin-client-management'},{'name': 'AdminContactManagementComponent', 'selector': 'app-admin-contact-management'},{'name': 'AdminLoginComponent', 'selector': 'app-admin-login'},{'name': 'AdminLogoutComponent', 'selector': 'app-admin-logout'},{'name': 'AdminOrderMonitoringComponent', 'selector': 'app-admin-order-monitoring'},{'name': 'AdminUserManagementComponent', 'selector': 'app-admin-user-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'ProductCatalogComponent', 'selector': 'app-product-catalog'},{'name': 'ProductDetailAluminioComponent', 'selector': 'app-product-detail-aluminio'},{'name': 'ProductDetailCroqueraComponent', 'selector': 'app-product-detail-croquera'},{'name': 'ProductDetailCuadernoComponent', 'selector': 'app-product-detail-cuaderno'},{'name': 'ProductDetailLibretaComponent', 'selector': 'app-product-detail-libreta'},{'name': 'ProductDetailPoleraComponent', 'selector': 'app-product-detail-polera'},{'name': 'ProductDetailTablaComponent', 'selector': 'app-product-detail-tabla'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/users.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            profile\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profile:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CryptoService } from './crypto.service';\n\ninterface Users {\n  name: string;\n  email: string;\n  password: string;\n  profile: string;\n}\n\ninterface Profile {\n  id: number;\n  name: string;\n}\n\ninterface User {\n  name: string;\n  email: string;\n  password: string;\n  profile: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  private users: Users[] = [];\n  private profiles: Profile[] = [];\n  private storageKey = 'users';\n\n  /**\n   * @description \n   * Constructor del servicio. Carga los perfiles y usuarios desde localStorage.\n   * \n   * @param {CryptoService} cryptoService - Servicio para encriptar y desencriptar datos.\n   */\n  constructor(private cryptoService: CryptoService) {\n    if (this.isLocalStorageAvailable()) {\n      const profilesSaved = localStorage.getItem('profiles');\n      this.profiles = profilesSaved ? JSON.parse(profilesSaved) : [];\n      const usersSaved = localStorage.getItem('users');\n      this.users = usersSaved ? JSON.parse(usersSaved) : [];\n    } else {\n      this.users = [];\n      this.profiles = [];\n    }\n  }\n\n  /**\n   * @description \n   * Registra un nuevo perfil de usuario.\n   * \n   * @param {number} id - El ID del perfil.\n   * @param {string} name - El nombre del perfil.\n   * @return {boolean} - Retorna true si el perfil fue registrado exitosamente, de lo contrario false.\n   */\n  registerProfile(id: number, name: string): boolean {\n    console.log('Intentando registrar perfil de usuario:', { id, name });\n    const profileExisting = this.profiles.find(profile => profile.id === id);\n    if (profileExisting) {\n      this.mostrarAlerta('El perfil de usuario ya existe.', 'danger');\n      console.log('El perfil de usuario ya existe.');\n      return false;\n    }\n\n    const newProfile: Profile = { id, name };\n    this.profiles.push(newProfile);\n    if (this.isLocalStorageAvailable()) {\n      localStorage.setItem('profiles', JSON.stringify(this.profiles));\n    }\n    this.mostrarAlerta('Perfil de usuario registrado exitosamente.', 'success');\n    console.log('Perfil de usuario registrado exitosamente:', newProfile);\n    return true;\n  }\n\n  /**\n   * @description \n   * Registra un nuevo usuario.\n   * \n   * @param {string} name - El nombre del usuario.\n   * @param {string} email - El correo electrónico del usuario.\n   * @param {string} password - La contraseña del usuario.\n   * @param {string} profile - El perfil del usuario.\n   * @return {boolean} - Retorna true si el usuario fue registrado exitosamente, de lo contrario false.\n   */\n  registerUser(name: string, email: string, password: string, profile: string): boolean {\n    console.log('Intentando registrar usuario:', { name, email, profile });\n    const userExisting = this.users.find(user => user.email === email);\n    if (userExisting) {\n      this.mostrarAlerta('El usuario ya existe.', 'danger');\n      console.log('El usuario ya existe.');\n      return false;\n    }\n\n    const newUser: Users = { name, email, password, profile };\n    this.users.push(newUser);\n    if (this.isLocalStorageAvailable()) {\n      localStorage.setItem('users', JSON.stringify(this.users));\n    }\n    this.mostrarAlerta('Usuario registrado exitosamente.', 'success');\n    console.log('Usuario registrado exitosamente:', newUser);\n    return true;\n  }\n\n  /**\n   * @description \n   * Actualiza un usuario existente.\n   * \n   * @param {string} name - El nombre del usuario.\n   * @param {string} email - El correo electrónico del usuario.\n   * @param {string} password - La contraseña del usuario.\n   * @param {string} profile - El perfil del usuario.\n   * @return {boolean} - Retorna true si el usuario fue actualizado exitosamente, de lo contrario false.\n   */\n  updatedUser(name: string, email: string, password: string, profile: string): boolean {\n    console.log('Intentando actualizar usuario:', { name, email, password, profile });\n    const userExisting = this.users.find(user => user.email === email);\n    if (userExisting) {\n      const userIndex = this.users.findIndex(user => user.email === email);\n      if (userIndex !== -1) {\n        password = this.cryptoService.encrypt(password);\n        this.users[userIndex] = { name: name, email: email, password: password, profile: profile };\n        localStorage.setItem('users', JSON.stringify(this.users));\n\n        this.mostrarAlerta('Usuario actualizado exitosamente.', 'success');\n        console.log('Usuario actualizado exitosamente:', this.users[userIndex]);\n        return true;\n      } else {\n        this.mostrarAlerta('Error al actualizar el usuario.', 'danger');\n        console.log('Error al actualizar el usuario:', email);\n        return false;\n      }\n    }\n\n    this.mostrarAlerta('Usuario no actualizado.', 'danger');\n    console.log('Usuario no actualizado:', email);\n    return false;\n  }\n\n  /**\n   * @description \n   * Inicia sesión de un usuario.\n   * \n   * @param {string} email - El correo electrónico del usuario.\n   * @param {string} password - La contraseña del usuario.\n   * @return {boolean} - Retorna true si el inicio de sesión fue exitoso, de lo contrario false.\n   */\n  iniciarSesion(email: string, password: string): boolean {\n    console.log('Intentando iniciar sesión:', { email, password });\n    // const user = this.users.find(user => user.email === email && this.cryptoService.decrypt(user.password) === password);\n    const user = this.users.find(user => user.email.trim() === email.trim() && user.password.trim() === password.trim());\n    console.log('Estado sesión:', user);\n    if (user) {\n      this.mostrarAlerta('Inicio de sesión exitoso.', 'success');\n      console.log('Inicio de sesión exitoso:', user);\n      this.setLoginState(user);\n      return true;\n    } else {\n      this.mostrarAlerta('Email o contraseña incorrectos.', 'danger');\n      console.log('Email o contraseña incorrectos.');\n      return false;\n    }\n  }\n\n  /**\n   * @description \n   * Muestra una alerta en la interfaz de usuario.\n   * \n   * @param {string} mensaje - El mensaje de la alerta.\n   * @param {string} tipo - El tipo de alerta (e.g., 'success', 'danger').\n   */\n  private mostrarAlerta(mensaje: string, tipo: string): void {\n    const alertaDiv = document.createElement('div');\n    alertaDiv.className = `alert alert-${tipo}`;\n    alertaDiv.appendChild(document.createTextNode(mensaje));\n    const container = document.querySelector('.container');\n    if (container) {\n      const firstChild = container.firstChild;\n      if (firstChild) {\n        container.insertBefore(alertaDiv, firstChild);\n      } else {\n        container.appendChild(alertaDiv);\n      }\n\n      setTimeout(() => {\n        const alerta = document.querySelector('.alert');\n        if (alerta) {\n          alerta.remove();\n        }\n      }, 6000);\n    }\n  }\n\n  /**\n   * @description \n   * Verifica si localStorage está disponible.\n   * \n   * @return {boolean} - Retorna true si localStorage está disponible, de lo contrario false.\n   */\n  isLocalStorageAvailable(): boolean {\n    try {\n      const test = '__test__';\n      localStorage.setItem(test, test);\n      localStorage.removeItem(test);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * @description \n   * Establece el estado de inicio de sesión del usuario.\n   * \n   * @param {any} user - El usuario que ha iniciado sesión.\n   */\n  setLoginState(user: any): void {\n    if (this.isLocalStorageAvailable()) {\n      localStorage.setItem('loggedInUser', JSON.stringify(user));\n    }\n  }\n\n  /**\n   * @description \n   * Verifica el estado de inicio de sesión del usuario.\n   * \n   * @return {boolean} - Retorna true si el usuario ha iniciado sesión, de lo contrario false.\n   */\n  checkLoginState(): boolean {\n    if (this.isLocalStorageAvailable()) {\n      const loggedInUser = JSON.parse(localStorage.getItem('loggedInUser') || 'null');\n      return loggedInUser !== null;\n    }\n    return false;\n  }\n\n  /**\n   * @description Cierra la sesión del usuario.\n   */\n  logout(): void {\n    if (this.isLocalStorageAvailable()) {\n      console.log('Logout usuario.');\n      localStorage.removeItem('loggedInUser');\n    }\n  }\n\n  /**\n   * @description \n   * Busca un usuario por su correo electrónico.\n   * \n   * @param {string} email - El correo electrónico del usuario.\n   * @return {boolean} - Retorna true si el usuario fue encontrado, de lo contrario false.\n   */\n  findUser(email: string): boolean {\n    console.log('Buscando usuario:', { email });\n    const user = this.users.find(user => user.email === email);\n    if (user) {\n      this.mostrarAlerta('Usuario encontrado.', 'success');\n      console.log('Usuario encontrado:', user);\n      return true;\n    } else {\n      this.mostrarAlerta('Usuario no encontrado.', 'danger');\n      console.log('Usuario no encontrado.');\n      return false;\n    }\n  }\n\n  /**\n   * @description \n   * Obtiene la lista de todos los usuarios.\n   * \n   * @return {User[]} - Un array de objetos User.\n   */\n  getUsers(): User[] {\n    return JSON.parse(localStorage.getItem(this.storageKey) || '[]');\n  }\n\n  /**\n   * @description \n   * Agrega un nuevo usuario a la lista y guarda en localStorage.\n   * \n   * @param {User} user - El usuario a agregar.\n   * @return {void}\n   */\n  addUser(user: User): void {\n    const users = this.getUsers();\n    users.push(user);\n    localStorage.setItem(this.storageKey, JSON.stringify(users));\n  }\n\n  /**\n   * @description \n   * Actualiza un usuario existente.\n   * \n   * @param {number} index - El índice del usuario a actualizar.\n   * @param {User} updatedUser - Los datos actualizados del usuario.\n   * @return {void}\n   */\n  updateUser(index: number, updatedUser: User): void {\n    const users = this.getUsers();\n    users[index] = updatedUser;\n    localStorage.setItem(this.storageKey, JSON.stringify(users));\n  }\n\n  /**\n   * @description \n   * Elimina un usuario de la lista y de localStorage.\n   * \n   * @param {number} index - El índice del usuario a eliminar.\n   * @return {void}\n   */\n  deleteUser(index: number): void {\n    const users = this.getUsers();\n    users.splice(index, 1);\n    localStorage.setItem(this.storageKey, JSON.stringify(users));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User-1.html":{"url":"interfaces/User-1.html","title":"interface - User-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin-user-management/admin-user-management.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            profile\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profile:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, AfterViewInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NavigationService } from '../../services/navigation.service';\nimport { UsersService } from '../../services/users.service';\ndeclare var bootstrap: any;\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\n\ninterface User {\n  name: string;\n  email: string;\n  password: string;\n  profile: string;\n}\n\n@Component({\n  selector: 'app-admin-user-management',\n  standalone: true,\n  imports: [CommonModule, RouterModule, FormsModule],\n  templateUrl: './admin-user-management.component.html',\n  styleUrl: './admin-user-management.component.scss'\n})\nexport class AdminUserManagementComponent implements OnInit, AfterViewInit {\n\n  constructor(\n    private navigationService: NavigationService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private userService: UsersService,\n    private usersService: UsersService,\n    private router: Router\n  ) { }\n\n  ngAfterViewInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      const links = document.querySelectorAll('a');\n      links.forEach(link => {\n        link.addEventListener('click', (event: Event) => {\n          event.preventDefault();\n          const target = event.target as HTMLElement;\n          const href = target.getAttribute('href');\n          if (href) {\n            this.navigationService.navigateWithDelay(href);\n          }\n        });\n      });\n    }\n  }\n\n  users: User[] = [];\n  newUser: User = { name: '', email: '', password: '', profile: '' };\n  selectedUser: User = { name: '', email: '', password: '', profile: '' };\n  selectedIndex: number | null = null;\n\n  ngOnInit(): void {\n    if (this.userService.isLocalStorageAvailable()) {\n      this.loadUsers();\n    }\n    this.checkLoginState();\n  }\n\n  loadUsers(): void {\n    this.users = this.userService.getUsers();\n  }\n\n  onAddUser(): void {\n    this.userService.addUser(this.newUser);\n    this.newUser = { name: '', email: '', password: '', profile: '' };\n    this.loadUsers();\n    // Close modal\n    const addUserModal = document.getElementById('addUserModal');\n    const modalInstance = bootstrap.Modal.getInstance(addUserModal);\n    modalInstance.hide();\n  }\n\n  editUser(index: number): void {\n    this.selectedUser = { ...this.users[index] };\n    this.selectedIndex = index;\n    // Show modal\n    const editUserModal = new bootstrap.Modal(document.getElementById('editUserModal'));\n    editUserModal.show();\n  }\n\n  onUpdateUser(): void {\n    if (this.selectedIndex !== null) {\n      this.userService.updateUser(this.selectedIndex, this.selectedUser);\n      this.selectedUser = { name: '', email: '', password: '', profile: '' };\n      this.selectedIndex = null;\n      this.loadUsers();\n      // Close modal\n      const editUserModal = document.getElementById('editUserModal');\n      const modalInstance = bootstrap.Modal.getInstance(editUserModal);\n      modalInstance.hide();\n    }\n  }\n\n  deleteUser(index: number): void {\n    this.userService.deleteUser(index);\n    this.loadUsers();\n  }\n\n  checkLoginState(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.usersService.checkLoginState()) {\n        // Redirigir al administrador\n        //this.router.navigate(['/admin-user-management']);\n        console.log('Usuario logueado.');\n      } else {\n        // Redirigir al administrador\n        this.router.navigate(['/admin-login']);\n        console.log('Usuario no logueado.');\n      }\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Users.html":{"url":"interfaces/Users.html","title":"interface - Users","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Users\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/users.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            profile\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profile:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CryptoService } from './crypto.service';\n\ninterface Users {\n  name: string;\n  email: string;\n  password: string;\n  profile: string;\n}\n\ninterface Profile {\n  id: number;\n  name: string;\n}\n\ninterface User {\n  name: string;\n  email: string;\n  password: string;\n  profile: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  private users: Users[] = [];\n  private profiles: Profile[] = [];\n  private storageKey = 'users';\n\n  /**\n   * @description \n   * Constructor del servicio. Carga los perfiles y usuarios desde localStorage.\n   * \n   * @param {CryptoService} cryptoService - Servicio para encriptar y desencriptar datos.\n   */\n  constructor(private cryptoService: CryptoService) {\n    if (this.isLocalStorageAvailable()) {\n      const profilesSaved = localStorage.getItem('profiles');\n      this.profiles = profilesSaved ? JSON.parse(profilesSaved) : [];\n      const usersSaved = localStorage.getItem('users');\n      this.users = usersSaved ? JSON.parse(usersSaved) : [];\n    } else {\n      this.users = [];\n      this.profiles = [];\n    }\n  }\n\n  /**\n   * @description \n   * Registra un nuevo perfil de usuario.\n   * \n   * @param {number} id - El ID del perfil.\n   * @param {string} name - El nombre del perfil.\n   * @return {boolean} - Retorna true si el perfil fue registrado exitosamente, de lo contrario false.\n   */\n  registerProfile(id: number, name: string): boolean {\n    console.log('Intentando registrar perfil de usuario:', { id, name });\n    const profileExisting = this.profiles.find(profile => profile.id === id);\n    if (profileExisting) {\n      this.mostrarAlerta('El perfil de usuario ya existe.', 'danger');\n      console.log('El perfil de usuario ya existe.');\n      return false;\n    }\n\n    const newProfile: Profile = { id, name };\n    this.profiles.push(newProfile);\n    if (this.isLocalStorageAvailable()) {\n      localStorage.setItem('profiles', JSON.stringify(this.profiles));\n    }\n    this.mostrarAlerta('Perfil de usuario registrado exitosamente.', 'success');\n    console.log('Perfil de usuario registrado exitosamente:', newProfile);\n    return true;\n  }\n\n  /**\n   * @description \n   * Registra un nuevo usuario.\n   * \n   * @param {string} name - El nombre del usuario.\n   * @param {string} email - El correo electrónico del usuario.\n   * @param {string} password - La contraseña del usuario.\n   * @param {string} profile - El perfil del usuario.\n   * @return {boolean} - Retorna true si el usuario fue registrado exitosamente, de lo contrario false.\n   */\n  registerUser(name: string, email: string, password: string, profile: string): boolean {\n    console.log('Intentando registrar usuario:', { name, email, profile });\n    const userExisting = this.users.find(user => user.email === email);\n    if (userExisting) {\n      this.mostrarAlerta('El usuario ya existe.', 'danger');\n      console.log('El usuario ya existe.');\n      return false;\n    }\n\n    const newUser: Users = { name, email, password, profile };\n    this.users.push(newUser);\n    if (this.isLocalStorageAvailable()) {\n      localStorage.setItem('users', JSON.stringify(this.users));\n    }\n    this.mostrarAlerta('Usuario registrado exitosamente.', 'success');\n    console.log('Usuario registrado exitosamente:', newUser);\n    return true;\n  }\n\n  /**\n   * @description \n   * Actualiza un usuario existente.\n   * \n   * @param {string} name - El nombre del usuario.\n   * @param {string} email - El correo electrónico del usuario.\n   * @param {string} password - La contraseña del usuario.\n   * @param {string} profile - El perfil del usuario.\n   * @return {boolean} - Retorna true si el usuario fue actualizado exitosamente, de lo contrario false.\n   */\n  updatedUser(name: string, email: string, password: string, profile: string): boolean {\n    console.log('Intentando actualizar usuario:', { name, email, password, profile });\n    const userExisting = this.users.find(user => user.email === email);\n    if (userExisting) {\n      const userIndex = this.users.findIndex(user => user.email === email);\n      if (userIndex !== -1) {\n        password = this.cryptoService.encrypt(password);\n        this.users[userIndex] = { name: name, email: email, password: password, profile: profile };\n        localStorage.setItem('users', JSON.stringify(this.users));\n\n        this.mostrarAlerta('Usuario actualizado exitosamente.', 'success');\n        console.log('Usuario actualizado exitosamente:', this.users[userIndex]);\n        return true;\n      } else {\n        this.mostrarAlerta('Error al actualizar el usuario.', 'danger');\n        console.log('Error al actualizar el usuario:', email);\n        return false;\n      }\n    }\n\n    this.mostrarAlerta('Usuario no actualizado.', 'danger');\n    console.log('Usuario no actualizado:', email);\n    return false;\n  }\n\n  /**\n   * @description \n   * Inicia sesión de un usuario.\n   * \n   * @param {string} email - El correo electrónico del usuario.\n   * @param {string} password - La contraseña del usuario.\n   * @return {boolean} - Retorna true si el inicio de sesión fue exitoso, de lo contrario false.\n   */\n  iniciarSesion(email: string, password: string): boolean {\n    console.log('Intentando iniciar sesión:', { email, password });\n    // const user = this.users.find(user => user.email === email && this.cryptoService.decrypt(user.password) === password);\n    const user = this.users.find(user => user.email.trim() === email.trim() && user.password.trim() === password.trim());\n    console.log('Estado sesión:', user);\n    if (user) {\n      this.mostrarAlerta('Inicio de sesión exitoso.', 'success');\n      console.log('Inicio de sesión exitoso:', user);\n      this.setLoginState(user);\n      return true;\n    } else {\n      this.mostrarAlerta('Email o contraseña incorrectos.', 'danger');\n      console.log('Email o contraseña incorrectos.');\n      return false;\n    }\n  }\n\n  /**\n   * @description \n   * Muestra una alerta en la interfaz de usuario.\n   * \n   * @param {string} mensaje - El mensaje de la alerta.\n   * @param {string} tipo - El tipo de alerta (e.g., 'success', 'danger').\n   */\n  private mostrarAlerta(mensaje: string, tipo: string): void {\n    const alertaDiv = document.createElement('div');\n    alertaDiv.className = `alert alert-${tipo}`;\n    alertaDiv.appendChild(document.createTextNode(mensaje));\n    const container = document.querySelector('.container');\n    if (container) {\n      const firstChild = container.firstChild;\n      if (firstChild) {\n        container.insertBefore(alertaDiv, firstChild);\n      } else {\n        container.appendChild(alertaDiv);\n      }\n\n      setTimeout(() => {\n        const alerta = document.querySelector('.alert');\n        if (alerta) {\n          alerta.remove();\n        }\n      }, 6000);\n    }\n  }\n\n  /**\n   * @description \n   * Verifica si localStorage está disponible.\n   * \n   * @return {boolean} - Retorna true si localStorage está disponible, de lo contrario false.\n   */\n  isLocalStorageAvailable(): boolean {\n    try {\n      const test = '__test__';\n      localStorage.setItem(test, test);\n      localStorage.removeItem(test);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * @description \n   * Establece el estado de inicio de sesión del usuario.\n   * \n   * @param {any} user - El usuario que ha iniciado sesión.\n   */\n  setLoginState(user: any): void {\n    if (this.isLocalStorageAvailable()) {\n      localStorage.setItem('loggedInUser', JSON.stringify(user));\n    }\n  }\n\n  /**\n   * @description \n   * Verifica el estado de inicio de sesión del usuario.\n   * \n   * @return {boolean} - Retorna true si el usuario ha iniciado sesión, de lo contrario false.\n   */\n  checkLoginState(): boolean {\n    if (this.isLocalStorageAvailable()) {\n      const loggedInUser = JSON.parse(localStorage.getItem('loggedInUser') || 'null');\n      return loggedInUser !== null;\n    }\n    return false;\n  }\n\n  /**\n   * @description Cierra la sesión del usuario.\n   */\n  logout(): void {\n    if (this.isLocalStorageAvailable()) {\n      console.log('Logout usuario.');\n      localStorage.removeItem('loggedInUser');\n    }\n  }\n\n  /**\n   * @description \n   * Busca un usuario por su correo electrónico.\n   * \n   * @param {string} email - El correo electrónico del usuario.\n   * @return {boolean} - Retorna true si el usuario fue encontrado, de lo contrario false.\n   */\n  findUser(email: string): boolean {\n    console.log('Buscando usuario:', { email });\n    const user = this.users.find(user => user.email === email);\n    if (user) {\n      this.mostrarAlerta('Usuario encontrado.', 'success');\n      console.log('Usuario encontrado:', user);\n      return true;\n    } else {\n      this.mostrarAlerta('Usuario no encontrado.', 'danger');\n      console.log('Usuario no encontrado.');\n      return false;\n    }\n  }\n\n  /**\n   * @description \n   * Obtiene la lista de todos los usuarios.\n   * \n   * @return {User[]} - Un array de objetos User.\n   */\n  getUsers(): User[] {\n    return JSON.parse(localStorage.getItem(this.storageKey) || '[]');\n  }\n\n  /**\n   * @description \n   * Agrega un nuevo usuario a la lista y guarda en localStorage.\n   * \n   * @param {User} user - El usuario a agregar.\n   * @return {void}\n   */\n  addUser(user: User): void {\n    const users = this.getUsers();\n    users.push(user);\n    localStorage.setItem(this.storageKey, JSON.stringify(users));\n  }\n\n  /**\n   * @description \n   * Actualiza un usuario existente.\n   * \n   * @param {number} index - El índice del usuario a actualizar.\n   * @param {User} updatedUser - Los datos actualizados del usuario.\n   * @return {void}\n   */\n  updateUser(index: number, updatedUser: User): void {\n    const users = this.getUsers();\n    users[index] = updatedUser;\n    localStorage.setItem(this.storageKey, JSON.stringify(users));\n  }\n\n  /**\n   * @description \n   * Elimina un usuario de la lista y de localStorage.\n   * \n   * @param {number} index - El índice del usuario a eliminar.\n   * @return {void}\n   */\n  deleteUser(index: number): void {\n    const users = this.getUsers();\n    users.splice(index, 1);\n    localStorage.setItem(this.storageKey, JSON.stringify(users));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                profiles\n                            \n                            \n                                    Private\n                                storageKey\n                            \n                            \n                                    Private\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                checkLoginState\n                            \n                            \n                                deleteUser\n                            \n                            \n                                findUser\n                            \n                            \n                                getUsers\n                            \n                            \n                                iniciarSesion\n                            \n                            \n                                isLocalStorageAvailable\n                            \n                            \n                                logout\n                            \n                            \n                                    Private\n                                mostrarAlerta\n                            \n                            \n                                registerProfile\n                            \n                            \n                                registerUser\n                            \n                            \n                                setLoginState\n                            \n                            \n                                updatedUser\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cryptoService: CryptoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/users.service.ts:29\n                            \n                        \n\n                \n                    \n                            Constructor del servicio. Carga los perfiles y usuarios desde localStorage.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cryptoService\n                                                  \n                                                        \n                                                                        CryptoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio para encriptar y desencriptar datos.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addUser\n                        \n                    \n                \n            \n            \n                \naddUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/users.service.ts:285\n                        \n                    \n\n\n            \n                \n                        Agrega un nuevo usuario a la lista y guarda en localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl usuario a agregar.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkLoginState\n                        \n                    \n                \n            \n            \n                \ncheckLoginState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/users.service.ts:229\n                        \n                    \n\n\n            \n                \n                        Verifica el estado de inicio de sesión del usuario.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nRetorna true si el usuario ha iniciado sesión, de lo contrario false.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/users.service.ts:312\n                        \n                    \n\n\n            \n                \n                        Elimina un usuario de la lista y de localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl índice del usuario a eliminar.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findUser\n                        \n                    \n                \n            \n            \n                \nfindUser(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/users.service.ts:254\n                        \n                    \n\n\n            \n                \n                        Busca un usuario por su correo electrónico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl correo electrónico del usuario.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nRetorna true si el usuario fue encontrado, de lo contrario false.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/users.service.ts:274\n                        \n                    \n\n\n            \n                \n                        Obtiene la lista de todos los usuarios.\n\n\n                        \n                            Returns :     User[]\n\n                        \n                            \n                                \nUn array de objetos User.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iniciarSesion\n                        \n                    \n                \n            \n            \n                \niniciarSesion(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/users.service.ts:148\n                        \n                    \n\n\n            \n                \n                        Inicia sesión de un usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl correo electrónico del usuario.\n\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLa contraseña del usuario.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nRetorna true si el inicio de sesión fue exitoso, de lo contrario false.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLocalStorageAvailable\n                        \n                    \n                \n            \n            \n                \nisLocalStorageAvailable()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/users.service.ts:200\n                        \n                    \n\n\n            \n                \n                        Verifica si localStorage está disponible.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nRetorna true si localStorage está disponible, de lo contrario false.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/users.service.ts:240\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mostrarAlerta\n                        \n                    \n                \n            \n            \n                \n                        \n                    mostrarAlerta(mensaje: string, tipo: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/users.service.ts:172\n                        \n                    \n\n\n            \n                \n                        Muestra una alerta en la interfaz de usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mensaje\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl mensaje de la alerta.\n\n\n                                            \n                                        \n                                        \n                                                tipo\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl tipo de alerta (e.g., 'success', 'danger').\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerProfile\n                        \n                    \n                \n            \n            \n                \nregisterProfile(id: number, name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/users.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Registra un nuevo perfil de usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl ID del perfil.\n\n\n                                            \n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl nombre del perfil.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nRetorna true si el perfil fue registrado exitosamente, de lo contrario false.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser(name: string, email: string, password: string, profile: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/users.service.ts:86\n                        \n                    \n\n\n            \n                \n                        Registra un nuevo usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl nombre del usuario.\n\n\n                                            \n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl correo electrónico del usuario.\n\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLa contraseña del usuario.\n\n\n                                            \n                                        \n                                        \n                                                profile\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl perfil del usuario.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nRetorna true si el usuario fue registrado exitosamente, de lo contrario false.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLoginState\n                        \n                    \n                \n            \n            \n                \nsetLoginState(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/users.service.ts:217\n                        \n                    \n\n\n            \n                \n                        Establece el estado de inicio de sesión del usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl usuario que ha iniciado sesión.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedUser\n                        \n                    \n                \n            \n            \n                \nupdatedUser(name: string, email: string, password: string, profile: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/users.service.ts:115\n                        \n                    \n\n\n            \n                \n                        Actualiza un usuario existente.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl nombre del usuario.\n\n\n                                            \n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl correo electrónico del usuario.\n\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLa contraseña del usuario.\n\n\n                                            \n                                        \n                                        \n                                                profile\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl perfil del usuario.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nRetorna true si el usuario fue actualizado exitosamente, de lo contrario false.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(index: number, updatedUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/users.service.ts:299\n                        \n                    \n\n\n            \n                \n                        Actualiza un usuario existente.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl índice del usuario a actualizar.\n\n\n                                            \n                                        \n                                        \n                                                updatedUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLos datos actualizados del usuario.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        profiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Profile[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/users.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        storageKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'users'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/users.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Users[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/users.service.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CryptoService } from './crypto.service';\n\ninterface Users {\n  name: string;\n  email: string;\n  password: string;\n  profile: string;\n}\n\ninterface Profile {\n  id: number;\n  name: string;\n}\n\ninterface User {\n  name: string;\n  email: string;\n  password: string;\n  profile: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  private users: Users[] = [];\n  private profiles: Profile[] = [];\n  private storageKey = 'users';\n\n  /**\n   * @description \n   * Constructor del servicio. Carga los perfiles y usuarios desde localStorage.\n   * \n   * @param {CryptoService} cryptoService - Servicio para encriptar y desencriptar datos.\n   */\n  constructor(private cryptoService: CryptoService) {\n    if (this.isLocalStorageAvailable()) {\n      const profilesSaved = localStorage.getItem('profiles');\n      this.profiles = profilesSaved ? JSON.parse(profilesSaved) : [];\n      const usersSaved = localStorage.getItem('users');\n      this.users = usersSaved ? JSON.parse(usersSaved) : [];\n    } else {\n      this.users = [];\n      this.profiles = [];\n    }\n  }\n\n  /**\n   * @description \n   * Registra un nuevo perfil de usuario.\n   * \n   * @param {number} id - El ID del perfil.\n   * @param {string} name - El nombre del perfil.\n   * @return {boolean} - Retorna true si el perfil fue registrado exitosamente, de lo contrario false.\n   */\n  registerProfile(id: number, name: string): boolean {\n    console.log('Intentando registrar perfil de usuario:', { id, name });\n    const profileExisting = this.profiles.find(profile => profile.id === id);\n    if (profileExisting) {\n      this.mostrarAlerta('El perfil de usuario ya existe.', 'danger');\n      console.log('El perfil de usuario ya existe.');\n      return false;\n    }\n\n    const newProfile: Profile = { id, name };\n    this.profiles.push(newProfile);\n    if (this.isLocalStorageAvailable()) {\n      localStorage.setItem('profiles', JSON.stringify(this.profiles));\n    }\n    this.mostrarAlerta('Perfil de usuario registrado exitosamente.', 'success');\n    console.log('Perfil de usuario registrado exitosamente:', newProfile);\n    return true;\n  }\n\n  /**\n   * @description \n   * Registra un nuevo usuario.\n   * \n   * @param {string} name - El nombre del usuario.\n   * @param {string} email - El correo electrónico del usuario.\n   * @param {string} password - La contraseña del usuario.\n   * @param {string} profile - El perfil del usuario.\n   * @return {boolean} - Retorna true si el usuario fue registrado exitosamente, de lo contrario false.\n   */\n  registerUser(name: string, email: string, password: string, profile: string): boolean {\n    console.log('Intentando registrar usuario:', { name, email, profile });\n    const userExisting = this.users.find(user => user.email === email);\n    if (userExisting) {\n      this.mostrarAlerta('El usuario ya existe.', 'danger');\n      console.log('El usuario ya existe.');\n      return false;\n    }\n\n    const newUser: Users = { name, email, password, profile };\n    this.users.push(newUser);\n    if (this.isLocalStorageAvailable()) {\n      localStorage.setItem('users', JSON.stringify(this.users));\n    }\n    this.mostrarAlerta('Usuario registrado exitosamente.', 'success');\n    console.log('Usuario registrado exitosamente:', newUser);\n    return true;\n  }\n\n  /**\n   * @description \n   * Actualiza un usuario existente.\n   * \n   * @param {string} name - El nombre del usuario.\n   * @param {string} email - El correo electrónico del usuario.\n   * @param {string} password - La contraseña del usuario.\n   * @param {string} profile - El perfil del usuario.\n   * @return {boolean} - Retorna true si el usuario fue actualizado exitosamente, de lo contrario false.\n   */\n  updatedUser(name: string, email: string, password: string, profile: string): boolean {\n    console.log('Intentando actualizar usuario:', { name, email, password, profile });\n    const userExisting = this.users.find(user => user.email === email);\n    if (userExisting) {\n      const userIndex = this.users.findIndex(user => user.email === email);\n      if (userIndex !== -1) {\n        password = this.cryptoService.encrypt(password);\n        this.users[userIndex] = { name: name, email: email, password: password, profile: profile };\n        localStorage.setItem('users', JSON.stringify(this.users));\n\n        this.mostrarAlerta('Usuario actualizado exitosamente.', 'success');\n        console.log('Usuario actualizado exitosamente:', this.users[userIndex]);\n        return true;\n      } else {\n        this.mostrarAlerta('Error al actualizar el usuario.', 'danger');\n        console.log('Error al actualizar el usuario:', email);\n        return false;\n      }\n    }\n\n    this.mostrarAlerta('Usuario no actualizado.', 'danger');\n    console.log('Usuario no actualizado:', email);\n    return false;\n  }\n\n  /**\n   * @description \n   * Inicia sesión de un usuario.\n   * \n   * @param {string} email - El correo electrónico del usuario.\n   * @param {string} password - La contraseña del usuario.\n   * @return {boolean} - Retorna true si el inicio de sesión fue exitoso, de lo contrario false.\n   */\n  iniciarSesion(email: string, password: string): boolean {\n    console.log('Intentando iniciar sesión:', { email, password });\n    // const user = this.users.find(user => user.email === email && this.cryptoService.decrypt(user.password) === password);\n    const user = this.users.find(user => user.email.trim() === email.trim() && user.password.trim() === password.trim());\n    console.log('Estado sesión:', user);\n    if (user) {\n      this.mostrarAlerta('Inicio de sesión exitoso.', 'success');\n      console.log('Inicio de sesión exitoso:', user);\n      this.setLoginState(user);\n      return true;\n    } else {\n      this.mostrarAlerta('Email o contraseña incorrectos.', 'danger');\n      console.log('Email o contraseña incorrectos.');\n      return false;\n    }\n  }\n\n  /**\n   * @description \n   * Muestra una alerta en la interfaz de usuario.\n   * \n   * @param {string} mensaje - El mensaje de la alerta.\n   * @param {string} tipo - El tipo de alerta (e.g., 'success', 'danger').\n   */\n  private mostrarAlerta(mensaje: string, tipo: string): void {\n    const alertaDiv = document.createElement('div');\n    alertaDiv.className = `alert alert-${tipo}`;\n    alertaDiv.appendChild(document.createTextNode(mensaje));\n    const container = document.querySelector('.container');\n    if (container) {\n      const firstChild = container.firstChild;\n      if (firstChild) {\n        container.insertBefore(alertaDiv, firstChild);\n      } else {\n        container.appendChild(alertaDiv);\n      }\n\n      setTimeout(() => {\n        const alerta = document.querySelector('.alert');\n        if (alerta) {\n          alerta.remove();\n        }\n      }, 6000);\n    }\n  }\n\n  /**\n   * @description \n   * Verifica si localStorage está disponible.\n   * \n   * @return {boolean} - Retorna true si localStorage está disponible, de lo contrario false.\n   */\n  isLocalStorageAvailable(): boolean {\n    try {\n      const test = '__test__';\n      localStorage.setItem(test, test);\n      localStorage.removeItem(test);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * @description \n   * Establece el estado de inicio de sesión del usuario.\n   * \n   * @param {any} user - El usuario que ha iniciado sesión.\n   */\n  setLoginState(user: any): void {\n    if (this.isLocalStorageAvailable()) {\n      localStorage.setItem('loggedInUser', JSON.stringify(user));\n    }\n  }\n\n  /**\n   * @description \n   * Verifica el estado de inicio de sesión del usuario.\n   * \n   * @return {boolean} - Retorna true si el usuario ha iniciado sesión, de lo contrario false.\n   */\n  checkLoginState(): boolean {\n    if (this.isLocalStorageAvailable()) {\n      const loggedInUser = JSON.parse(localStorage.getItem('loggedInUser') || 'null');\n      return loggedInUser !== null;\n    }\n    return false;\n  }\n\n  /**\n   * @description Cierra la sesión del usuario.\n   */\n  logout(): void {\n    if (this.isLocalStorageAvailable()) {\n      console.log('Logout usuario.');\n      localStorage.removeItem('loggedInUser');\n    }\n  }\n\n  /**\n   * @description \n   * Busca un usuario por su correo electrónico.\n   * \n   * @param {string} email - El correo electrónico del usuario.\n   * @return {boolean} - Retorna true si el usuario fue encontrado, de lo contrario false.\n   */\n  findUser(email: string): boolean {\n    console.log('Buscando usuario:', { email });\n    const user = this.users.find(user => user.email === email);\n    if (user) {\n      this.mostrarAlerta('Usuario encontrado.', 'success');\n      console.log('Usuario encontrado:', user);\n      return true;\n    } else {\n      this.mostrarAlerta('Usuario no encontrado.', 'danger');\n      console.log('Usuario no encontrado.');\n      return false;\n    }\n  }\n\n  /**\n   * @description \n   * Obtiene la lista de todos los usuarios.\n   * \n   * @return {User[]} - Un array de objetos User.\n   */\n  getUsers(): User[] {\n    return JSON.parse(localStorage.getItem(this.storageKey) || '[]');\n  }\n\n  /**\n   * @description \n   * Agrega un nuevo usuario a la lista y guarda en localStorage.\n   * \n   * @param {User} user - El usuario a agregar.\n   * @return {void}\n   */\n  addUser(user: User): void {\n    const users = this.getUsers();\n    users.push(user);\n    localStorage.setItem(this.storageKey, JSON.stringify(users));\n  }\n\n  /**\n   * @description \n   * Actualiza un usuario existente.\n   * \n   * @param {number} index - El índice del usuario a actualizar.\n   * @param {User} updatedUser - Los datos actualizados del usuario.\n   * @return {void}\n   */\n  updateUser(index: number, updatedUser: User): void {\n    const users = this.getUsers();\n    users[index] = updatedUser;\n    localStorage.setItem(this.storageKey, JSON.stringify(users));\n  }\n\n  /**\n   * @description \n   * Elimina un usuario de la lista y de localStorage.\n   * \n   * @param {number} index - El índice del usuario a eliminar.\n   * @return {void}\n   */\n  deleteUser(index: number): void {\n    const users = this.getUsers();\n    users.splice(index, 1);\n    localStorage.setItem(this.storageKey, JSON.stringify(users));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                server.ts\n            \n            function\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server.ts\n            \n            function\n            run\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/admin-client-management/admin-client-management.component.ts\n            \n            component\n            AdminClientManagementComponent\n            \n                64 %\n                (9/14)\n            \n        \n        \n            \n                \n                src/app/components/admin-client-management/admin-client-management.component.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/admin-contact-management/admin-contact-management.component.ts\n            \n            component\n            AdminContactManagementComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/admin-contact-management/admin-contact-management.component.ts\n            \n            interface\n            Contact\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/admin-contact-management/admin-contact-management.component.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/admin-login/admin-login.component.ts\n            \n            component\n            AdminLoginComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/admin-logout/admin-logout.component.ts\n            \n            component\n            AdminLogoutComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/admin-order-monitoring/admin-order-monitoring.component.ts\n            \n            component\n            AdminOrderMonitoringComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/admin-order-monitoring/admin-order-monitoring.component.ts\n            \n            interface\n            Order\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/admin-order-monitoring/admin-order-monitoring.component.ts\n            \n            interface\n            Orderdetail\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/admin-user-management/admin-user-management.component.ts\n            \n            component\n            AdminUserManagementComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/admin-user-management/admin-user-management.component.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/admin-user-management/admin-user-management.component.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/cart/cart.component.ts\n            \n            component\n            CartComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/cart/cart.component.ts\n            \n            interface\n            CartItem\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/contact/contact.component.ts\n            \n            component\n            ContactComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/logout/logout.component.ts\n            \n            component\n            LogoutComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/password-recovery/password-recovery.component.ts\n            \n            component\n            PasswordRecoveryComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/product-catalog/product-catalog.component.ts\n            \n            component\n            ProductCatalogComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/product-detail-aluminio/product-detail-aluminio.component.ts\n            \n            component\n            ProductDetailAluminioComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/product-detail-aluminio/product-detail-aluminio.component.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/product-detail-croquera/product-detail-croquera.component.ts\n            \n            component\n            ProductDetailCroqueraComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/product-detail-croquera/product-detail-croquera.component.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/product-detail-cuaderno/product-detail-cuaderno.component.ts\n            \n            component\n            ProductDetailCuadernoComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/product-detail-cuaderno/product-detail-cuaderno.component.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/product-detail-libreta/product-detail-libreta.component.ts\n            \n            component\n            ProductDetailLibretaComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/product-detail-libreta/product-detail-libreta.component.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/product-detail-polera/product-detail-polera.component.ts\n            \n            component\n            ProductDetailPoleraComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/product-detail-polera/product-detail-polera.component.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/product-detail-tabla/product-detail-tabla.component.ts\n            \n            component\n            ProductDetailTablaComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/product-detail-tabla/product-detail-tabla.component.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                78 %\n                (11/14)\n            \n        \n        \n            \n                \n                src/app/components/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                src/app/services/contacts.service.ts\n            \n            injectable\n            ContactsService\n            \n                73 %\n                (11/15)\n            \n        \n        \n            \n                \n                src/app/services/contacts.service.ts\n            \n            interface\n            Contact\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/crypto.service.ts\n            \n            injectable\n            CryptoService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/services/customers.service.ts\n            \n            injectable\n            CustomersService\n            \n                82 %\n                (14/17)\n            \n        \n        \n            \n                \n                src/app/services/customers.service.ts\n            \n            interface\n            Customer\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/navigation.service.ts\n            \n            injectable\n            NavigationService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/orders.service.ts\n            \n            injectable\n            OrdersService\n            \n                73 %\n                (17/23)\n            \n        \n        \n            \n                \n                src/app/services/orders.service.ts\n            \n            interface\n            Cart\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/orders.service.ts\n            \n            interface\n            Order\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/orders.service.ts\n            \n            interface\n            OrderDetail\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/users.service.ts\n            \n            injectable\n            UsersService\n            \n                73 %\n                (14/19)\n            \n        \n        \n            \n                \n                src/app/services/users.service.ts\n            \n            interface\n            Profile\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/users.service.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/users.service.ts\n            \n            interface\n            Users\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/forms : ^18.0.0\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/platform-server : ^18.0.0\n        \n            @angular/router : ^18.0.0\n        \n            @angular/ssr : ^18.0.5\n        \n            bootstrap : ^5.3.3\n        \n            bootstrap-icons : ^1.11.3\n        \n            bootswatch : ^5.3.3\n        \n            crypto-js : ^4.2.0\n        \n            express : ^4.18.2\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (server.ts)\n                        \n                        \n                            run   (server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n            \n                \napp()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     express.Express\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPuenteMagicoWeb\nThis project was generated with Angular CLI version 18.0.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    22 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    13 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            bootstrap   (src/.../admin-client-management.component.ts)\n                        \n                        \n                            bootstrap   (src/.../admin-contact-management.component.ts)\n                        \n                        \n                            bootstrap   (src/.../admin-user-management.component.ts)\n                        \n                        \n                            bootstrap   (src/.../product-detail-aluminio.component.ts)\n                        \n                        \n                            bootstrap   (src/.../product-detail-croquera.component.ts)\n                        \n                        \n                            bootstrap   (src/.../product-detail-cuaderno.component.ts)\n                        \n                        \n                            bootstrap   (src/.../product-detail-libreta.component.ts)\n                        \n                        \n                            bootstrap   (src/.../product-detail-polera.component.ts)\n                        \n                        \n                            bootstrap   (src/.../product-detail-tabla.component.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideClientHydration(), provideHttpClient(withFetch())]\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/components/admin-client-management/admin-client-management.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/app/components/admin-contact-management/admin-contact-management.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/app/components/admin-user-management/admin-user-management.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/app/components/product-detail-aluminio/product-detail-aluminio.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/app/components/product-detail-croquera/product-detail-croquera.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/app/components/product-detail-cuaderno/product-detail-cuaderno.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/app/components/product-detail-libreta/product-detail-libreta.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/app/components/product-detail-polera/product-detail-polera.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/app/components/product-detail-tabla/product-detail-tabla.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering()\n  ]\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
